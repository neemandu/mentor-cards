# this is an auto generated file. This will be overwritten
mutation CreateCardsPack(
  $input: CreateCardsPackInput!
  $condition: ModelCardsPackConditionInput
) {
  createCardsPack(input: $input, condition: $condition) {
    id
    imgUrl
    description
    tags
    categories
    cards
    cardsPreview
    usersIds
    groupsIds
    users {
      items {
        id
        packID
        userID
        pack {
          id
          imgUrl
          description
          tags
          categories
          cards
          cardsPreview
          usersIds
          groupsIds
          createdAt
          updatedAt
        }
        owner {
          id
          username
          email
          phone
          status
          numberOfPacksSubstitutions
          lastPackSubstitutionDate
          numberOfPlansSubstitutions
          lastPlanSubstitutionDate
          groupId
          isGroupOwner
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation UpdateCardsPack(
  $input: UpdateCardsPackInput!
  $condition: ModelCardsPackConditionInput
) {
  updateCardsPack(input: $input, condition: $condition) {
    id
    imgUrl
    description
    tags
    categories
    cards
    cardsPreview
    usersIds
    groupsIds
    users {
      items {
        id
        packID
        userID
        pack {
          id
          imgUrl
          description
          tags
          categories
          cards
          cardsPreview
          usersIds
          groupsIds
          createdAt
          updatedAt
        }
        owner {
          id
          username
          email
          phone
          status
          numberOfPacksSubstitutions
          lastPackSubstitutionDate
          numberOfPlansSubstitutions
          lastPlanSubstitutionDate
          groupId
          isGroupOwner
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation DeleteCardsPack(
  $input: DeleteCardsPackInput!
  $condition: ModelCardsPackConditionInput
) {
  deleteCardsPack(input: $input, condition: $condition) {
    id
    imgUrl
    description
    tags
    categories
    cards
    cardsPreview
    usersIds
    groupsIds
    users {
      items {
        id
        packID
        userID
        pack {
          id
          imgUrl
          description
          tags
          categories
          cards
          cardsPreview
          usersIds
          groupsIds
          createdAt
          updatedAt
        }
        owner {
          id
          username
          email
          phone
          status
          numberOfPacksSubstitutions
          lastPackSubstitutionDate
          numberOfPlansSubstitutions
          lastPlanSubstitutionDate
          groupId
          isGroupOwner
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation CreatePackOwner(
  $input: CreatePackOwnerInput!
  $condition: ModelPackOwnerConditionInput
) {
  createPackOwner(input: $input, condition: $condition) {
    id
    packID
    userID
    pack {
      id
      imgUrl
      description
      tags
      categories
      cards
      cardsPreview
      usersIds
      groupsIds
      users {
        items {
          id
          packID
          userID
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    owner {
      id
      username
      email
      phone
      cardsPacks {
        items {
          id
          packID
          userID
          createdAt
          updatedAt
        }
        nextToken
      }
      status
      subscription {
        id
        paymentProvider
        providerSubscriptionId
        subscriptionPlan {
          id
          name
          description
          providerPlanId
          createdAt
          updatedAt
        }
      }
      numberOfPacksSubstitutions
      lastPackSubstitutionDate
      numberOfPlansSubstitutions
      lastPlanSubstitutionDate
      groupId
      isGroupOwner
      groupUsers {
        items {
          id
          username
          email
          phone
          status
          numberOfPacksSubstitutions
          lastPackSubstitutionDate
          numberOfPlansSubstitutions
          lastPlanSubstitutionDate
          groupId
          isGroupOwner
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
mutation UpdatePackOwner(
  $input: UpdatePackOwnerInput!
  $condition: ModelPackOwnerConditionInput
) {
  updatePackOwner(input: $input, condition: $condition) {
    id
    packID
    userID
    pack {
      id
      imgUrl
      description
      tags
      categories
      cards
      cardsPreview
      usersIds
      groupsIds
      users {
        items {
          id
          packID
          userID
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    owner {
      id
      username
      email
      phone
      cardsPacks {
        items {
          id
          packID
          userID
          createdAt
          updatedAt
        }
        nextToken
      }
      status
      subscription {
        id
        paymentProvider
        providerSubscriptionId
        subscriptionPlan {
          id
          name
          description
          providerPlanId
          createdAt
          updatedAt
        }
      }
      numberOfPacksSubstitutions
      lastPackSubstitutionDate
      numberOfPlansSubstitutions
      lastPlanSubstitutionDate
      groupId
      isGroupOwner
      groupUsers {
        items {
          id
          username
          email
          phone
          status
          numberOfPacksSubstitutions
          lastPackSubstitutionDate
          numberOfPlansSubstitutions
          lastPlanSubstitutionDate
          groupId
          isGroupOwner
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
mutation DeletePackOwner(
  $input: DeletePackOwnerInput!
  $condition: ModelPackOwnerConditionInput
) {
  deletePackOwner(input: $input, condition: $condition) {
    id
    packID
    userID
    pack {
      id
      imgUrl
      description
      tags
      categories
      cards
      cardsPreview
      usersIds
      groupsIds
      users {
        items {
          id
          packID
          userID
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    owner {
      id
      username
      email
      phone
      cardsPacks {
        items {
          id
          packID
          userID
          createdAt
          updatedAt
        }
        nextToken
      }
      status
      subscription {
        id
        paymentProvider
        providerSubscriptionId
        subscriptionPlan {
          id
          name
          description
          providerPlanId
          createdAt
          updatedAt
        }
      }
      numberOfPacksSubstitutions
      lastPackSubstitutionDate
      numberOfPlansSubstitutions
      lastPlanSubstitutionDate
      groupId
      isGroupOwner
      groupUsers {
        items {
          id
          username
          email
          phone
          status
          numberOfPacksSubstitutions
          lastPackSubstitutionDate
          numberOfPlansSubstitutions
          lastPlanSubstitutionDate
          groupId
          isGroupOwner
          createdAt
          updatedAt
        }
        nextToken
      }
      createdAt
      updatedAt
    }
    createdAt
    updatedAt
  }
}
mutation CreateUser(
  $input: CreateUserInput!
  $condition: ModelUserConditionInput
) {
  createUser(input: $input, condition: $condition) {
    id
    username
    email
    phone
    cardsPacks {
      items {
        id
        packID
        userID
        pack {
          id
          imgUrl
          description
          tags
          categories
          cards
          cardsPreview
          usersIds
          groupsIds
          createdAt
          updatedAt
        }
        owner {
          id
          username
          email
          phone
          status
          numberOfPacksSubstitutions
          lastPackSubstitutionDate
          numberOfPlansSubstitutions
          lastPlanSubstitutionDate
          groupId
          isGroupOwner
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    status
    subscription {
      id
      paymentProvider
      providerSubscriptionId
      subscriptionPlan {
        id
        name
        description
        providerPlanId
        createdAt
        updatedAt
      }
    }
    numberOfPacksSubstitutions
    lastPackSubstitutionDate
    numberOfPlansSubstitutions
    lastPlanSubstitutionDate
    groupId
    isGroupOwner
    groupUsers {
      items {
        id
        username
        email
        phone
        cardsPacks {
          nextToken
        }
        status
        subscription {
          id
          paymentProvider
          providerSubscriptionId
        }
        numberOfPacksSubstitutions
        lastPackSubstitutionDate
        numberOfPlansSubstitutions
        lastPlanSubstitutionDate
        groupId
        isGroupOwner
        groupUsers {
          nextToken
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation UpdateUser(
  $input: UpdateUserInput!
  $condition: ModelUserConditionInput
) {
  updateUser(input: $input, condition: $condition) {
    id
    username
    email
    phone
    cardsPacks {
      items {
        id
        packID
        userID
        pack {
          id
          imgUrl
          description
          tags
          categories
          cards
          cardsPreview
          usersIds
          groupsIds
          createdAt
          updatedAt
        }
        owner {
          id
          username
          email
          phone
          status
          numberOfPacksSubstitutions
          lastPackSubstitutionDate
          numberOfPlansSubstitutions
          lastPlanSubstitutionDate
          groupId
          isGroupOwner
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    status
    subscription {
      id
      paymentProvider
      providerSubscriptionId
      subscriptionPlan {
        id
        name
        description
        providerPlanId
        createdAt
        updatedAt
      }
    }
    numberOfPacksSubstitutions
    lastPackSubstitutionDate
    numberOfPlansSubstitutions
    lastPlanSubstitutionDate
    groupId
    isGroupOwner
    groupUsers {
      items {
        id
        username
        email
        phone
        cardsPacks {
          nextToken
        }
        status
        subscription {
          id
          paymentProvider
          providerSubscriptionId
        }
        numberOfPacksSubstitutions
        lastPackSubstitutionDate
        numberOfPlansSubstitutions
        lastPlanSubstitutionDate
        groupId
        isGroupOwner
        groupUsers {
          nextToken
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation DeleteUser(
  $input: DeleteUserInput!
  $condition: ModelUserConditionInput
) {
  deleteUser(input: $input, condition: $condition) {
    id
    username
    email
    phone
    cardsPacks {
      items {
        id
        packID
        userID
        pack {
          id
          imgUrl
          description
          tags
          categories
          cards
          cardsPreview
          usersIds
          groupsIds
          createdAt
          updatedAt
        }
        owner {
          id
          username
          email
          phone
          status
          numberOfPacksSubstitutions
          lastPackSubstitutionDate
          numberOfPlansSubstitutions
          lastPlanSubstitutionDate
          groupId
          isGroupOwner
          createdAt
          updatedAt
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    status
    subscription {
      id
      paymentProvider
      providerSubscriptionId
      subscriptionPlan {
        id
        name
        description
        providerPlanId
        createdAt
        updatedAt
      }
    }
    numberOfPacksSubstitutions
    lastPackSubstitutionDate
    numberOfPlansSubstitutions
    lastPlanSubstitutionDate
    groupId
    isGroupOwner
    groupUsers {
      items {
        id
        username
        email
        phone
        cardsPacks {
          nextToken
        }
        status
        subscription {
          id
          paymentProvider
          providerSubscriptionId
        }
        numberOfPacksSubstitutions
        lastPackSubstitutionDate
        numberOfPlansSubstitutions
        lastPlanSubstitutionDate
        groupId
        isGroupOwner
        groupUsers {
          nextToken
        }
        createdAt
        updatedAt
      }
      nextToken
    }
    createdAt
    updatedAt
  }
}
mutation CreateSubscriptionPlan(
  $input: CreateSubscriptionPlanInput!
  $condition: ModelSubscriptionPlanConditionInput
) {
  createSubscriptionPlan(input: $input, condition: $condition) {
    id
    name
    description
    providerPlanId
    createdAt
    updatedAt
  }
}
mutation UpdateSubscriptionPlan(
  $input: UpdateSubscriptionPlanInput!
  $condition: ModelSubscriptionPlanConditionInput
) {
  updateSubscriptionPlan(input: $input, condition: $condition) {
    id
    name
    description
    providerPlanId
    createdAt
    updatedAt
  }
}
mutation DeleteSubscriptionPlan(
  $input: DeleteSubscriptionPlanInput!
  $condition: ModelSubscriptionPlanConditionInput
) {
  deleteSubscriptionPlan(input: $input, condition: $condition) {
    id
    name
    description
    providerPlanId
    createdAt
    updatedAt
  }
}
