{"version":3,"file":"node_modules_aws-amplify_ui-components_dist_esm_amplify-s3-image_entry_js.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMY,iBAAiB,GAAG,kHAA1B;AAEA,MAAMC,MAAM,GAAG,IAAIR,4DAAJ,CAAW,SAAX,CAAf;AACA,MAAMS,cAAc,GAAG,MAAM;AACzBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjBf,IAAAA,qDAAgB,CAAC,IAAD,EAAOe,OAAP,CAAhB;AACA;;AACA,SAAKC,WAAL,GAAmB,qBAAnB;AACA;;AACA,SAAKC,KAAL,GAAaX,gEAAb;AACH;;AACKa,EAAAA,YAAY,GAAG;AAAA;;AAAA;AACjB,YAAM,KAAI,CAACC,IAAL,EAAN;AADiB;AAEpB;;AACKC,EAAAA,iBAAiB,GAAG;AAAA;;AAAA;AACtB,YAAM,MAAI,CAACD,IAAL,EAAN;AADsB;AAEzB;;AACKA,EAAAA,IAAI,GAAG;AAAA;;AAAA;AACT,YAAM;AAAEE,QAAAA,MAAF;AAAUC,QAAAA,IAAV;AAAgBC,QAAAA,IAAhB;AAAsBR,QAAAA,WAAtB;AAAmCC,QAAAA,KAAnC;AAA0CQ,QAAAA,KAA1C;AAAiDC,QAAAA;AAAjD,UAAgE,MAAtE;;AACA,UAAI,CAACJ,MAAD,IAAW,CAACC,IAAhB,EAAsB;AAClBX,QAAAA,MAAM,CAACe,KAAP,CAAa,uBAAb;AACA;AACH;;AACD,YAAMC,GAAG,GAAGN,MAAM,IAAIC,IAAtB;AACAX,MAAAA,MAAM,CAACe,KAAP,CAAa,aAAaC,GAAb,GAAmB,KAAhC;;AACA,UAAI;AACA,YAAIJ,IAAJ,EAAU;AACN,gBAAMhB,+DAAgB,CAACc,MAAD,EAASE,IAAT,EAAeP,KAAf,EAAsBQ,KAAtB,EAA6BT,WAA7B,EAA0CJ,MAA1C,CAAtB;AACH;;AACD,cAAI,CAACiB,GAAL,SAAiBnB,+DAAgB,CAACkB,GAAD,EAAMX,KAAN,EAAaQ,KAAb,EAAoBC,UAApB,EAAgCd,MAAhC,CAAjC;AACH,OALD,CAMA,OAAOkB,GAAP,EAAY;AACRlB,QAAAA,MAAM,CAACe,KAAP,CAAaG,GAAb;AACA,cAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACH;AAjBQ;AAkBZ;;AACDE,EAAAA,MAAM,GAAG;AACL,WAAQ/B,qDAAC,CAACE,iDAAD,EAAO,IAAP,EAAa,KAAK0B,GAAL,IAAY5B,qDAAC,CAAC,KAAD,EAAQ;AAAE4B,MAAAA,GAAG,EAAE,KAAKA,GAAZ;AAAiBI,MAAAA,MAAM,EAAE,KAAKC,YAA9B;AAA4CC,MAAAA,OAAO,EAAE,KAAKC;AAA1D,KAAR,CAA1B,CAAT;AACH;;AACkB,aAARC,QAAQ,GAAG;AAAE,WAAO;AAC3B,cAAQ,CAAC,cAAD;AADmB,KAAP;AAEpB;;AAtCqB,CAA7B;AAwCAxB,cAAc,CAACyB,KAAf,GAAuB3B,iBAAvB","sources":["./node_modules/@aws-amplify/ui-components/dist/esm/amplify-s3-image.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-39969785.js';\nimport { Logger } from '@aws-amplify/core';\nimport { A as AccessLevel } from './storage-types-f257c0f2.js';\nimport './constants-d1abe7de.js';\nimport '@aws-amplify/storage';\nimport { p as putStorageObject, g as getStorageObject } from './storage-helpers-48c373a0.js';\n\nconst amplifyS3ImageCss = \":host{height:inherit;width:inherit;--height:inherit;--width:inherit}img{height:var(--height);width:var(--width)}\";\n\nconst logger = new Logger('S3Image');\nconst AmplifyS3Image = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The content type header used when uploading to S3 */\n        this.contentType = 'binary/octet-stream';\n        /** The access level of the image */\n        this.level = AccessLevel.Public;\n    }\n    async watchHandler() {\n        await this.load();\n    }\n    async componentWillLoad() {\n        await this.load();\n    }\n    async load() {\n        const { imgKey, path, body, contentType, level, track, identityId } = this;\n        if (!imgKey && !path) {\n            logger.debug('empty imgKey and path');\n            return;\n        }\n        const key = imgKey || path;\n        logger.debug('loading ' + key + '...');\n        try {\n            if (body) {\n                await putStorageObject(imgKey, body, level, track, contentType, logger);\n            }\n            this.src = await getStorageObject(key, level, track, identityId, logger);\n        }\n        catch (err) {\n            logger.debug(err);\n            throw new Error(err);\n        }\n    }\n    render() {\n        return (h(Host, null, this.src && h(\"img\", { src: this.src, onLoad: this.handleOnLoad, onError: this.handleOnError })));\n    }\n    static get watchers() { return {\n        \"body\": [\"watchHandler\"]\n    }; }\n};\nAmplifyS3Image.style = amplifyS3ImageCss;\n\nexport { AmplifyS3Image as amplify_s3_image };\n"],"names":["r","registerInstance","h","H","Host","Logger","A","AccessLevel","p","putStorageObject","g","getStorageObject","amplifyS3ImageCss","logger","AmplifyS3Image","constructor","hostRef","contentType","level","Public","watchHandler","load","componentWillLoad","imgKey","path","body","track","identityId","debug","key","src","err","Error","render","onLoad","handleOnLoad","onError","handleOnError","watchers","style","amplify_s3_image"],"sourceRoot":"webpack:///"}