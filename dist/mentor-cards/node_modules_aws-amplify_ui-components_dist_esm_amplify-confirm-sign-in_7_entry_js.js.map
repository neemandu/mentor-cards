{"version":3,"file":"node_modules_aws-amplify_ui-components_dist_esm_amplify-confirm-sign-in_7_entry_js.js","mappings":"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","sources":["./node_modules/@aws-amplify/ui-components/dist/esm/amplify-confirm-sign-in_7.entry.js"],"sourcesContent":["import { r as registerInstance, h, H as Host } from './index-39969785.js';\nimport { I18n, Logger, ConsoleLogger, isEmpty } from '@aws-amplify/core';\nimport { M as MfaOption, C as ChallengeName, A as AuthState, a as AuthFormField } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-3f32c42a.js';\nimport { N as NO_AUTH_MODULE_FOUND, h as COUNTRY_DIAL_CODE_DEFAULT } from './constants-d1abe7de.js';\nimport { d as dispatchAuthStateChangeEvent, a as dispatchToastHubEvent, c as checkUsernameAlias, i as isHintValid, h as handlePhoneNumberChange, b as composePhoneNumberInput, r as requiredAttributesMap } from './helpers-9a4b32d1.js';\nimport { c as checkContact, h as handleSignIn } from './auth-helpers-d97ec2fb.js';\n\nconst AmplifyConfirmSignIn = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Fires when confirm sign in form is submitted */\n        this.handleSubmit = event => this.confirm(event);\n        /** Used for header text in confirm sign in component */\n        this.headerText = Translations.CONFIRM_SMS_CODE;\n        /** Used for the submit button text in confirm sign in component */\n        this.submitButtonText = Translations.CONFIRM;\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /**\n         * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n         * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n         * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n         * ```\n         * [\n         *  {\n         *    type: string,\n         *    label: string,\n         *    placeholder: string,\n         *    hint: string | Functional Component | null,\n         *    required: boolean\n         *  }\n         * ]\n         * ```\n         */\n        this.formFields = [\n            {\n                type: 'code',\n                required: true,\n                handleInputChange: event => this.handleCodeChange(event),\n            },\n        ];\n        /** The MFA option to confirm with */\n        this.mfaOption = MfaOption.SMS;\n        /* Whether or not the confirm-sign-in component is loading */\n        this.loading = false;\n    }\n    componentWillLoad() {\n        if (this.user && this.user['challengeName'] === ChallengeName.SoftwareTokenMFA) {\n            this.mfaOption = MfaOption.TOTP;\n            // If header text is using default use TOTP string\n            if (this.headerText === Translations.CONFIRM_SMS_CODE) {\n                this.headerText = Translations.CONFIRM_TOTP_CODE;\n            }\n        }\n    }\n    handleCodeChange(event) {\n        this.code = event.target.value;\n    }\n    async confirm(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        const mfaType = this.user['challengeName'] === ChallengeName.SoftwareTokenMFA ? ChallengeName.SoftwareTokenMFA : null;\n        if (!Auth || typeof Auth.confirmSignIn !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        this.loading = true;\n        try {\n            await Auth.confirmSignIn(this.user, this.code, mfaType);\n            await checkContact(this.user, this.handleAuthStateChange);\n        }\n        catch (error) {\n            dispatchToastHubEvent(error);\n        }\n        finally {\n            this.loading = false;\n        }\n    }\n    render() {\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: this.handleSubmit, submitButtonText: I18n.get(this.submitButtonText), loading: this.loading, secondaryFooterContent: h(\"span\", null, h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.handleAuthStateChange(AuthState.SignIn) }, I18n.get(Translations.BACK_TO_SIGN_IN))) }, h(\"amplify-auth-fields\", { formFields: this.formFields }))));\n    }\n};\n\nconst AmplifyConfirmSignUp = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Fires when sign up form is submitted */\n        this.handleSubmit = event => this.confirmSignUp(event);\n        /** Used for header text in confirm sign up component */\n        this.headerText = Translations.CONFIRM_SIGN_UP_HEADER_TEXT;\n        /** Used for the submit button text in confirm sign up component */\n        this.submitButtonText = Translations.CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT;\n        /**\n         * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n         * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n         * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n         * ```\n         * [\n         *  {\n         *    type: string,\n         *    label: string,\n         *    placeholder: string,\n         *    hint: string | Functional Component | null,\n         *    required: boolean\n         *  }\n         * ]\n         * ```\n         */\n        this.formFields = [];\n        /** Auth state change handler for this components\n         * e.g. SignIn -> 'Create Account' link -> SignUp\n         */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n        this.usernameAlias = 'username';\n        this.loading = false;\n        this.userInput = this.user ? this.user.username : null;\n        this._signUpAttrs = this.user && this.user.signUpAttrs ? this.user.signUpAttrs : null;\n        this.newFormFields = [];\n        this.phoneNumber = {\n            countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n            phoneNumberValue: null,\n        };\n    }\n    componentWillLoad() {\n        checkUsernameAlias(this.usernameAlias);\n        this.buildFormFields();\n    }\n    formFieldsHandler() {\n        this.buildFormFields();\n    }\n    buildDefaultFormFields() {\n        this.newFormFields = [\n            {\n                type: `${this.usernameAlias}`,\n                required: true,\n                handleInputChange: this.handleFormFieldInputChange(`${this.usernameAlias}`),\n                value: this.userInput,\n                disabled: this.userInput ? true : false,\n            },\n            {\n                type: 'code',\n                label: I18n.get(Translations.CONFIRM_SIGN_UP_CODE_LABEL),\n                placeholder: I18n.get(Translations.CONFIRM_SIGN_UP_CODE_PLACEHOLDER),\n                required: true,\n                hint: (h(\"div\", null, I18n.get(Translations.CONFIRM_SIGN_UP_LOST_CODE), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.resendConfirmCode() }, I18n.get(Translations.CONFIRM_SIGN_UP_RESEND_CODE)))),\n                handleInputChange: this.handleFormFieldInputChange('code'),\n            },\n        ];\n    }\n    buildFormFields() {\n        if (this.formFields.length === 0) {\n            this.buildDefaultFormFields();\n        }\n        else {\n            const newFields = [];\n            this.formFields.forEach(field => {\n                const newField = Object.assign({}, field);\n                if (newField.type === 'code') {\n                    newField['hint'] = isHintValid(newField) ? (h(\"div\", null, I18n.get(Translations.CONFIRM_SIGN_UP_LOST_CODE), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.resendConfirmCode() }, I18n.get(Translations.CONFIRM_SIGN_UP_RESEND_CODE)))) : (newField['hint']);\n                }\n                newField['handleInputChange'] = event => this.handleFormFieldInputWithCallback(event, field);\n                newFields.push(newField);\n            });\n            this.newFormFields = newFields;\n        }\n    }\n    handleFormFieldInputChange(fieldType) {\n        switch (fieldType) {\n            case 'username':\n            case 'email':\n                return event => (this.userInput = event.target.value);\n            case 'phone_number':\n                return event => handlePhoneNumberChange(event, this.phoneNumber);\n            case 'code':\n                return event => (this.code = event.target.value);\n            default:\n                return;\n        }\n    }\n    setFieldValue(field) {\n        switch (field.type) {\n            case 'username':\n            case 'email':\n                if (field.value === undefined) {\n                    this.userInput = '';\n                }\n                else {\n                    this.userInput = field.value;\n                }\n                break;\n            case 'phone_number':\n                if (field.dialCode) {\n                    this.phoneNumber.countryDialCodeValue = field.dialCode;\n                }\n                this.phoneNumber.phoneNumberValue = field.value;\n                break;\n        }\n    }\n    handleFormFieldInputWithCallback(event, field) {\n        const fnToCall = field['handleInputChange']\n            ? field['handleInputChange']\n            : (event, cb) => {\n                cb(event);\n            };\n        const callback = this.handleFormFieldInputChange(field.type);\n        fnToCall(event, callback.bind(this));\n    }\n    async resendConfirmCode() {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!Auth || typeof Auth.resendSignUp !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        try {\n            if (!this.userInput)\n                throw new Error(Translations.EMPTY_USERNAME);\n            this.userInput = this.userInput.trim();\n            await Auth.resendSignUp(this.userInput);\n            this.handleAuthStateChange(AuthState.ConfirmSignUp);\n        }\n        catch (error) {\n            dispatchToastHubEvent(error);\n        }\n    }\n    // TODO: Add validation\n    // TODO: Prefix\n    async confirmSignUp(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!Auth || typeof Auth.confirmSignUp !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        this.loading = true;\n        switch (this.usernameAlias) {\n            case 'phone_number':\n                try {\n                    this.userInput = composePhoneNumberInput(this.phoneNumber);\n                }\n                catch (error) {\n                    dispatchToastHubEvent(error);\n                }\n        }\n        try {\n            if (!this.userInput)\n                throw new Error(Translations.EMPTY_USERNAME);\n            this.userInput = this.userInput.trim();\n            const confirmSignUpResult = await Auth.confirmSignUp(this.userInput, this.code);\n            if (!confirmSignUpResult) {\n                throw new Error(I18n.get(Translations.CONFIRM_SIGN_UP_FAILED));\n            }\n            if (this._signUpAttrs && this._signUpAttrs.password && this._signUpAttrs.password !== '') {\n                // Auto sign in user if password is available from previous workflow\n                await handleSignIn(this.userInput, this._signUpAttrs.password, this.handleAuthStateChange);\n            }\n            else {\n                this.handleAuthStateChange(AuthState.SignIn);\n            }\n        }\n        catch (error) {\n            dispatchToastHubEvent(error);\n        }\n        finally {\n            this.loading = false;\n        }\n    }\n    render() {\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), submitButtonText: I18n.get(this.submitButtonText), handleSubmit: this.handleSubmit, loading: this.loading, secondaryFooterContent: h(\"div\", null, h(\"span\", null, h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.handleAuthStateChange(AuthState.SignIn) }, I18n.get(Translations.BACK_TO_SIGN_IN)))) }, h(\"amplify-auth-fields\", { formFields: this.newFormFields }))));\n    }\n    static get watchers() { return {\n        \"formFields\": [\"formFieldsHandler\"]\n    }; }\n};\n\nconst logger = new Logger('ForgotPassword');\nconst AmplifyForgotPassword = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The header text of the forgot password section */\n        this.headerText = Translations.RESET_YOUR_PASSWORD;\n        /** The text displayed inside of the send code button for the form */\n        this.sendButtonText = Translations.SEND_CODE;\n        /** The text displayed inside of the submit button for the form */\n        this.submitButtonText = Translations.SUBMIT;\n        /** The form fields displayed inside of the forgot password form */\n        this.formFields = [];\n        /** The function called when making a request to reset password */\n        this.handleSend = event => this.send(event);\n        /** The function called when submitting a new password */\n        this.handleSubmit = event => this.submit(event);\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n        this.usernameAlias = 'username';\n        this.delivery = null;\n        this.loading = false;\n        this.phoneNumber = {\n            countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n            phoneNumberValue: null,\n        };\n        this.newFormFields = [];\n        this.forgotPasswordAttrs = {\n            userInput: '',\n            password: '',\n            code: '',\n        };\n    }\n    componentWillLoad() {\n        checkUsernameAlias(this.usernameAlias);\n        this.buildFormFields();\n    }\n    formFieldsHandler() {\n        this.buildFormFields();\n    }\n    buildFormFields() {\n        if (this.formFields.length === 0) {\n            this.buildDefaultFormFields();\n        }\n        else {\n            this.formFields.forEach(field => {\n                const newField = Object.assign({}, field);\n                newField['handleInputChange'] = event => this.handleFormFieldInputWithCallback(event, field);\n                this.newFormFields.push(newField);\n            });\n        }\n    }\n    buildDefaultFormFields() {\n        switch (this.usernameAlias) {\n            case 'email':\n                this.newFormFields = [\n                    {\n                        type: 'email',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('email'),\n                        inputProps: {\n                            'data-test': 'forgot-password-email-input',\n                        },\n                    },\n                ];\n                break;\n            case 'phone_number':\n                this.newFormFields = [\n                    {\n                        type: 'phone_number',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                        inputProps: {\n                            'data-test': 'forgot-password-phone-number-input',\n                        },\n                    },\n                ];\n                break;\n            case 'username':\n            default:\n                this.newFormFields = [\n                    {\n                        type: 'username',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('username'),\n                        inputProps: {\n                            'data-test': 'forgot-password-username-input',\n                        },\n                    },\n                ];\n                break;\n        }\n    }\n    handleFormFieldInputChange(fieldType) {\n        switch (fieldType) {\n            case 'username':\n            case 'email':\n                return event => (this.forgotPasswordAttrs.userInput = event.target.value);\n            case 'phone_number':\n                return event => handlePhoneNumberChange(event, this.phoneNumber);\n            case 'password':\n            case 'code':\n                return event => (this.forgotPasswordAttrs[fieldType] = event.target.value);\n            default:\n                return;\n        }\n    }\n    setFieldValue(field, formAttributes) {\n        switch (field.type) {\n            case 'username':\n            case 'email':\n                if (field.value === undefined) {\n                    formAttributes.userInput = '';\n                }\n                else {\n                    formAttributes.userInput = field.value;\n                }\n                break;\n            case 'phone_number':\n                if (field.dialCode) {\n                    this.phoneNumber.countryDialCodeValue = field.dialCode;\n                }\n                this.phoneNumber.phoneNumberValue = field.value;\n                break;\n            case 'password':\n            case 'code':\n                if (field.value === undefined) {\n                    formAttributes[field.type] = '';\n                }\n                else {\n                    formAttributes[field.type] = field.value;\n                }\n                break;\n        }\n    }\n    handleFormFieldInputWithCallback(event, field) {\n        const fnToCall = field['handleInputChange']\n            ? field['handleInputChange']\n            : (event, cb) => {\n                cb(event);\n            };\n        const callback = this.handleFormFieldInputChange(field.type);\n        fnToCall(event, callback.bind(this));\n    }\n    async send(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!Auth || typeof Auth.forgotPassword !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        this.loading = true;\n        switch (this.usernameAlias) {\n            case 'phone_number':\n                try {\n                    this.forgotPasswordAttrs.userInput = composePhoneNumberInput(this.phoneNumber);\n                }\n                catch (error) {\n                    dispatchToastHubEvent(error);\n                }\n                break;\n        }\n        try {\n            const data = await Auth.forgotPassword(this.forgotPasswordAttrs.userInput.trim());\n            logger.debug(data);\n            this.newFormFields = [\n                {\n                    type: 'code',\n                    required: true,\n                    handleInputChange: this.handleFormFieldInputChange('code'),\n                    inputProps: {\n                        'data-test': 'forgot-password-code-input',\n                    },\n                },\n                {\n                    type: 'password',\n                    required: true,\n                    handleInputChange: this.handleFormFieldInputChange('password'),\n                    label: I18n.get(Translations.NEW_PASSWORD_LABEL),\n                    placeholder: I18n.get(Translations.NEW_PASSWORD_PLACEHOLDER),\n                },\n            ];\n            this.delivery = data.CodeDeliveryDetails;\n        }\n        catch (error) {\n            dispatchToastHubEvent(error);\n        }\n        finally {\n            this.loading = false;\n        }\n    }\n    async submit(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!Auth || typeof Auth.forgotPasswordSubmit !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        this.loading = true;\n        try {\n            const { userInput, code, password } = this.forgotPasswordAttrs;\n            const data = await Auth.forgotPasswordSubmit(userInput, code, password);\n            logger.debug(data);\n            this.handleAuthStateChange(AuthState.SignIn);\n            this.delivery = null;\n        }\n        catch (error) {\n            dispatchToastHubEvent(error);\n        }\n        finally {\n            this.loading = false;\n        }\n    }\n    render() {\n        const submitFn = this.delivery ? event => this.handleSubmit(event) : event => this.handleSend(event);\n        const submitButtonText = this.delivery ? this.submitButtonText : this.sendButtonText;\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: submitFn, loading: this.loading, secondaryFooterContent: h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.handleAuthStateChange(AuthState.SignIn), \"data-test\": \"forgot-password-back-to-sign-in-link\" }, I18n.get(Translations.BACK_TO_SIGN_IN)), testDataPrefix: 'forgot-password', submitButtonText: I18n.get(submitButtonText) }, h(\"amplify-auth-fields\", { formFields: this.newFormFields }))));\n    }\n    static get watchers() { return {\n        \"formFields\": [\"formFieldsHandler\"]\n    }; }\n};\n\nconst logger$1 = new ConsoleLogger('amplify-require-new-password');\nconst AmplifyRequireNewPassword = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The header text of the forgot password section */\n        this.headerText = Translations.CHANGE_PASSWORD;\n        /** The text displayed inside of the submit button for the form */\n        this.submitButtonText = Translations.CHANGE_PASSWORD_ACTION;\n        /** The function called when submitting a new password */\n        this.handleSubmit = event => this.completeNewPassword(event);\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** The form fields displayed inside of the forgot password form */\n        this.formFields = [\n            {\n                type: AuthFormField.Password,\n                required: true,\n                handleInputChange: event => this.handlePasswordChange(event),\n                label: I18n.get(Translations.NEW_PASSWORD_LABEL),\n                placeholder: I18n.get(Translations.NEW_PASSWORD_PLACEHOLDER),\n                inputProps: {\n                    'data-test': 'require-new-password-password-input',\n                },\n            },\n        ];\n        this.loading = false;\n        this.requiredAttributes = {};\n        this.newFormFields = this.formFields;\n    }\n    watchHandler() {\n        this.setCurrentUser();\n    }\n    handleRequiredAttributeInputChange(attribute, event) {\n        this.requiredAttributes[attribute] = event.target.value;\n    }\n    async setCurrentUser() {\n        if (!this.user) {\n            // Check for authenticated user\n            try {\n                const user = await Auth.currentAuthenticatedUser();\n                if (user)\n                    this.currentUser = user;\n            }\n            catch (error) {\n                dispatchToastHubEvent(error);\n            }\n        }\n        else {\n            this.currentUser = this.user;\n        }\n        if (this.currentUser && this.currentUser.challengeParam && this.currentUser.challengeParam.requiredAttributes) {\n            const userRequiredAttributes = this.currentUser.challengeParam.requiredAttributes;\n            userRequiredAttributes.forEach((attribute) => {\n                const formField = {\n                    type: attribute,\n                    required: true,\n                    label: requiredAttributesMap[attribute].label,\n                    placeholder: requiredAttributesMap[attribute].placeholder,\n                    handleInputChange: event => this.handleRequiredAttributeInputChange(attribute, event),\n                    inputProps: {\n                        'data-test': `require-new-password-${attribute}-input`,\n                    },\n                };\n                this.newFormFields = [...this.newFormFields, formField];\n            });\n        }\n    }\n    componentWillLoad() {\n        return this.setCurrentUser();\n    }\n    handlePasswordChange(event) {\n        this.password = event.target.value;\n    }\n    async completeNewPassword(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!Auth || typeof Auth.completeNewPassword !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        this.loading = true;\n        try {\n            const user = await Auth.completeNewPassword(this.currentUser, this.password, this.requiredAttributes);\n            logger$1.debug('complete new password', user);\n            switch (user.challengeName) {\n                case ChallengeName.SMSMFA:\n                    this.handleAuthStateChange(AuthState.ConfirmSignIn, user);\n                    break;\n                case ChallengeName.MFASetup:\n                    logger$1.debug('TOTP setup', user.challengeParam);\n                    this.handleAuthStateChange(AuthState.TOTPSetup, user);\n                    break;\n                default:\n                    await checkContact(user, this.handleAuthStateChange);\n            }\n        }\n        catch (error) {\n            dispatchToastHubEvent(error);\n        }\n        finally {\n            this.loading = false;\n        }\n    }\n    render() {\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: this.handleSubmit, loading: this.loading, secondaryFooterContent: h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.handleAuthStateChange(AuthState.SignIn) }, I18n.get(Translations.BACK_TO_SIGN_IN)), submitButtonText: I18n.get(this.submitButtonText) }, h(\"amplify-auth-fields\", { formFields: this.newFormFields }))));\n    }\n    static get watchers() { return {\n        \"user\": [\"watchHandler\"]\n    }; }\n};\n\nconst amplifySignInCss = \":host{--footer-size:var(--amplify-text-sm);--footer-color:var(--amplify-grey);--footer-font-family:var(--amplify-font-family);--font-weight:var(--amplify-font-weight)}.sign-in-form-footer{font-family:var(--footer-font-family);font-size:var(--footer-size);color:var(--footer-color);font-weight:--font-weight;display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.sign-in-form-footer amplify-button{margin-bottom:0.625rem}@media (min-width: 672px){.sign-in-form-footer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:baseline;align-items:baseline}.sign-in-form-footer amplify-button{margin-bottom:0}}.sign-in-form-footer *+*{margin-bottom:15px}\";\n\nconst AmplifySignIn = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Fires when sign in form is submitted */\n        this.handleSubmit = event => this.signIn(event);\n        /** Used for header text in sign in component */\n        this.headerText = Translations.SIGN_IN_HEADER_TEXT;\n        /** Used for the submit button text in sign in component */\n        this.submitButtonText = Translations.SIGN_IN_ACTION;\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n        this.usernameAlias = 'username';\n        /**\n         * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n         * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n         * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n         * ```\n         * [\n         *  {\n         *    type: string,\n         *    label: string,\n         *    placeholder: string,\n         *    hint: string | Functional Component | null,\n         *    required: boolean\n         *  }\n         * ]\n         * ```\n         */\n        this.formFields = [];\n        /** Hides the sign up link */\n        this.hideSignUp = false;\n        this.newFormFields = [];\n        /* Whether or not the sign-in component is loading */\n        this.loading = false;\n        this.phoneNumber = {\n            countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n            phoneNumberValue: null,\n        };\n        this.signInAttributes = {\n            userInput: '',\n            password: '',\n        };\n    }\n    componentWillLoad() {\n        checkUsernameAlias(this.usernameAlias);\n        this.buildFormFields();\n    }\n    formFieldsHandler() {\n        this.buildFormFields();\n    }\n    handleFormFieldInputChange(fieldType) {\n        switch (fieldType) {\n            case 'username':\n            case 'email':\n                return event => (this.signInAttributes.userInput = event.target.value);\n            case 'phone_number':\n                return event => handlePhoneNumberChange(event, this.phoneNumber);\n            case 'password':\n                return event => (this.signInAttributes.password = event.target.value);\n        }\n    }\n    handleFormFieldInputWithCallback(event, field) {\n        const fnToCall = field['handleInputChange']\n            ? field['handleInputChange']\n            : (event, cb) => {\n                cb(event);\n            };\n        const callback = this.handleFormFieldInputChange(field.type);\n        fnToCall(event, callback.bind(this));\n    }\n    async signIn(event) {\n        // avoid submitting the form\n        if (event) {\n            event.preventDefault();\n        }\n        this.loading = true;\n        switch (this.usernameAlias) {\n            case 'phone_number':\n                try {\n                    this.signInAttributes.userInput = composePhoneNumberInput(this.phoneNumber);\n                }\n                catch (error) {\n                    dispatchToastHubEvent(error);\n                }\n        }\n        const username = this.signInAttributes.userInput.trim();\n        await handleSignIn(username, this.signInAttributes.password, this.handleAuthStateChange);\n        this.loading = false;\n    }\n    buildDefaultFormFields() {\n        const formFieldInputs = [];\n        switch (this.usernameAlias) {\n            case 'email':\n                formFieldInputs.push({\n                    type: 'email',\n                    required: true,\n                    handleInputChange: this.handleFormFieldInputChange('email'),\n                    inputProps: {\n                        'data-test': 'sign-in-email-input',\n                    },\n                });\n                break;\n            case 'phone_number':\n                formFieldInputs.push({\n                    type: 'phone_number',\n                    required: true,\n                    handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                    inputProps: {\n                        'data-test': 'sign-in-phone-number-input',\n                    },\n                });\n                break;\n            case 'username':\n            default:\n                formFieldInputs.push({\n                    type: 'username',\n                    required: true,\n                    handleInputChange: this.handleFormFieldInputChange('username'),\n                    inputProps: {\n                        'data-test': 'sign-in-username-input',\n                    },\n                });\n                break;\n        }\n        formFieldInputs.push({\n            type: 'password',\n            hint: (h(\"div\", null, I18n.get(Translations.FORGOT_PASSWORD_TEXT), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.handleAuthStateChange(AuthState.ForgotPassword), \"data-test\": \"sign-in-forgot-password-link\" }, I18n.get(Translations.RESET_PASSWORD_TEXT)))),\n            required: true,\n            handleInputChange: this.handleFormFieldInputChange('password'),\n            inputProps: {\n                'data-test': 'sign-in-password-input',\n            },\n        });\n        this.newFormFields = [...formFieldInputs];\n    }\n    buildFormFields() {\n        if (this.formFields.length === 0) {\n            this.buildDefaultFormFields();\n        }\n        else {\n            const newFields = [];\n            this.formFields.forEach(field => {\n                const newField = Object.assign({}, field);\n                // TODO: handle hint better\n                if (newField.type === 'password') {\n                    newField['hint'] = isHintValid(newField) ? (h(\"div\", null, I18n.get(Translations.FORGOT_PASSWORD_TEXT), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.handleAuthStateChange(AuthState.ForgotPassword), \"data-test\": \"sign-in-forgot-password-link\" }, I18n.get(Translations.RESET_PASSWORD_TEXT)))) : (newField['hint']);\n                }\n                newField['handleInputChange'] = event => this.handleFormFieldInputWithCallback(event, field);\n                this.setFieldValue(newField, this.signInAttributes);\n                newFields.push(newField);\n            });\n            this.newFormFields = newFields;\n        }\n    }\n    setFieldValue(field, formAttributes) {\n        switch (field.type) {\n            case 'username':\n            case 'email':\n                if (field.value === undefined) {\n                    formAttributes.userInput = '';\n                }\n                else {\n                    formAttributes.userInput = field.value;\n                }\n                break;\n            case 'phone_number':\n                if (field.dialCode) {\n                    this.phoneNumber.countryDialCodeValue = field.dialCode;\n                }\n                this.phoneNumber.phoneNumberValue = field.value;\n                break;\n            case 'password':\n                if (field.value === undefined) {\n                    formAttributes.password = '';\n                }\n                else {\n                    formAttributes.password = field.value;\n                }\n                break;\n        }\n    }\n    render() {\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: this.handleSubmit, testDataPrefix: 'sign-in' }, h(\"div\", { slot: \"subtitle\" }, h(\"slot\", { name: \"header-subtitle\" })), h(\"slot\", { name: \"federated-buttons\" }, h(\"amplify-federated-buttons\", { handleAuthStateChange: this.handleAuthStateChange, federated: this.federated })), !isEmpty(this.federated) && h(\"amplify-strike\", null, \"or\"), h(\"amplify-auth-fields\", { formFields: this.newFormFields }), h(\"div\", { slot: \"amplify-form-section-footer\", class: \"sign-in-form-footer\" }, h(\"slot\", { name: \"footer\" }, h(\"slot\", { name: \"secondary-footer-content\" }, !this.hideSignUp ? (h(\"span\", null, I18n.get(Translations.NO_ACCOUNT_TEXT), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.handleAuthStateChange(AuthState.SignUp), \"data-test\": \"sign-in-create-account-link\" }, I18n.get(Translations.CREATE_ACCOUNT_TEXT)))) : (h(\"span\", null))), h(\"slot\", { name: \"primary-footer-content\" }, h(\"amplify-button\", { type: \"submit\", disabled: this.loading, \"data-test\": \"sign-in-sign-in-button\" }, this.loading ? h(\"amplify-loading-spinner\", null) : h(\"span\", null, I18n.get(this.submitButtonText)))))))));\n    }\n    static get watchers() { return {\n        \"formFields\": [\"formFieldsHandler\"]\n    }; }\n};\nAmplifySignIn.style = amplifySignInCss;\n\nconst amplifySignUpCss = \":host{--footer-font-family:var(--amplify-font-family);--footer-font-size:var(--amplify-text-sm);--footer-color:var(--amplify-grey);--font-weight:var(--amplify-font-weight)}.sign-up-form-footer{font-family:var(--footer-font-family);font-size:var(--footer-font-size);color:var(--footer-color);font-weight:--font-weight;display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.sign-up-form-footer amplify-button{margin-bottom:0.625rem}@media (min-width: 672px){.sign-up-form-footer{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:baseline;align-items:baseline}.sign-up-form-footer amplify-button{margin-bottom:0}}.sign-up-form-footer *+*{margin-bottom:15px}\";\n\nconst AmplifySignUp = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Fires when sign up form is submitted */\n        this.handleSubmit = event => this.signUp(event);\n        /** Used for header text in sign up component */\n        this.headerText = Translations.SIGN_UP_HEADER_TEXT;\n        /** Used for the submit button text in sign up component */\n        this.submitButtonText = Translations.SIGN_UP_SUBMIT_BUTTON_TEXT;\n        /** Used for the submit button text in sign up component */\n        this.haveAccountText = Translations.SIGN_UP_HAVE_ACCOUNT_TEXT;\n        /** Text used for the sign in hyperlink */\n        this.signInText = Translations.SIGN_IN_TEXT;\n        /**\n         * Form fields allows you to utilize our pre-built components such as username field, code field, password field, email field, etc.\n         * by passing an array of strings that you would like the order of the form to be in. If you need more customization, such as changing\n         * text for a label or adjust a placeholder, you can follow the structure below in order to do just that.\n         * ```\n         * [\n         *  {\n         *    type: string,\n         *    label: string,\n         *    placeholder: string,\n         *    hint: string | Functional Component | null,\n         *    required: boolean\n         *  }\n         * ]\n         * ```\n         */\n        this.formFields = [];\n        /** Auth state change handler for this component\n         * e.g. SignIn -> 'Create Account' link -> SignUp\n         */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Username Alias is used to setup authentication with `username`, `email` or `phone_number`  */\n        this.usernameAlias = 'username';\n        // private userInput: string | PhoneNumberInterface;\n        this.newFormFields = [];\n        this.phoneNumber = {\n            countryDialCodeValue: COUNTRY_DIAL_CODE_DEFAULT,\n            phoneNumberValue: null,\n        };\n        this.loading = false;\n        this.signUpAttributes = {\n            username: '',\n            password: '',\n            attributes: {},\n        };\n    }\n    handleFormFieldInputChange(fieldType) {\n        switch (fieldType) {\n            case 'username':\n                return event => (this.signUpAttributes.username = event.target.value);\n            case 'password':\n                return event => (this.signUpAttributes.password = event.target.value);\n            case 'email':\n                return event => (this.signUpAttributes.attributes.email = event.target.value);\n            case 'phone_number':\n                return event => handlePhoneNumberChange(event, this.phoneNumber);\n            default:\n                return event => (this.signUpAttributes.attributes[fieldType] = event.target.value);\n        }\n    }\n    handleFormFieldInputWithCallback(event, field) {\n        const fnToCall = field['handleInputChange']\n            ? field['handleInputChange']\n            : (event, cb) => {\n                cb(event);\n            };\n        const callback = this.handleFormFieldInputChange(field.type);\n        fnToCall(event, callback.bind(this));\n    }\n    // TODO: Add validation\n    // TODO: Prefix\n    async signUp(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (!Auth || typeof Auth.signUp !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        this.loading = true;\n        if (this.phoneNumber.phoneNumberValue) {\n            try {\n                this.signUpAttributes.attributes.phone_number = composePhoneNumberInput(this.phoneNumber);\n            }\n            catch (error) {\n                dispatchToastHubEvent(error);\n            }\n        }\n        switch (this.usernameAlias) {\n            case 'email':\n            case 'phone_number':\n                this.signUpAttributes.username = this.signUpAttributes.attributes[this.usernameAlias];\n                break;\n        }\n        if (this.signUpAttributes.username.indexOf(' ') >= 0) {\n            dispatchToastHubEvent(new Error(Translations.USERNAME_REMOVE_WHITESPACE));\n        }\n        if (this.signUpAttributes.password !== this.signUpAttributes.password.trim()) {\n            dispatchToastHubEvent(new Error(Translations.PASSWORD_REMOVE_WHITESPACE));\n        }\n        try {\n            const data = await Auth.signUp(this.signUpAttributes);\n            if (!data) {\n                throw new Error(Translations.SIGN_UP_FAILED);\n            }\n            if (data.userConfirmed) {\n                await handleSignIn(this.signUpAttributes.username, this.signUpAttributes.password, this.handleAuthStateChange);\n            }\n            else {\n                const signUpAttrs = Object.assign({}, this.signUpAttributes);\n                this.handleAuthStateChange(AuthState.ConfirmSignUp, Object.assign(Object.assign({}, data.user), { signUpAttrs }));\n            }\n        }\n        catch (error) {\n            dispatchToastHubEvent(error);\n        }\n        finally {\n            this.loading = false;\n        }\n    }\n    buildDefaultFormFields() {\n        switch (this.usernameAlias) {\n            case 'email':\n                this.newFormFields = [\n                    {\n                        type: 'email',\n                        placeholder: I18n.get(Translations.SIGN_UP_EMAIL_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('email'),\n                        inputProps: {\n                            'data-test': 'sign-up-email-input',\n                        },\n                    },\n                    {\n                        type: 'password',\n                        placeholder: I18n.get(Translations.SIGN_UP_PASSWORD_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('password'),\n                        inputProps: {\n                            'data-test': 'sign-up-password-input',\n                        },\n                    },\n                    {\n                        type: 'phone_number',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                        inputProps: {\n                            'data-test': 'sign-up-phone-number-input',\n                        },\n                    },\n                ];\n                break;\n            case 'phone_number':\n                this.newFormFields = [\n                    {\n                        type: 'phone_number',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                        inputProps: {\n                            'data-test': 'sign-up-phone-number-input',\n                        },\n                    },\n                    {\n                        type: 'password',\n                        placeholder: I18n.get(Translations.SIGN_UP_PASSWORD_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('password'),\n                        inputProps: {\n                            'data-test': 'sign-up-password-input',\n                        },\n                    },\n                    {\n                        type: 'email',\n                        placeholder: I18n.get(Translations.SIGN_UP_EMAIL_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('email'),\n                        inputProps: {\n                            'data-test': 'sign-up-email-input',\n                        },\n                    },\n                ];\n                break;\n            case 'username':\n            default:\n                this.newFormFields = [\n                    {\n                        type: 'username',\n                        placeholder: I18n.get(Translations.SIGN_UP_USERNAME_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('username'),\n                        inputProps: {\n                            'data-test': 'sign-up-username-input',\n                        },\n                    },\n                    {\n                        type: 'password',\n                        placeholder: I18n.get(Translations.SIGN_UP_PASSWORD_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('password'),\n                        inputProps: {\n                            'data-test': 'sign-up-password-input',\n                        },\n                    },\n                    {\n                        type: 'email',\n                        placeholder: I18n.get(Translations.SIGN_UP_EMAIL_PLACEHOLDER),\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('email'),\n                        inputProps: {\n                            'data-test': 'sign-up-email-input',\n                        },\n                    },\n                    {\n                        type: 'phone_number',\n                        required: true,\n                        handleInputChange: this.handleFormFieldInputChange('phone_number'),\n                        inputProps: {\n                            'data-test': 'sign-up-phone-number-input',\n                        },\n                    },\n                ];\n                break;\n        }\n    }\n    buildFormFields() {\n        if (this.formFields.length === 0) {\n            this.buildDefaultFormFields();\n        }\n        else {\n            const newFields = [];\n            this.formFields.forEach(field => {\n                const newField = Object.assign({}, field);\n                newField['handleInputChange'] = event => this.handleFormFieldInputWithCallback(event, field);\n                this.setFieldValue(field, this.signUpAttributes);\n                newFields.push(newField);\n            });\n            this.newFormFields = newFields;\n        }\n    }\n    setFieldValue(field, formAttributes) {\n        switch (field.type) {\n            case 'username':\n                if (field.value === undefined) {\n                    formAttributes.username = '';\n                }\n                else {\n                    formAttributes.username = field.value;\n                }\n                break;\n            case 'password':\n                if (field.value === undefined) {\n                    formAttributes.password = '';\n                }\n                else {\n                    formAttributes.password = field.value;\n                }\n                break;\n            case 'email':\n                formAttributes.attributes.email = field.value;\n                break;\n            case 'phone_number':\n                if (field.dialCode) {\n                    this.phoneNumber.countryDialCodeValue = field.dialCode;\n                }\n                this.phoneNumber.phoneNumberValue = field.value;\n                break;\n            default:\n                formAttributes.attributes[field.type] = field.value;\n                break;\n        }\n    }\n    componentWillLoad() {\n        checkUsernameAlias(this.usernameAlias);\n        this.buildFormFields();\n    }\n    formFieldsHandler() {\n        this.buildFormFields();\n    }\n    render() {\n        return (h(Host, null, h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), handleSubmit: this.handleSubmit, testDataPrefix: 'sign-up' }, h(\"div\", { slot: \"subtitle\" }, h(\"slot\", { name: \"header-subtitle\" })), h(\"amplify-auth-fields\", { formFields: this.newFormFields }), h(\"div\", { class: \"sign-up-form-footer\", slot: \"amplify-form-section-footer\" }, h(\"slot\", { name: \"footer\" }, h(\"slot\", { name: \"secondary-footer-content\" }, h(\"span\", null, I18n.get(this.haveAccountText), ' ', h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.handleAuthStateChange(AuthState.SignIn), \"data-test\": \"sign-up-sign-in-link\" }, I18n.get(this.signInText)))), h(\"slot\", { name: \"primary-footer-content\" }, h(\"amplify-button\", { type: \"submit\", \"data-test\": \"sign-up-create-account-button\" }, this.loading ? h(\"amplify-loading-spinner\", null) : h(\"span\", null, I18n.get(this.submitButtonText)))))))));\n    }\n    static get watchers() { return {\n        \"formFields\": [\"formFieldsHandler\"]\n    }; }\n};\nAmplifySignUp.style = amplifySignUpCss;\n\nconst logger$2 = new Logger('AmplifyVerifyContact');\nconst AmplifyVerifyContact = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Authentication state handler */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        this.loading = false;\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        this.verifyAttr ? this.submit(this.code) : this.verify(this.contact);\n    }\n    async submit(code) {\n        const attr = this.verifyAttr;\n        if (!Auth || typeof Auth.verifyCurrentUserAttributeSubmit !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        this.loading = true;\n        try {\n            const data = await Auth.verifyCurrentUserAttributeSubmit(attr, code);\n            logger$2.debug(data);\n            this.handleAuthStateChange(AuthState.SignedIn, this.user);\n            this.verifyAttr = null;\n        }\n        catch (error) {\n            dispatchToastHubEvent(error);\n            logger$2.error(error);\n        }\n        finally {\n            this.loading = false;\n        }\n    }\n    async verify(contact) {\n        if (!contact) {\n            logger$2.error('Neither Email nor Phone Number selected');\n            return;\n        }\n        if (!Auth || typeof Auth.verifyCurrentUserAttribute !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        this.loading = true;\n        try {\n            const data = await Auth.verifyCurrentUserAttribute(contact);\n            logger$2.debug(data);\n            this.verifyAttr = contact;\n        }\n        catch (error) {\n            dispatchToastHubEvent(error);\n            logger$2.error(error);\n        }\n        finally {\n            this.loading = false;\n        }\n    }\n    handleInputChange(event) {\n        const inputName = event.target.name;\n        if (inputName === 'code') {\n            this.code = event.target.value;\n        }\n        else if (inputName === 'contact') {\n            this.contact = event.target.value;\n        }\n    }\n    renderSubmit() {\n        return (h(\"div\", null, h(\"amplify-input\", { inputProps: {\n                autocomplete: 'off',\n                'data-test': 'verify-contact-code-input',\n            }, name: \"code\", placeholder: I18n.get(Translations.CODE_PLACEHOLDER), handleInputChange: event => this.handleInputChange(event) })));\n    }\n    renderVerify() {\n        const user = this.user;\n        if (!user) {\n            logger$2.debug('No user to verify');\n            return null;\n        }\n        const { unverified } = user;\n        if (!unverified) {\n            logger$2.debug('Unverified variable does not exist on user');\n            return null;\n        }\n        const { email, phone_number } = unverified;\n        return (h(\"div\", null, email && (h(\"amplify-radio-button\", { label: I18n.get(Translations.VERIFY_CONTACT_EMAIL_LABEL), key: \"email\", name: \"contact\", value: \"email\", handleInputChange: event => this.handleInputChange(event), inputProps: {\n                'data-test': 'verify-contact-email-radio',\n            } })), phone_number && (h(\"amplify-radio-button\", { label: I18n.get(Translations.VERIFY_CONTACT_PHONE_LABEL), key: \"phone_number\", name: \"contact\", value: \"phone_number\", handleInputChange: event => this.handleInputChange(event), inputProps: {\n                'data-test': 'verify-contact-email-radio',\n            } }))));\n    }\n    render() {\n        return (h(Host, null, h(\"amplify-form-section\", { handleSubmit: event => this.handleSubmit(event), headerText: I18n.get(Translations.VERIFY_CONTACT_HEADER_TEXT), loading: this.loading, secondaryFooterContent: h(\"span\", null, h(\"amplify-button\", { variant: \"anchor\", onClick: () => this.handleAuthStateChange(AuthState.SignedIn, this.user) }, \"Skip\")), submitButtonText: this.verifyAttr\n                ? I18n.get(Translations.VERIFY_CONTACT_SUBMIT_LABEL)\n                : I18n.get(Translations.VERIFY_CONTACT_VERIFY_LABEL) }, this.verifyAttr ? this.renderSubmit() : this.renderVerify())));\n    }\n};\n\nexport { AmplifyConfirmSignIn as amplify_confirm_sign_in, AmplifyConfirmSignUp as amplify_confirm_sign_up, AmplifyForgotPassword as amplify_forgot_password, AmplifyRequireNewPassword as amplify_require_new_password, AmplifySignIn as amplify_sign_in, AmplifySignUp as amplify_sign_up, AmplifyVerifyContact as amplify_verify_contact };\n"],"names":["r","registerInstance","h","H","Host","I18n","Logger","ConsoleLogger","isEmpty","M","MfaOption","C","ChallengeName","A","AuthState","a","AuthFormField","Auth","T","Translations","N","NO_AUTH_MODULE_FOUND","COUNTRY_DIAL_CODE_DEFAULT","d","dispatchAuthStateChangeEvent","dispatchToastHubEvent","c","checkUsernameAlias","i","isHintValid","handlePhoneNumberChange","b","composePhoneNumberInput","requiredAttributesMap","checkContact","handleSignIn","AmplifyConfirmSignIn","constructor","hostRef","handleSubmit","event","confirm","headerText","CONFIRM_SMS_CODE","submitButtonText","CONFIRM","handleAuthStateChange","formFields","type","required","handleInputChange","handleCodeChange","mfaOption","SMS","loading","componentWillLoad","user","SoftwareTokenMFA","TOTP","CONFIRM_TOTP_CODE","code","target","value","preventDefault","mfaType","confirmSignIn","Error","error","render","get","secondaryFooterContent","variant","onClick","SignIn","BACK_TO_SIGN_IN","AmplifyConfirmSignUp","confirmSignUp","CONFIRM_SIGN_UP_HEADER_TEXT","CONFIRM_SIGN_UP_SUBMIT_BUTTON_TEXT","usernameAlias","userInput","username","_signUpAttrs","signUpAttrs","newFormFields","phoneNumber","countryDialCodeValue","phoneNumberValue","buildFormFields","formFieldsHandler","buildDefaultFormFields","handleFormFieldInputChange","disabled","label","CONFIRM_SIGN_UP_CODE_LABEL","placeholder","CONFIRM_SIGN_UP_CODE_PLACEHOLDER","hint","CONFIRM_SIGN_UP_LOST_CODE","resendConfirmCode","CONFIRM_SIGN_UP_RESEND_CODE","length","newFields","forEach","field","newField","Object","assign","handleFormFieldInputWithCallback","push","fieldType","setFieldValue","undefined","dialCode","fnToCall","cb","callback","bind","resendSignUp","EMPTY_USERNAME","trim","ConfirmSignUp","confirmSignUpResult","CONFIRM_SIGN_UP_FAILED","password","watchers","logger","AmplifyForgotPassword","RESET_YOUR_PASSWORD","sendButtonText","SEND_CODE","SUBMIT","handleSend","send","submit","delivery","forgotPasswordAttrs","inputProps","formAttributes","forgotPassword","data","debug","NEW_PASSWORD_LABEL","NEW_PASSWORD_PLACEHOLDER","CodeDeliveryDetails","forgotPasswordSubmit","submitFn","testDataPrefix","logger$1","AmplifyRequireNewPassword","CHANGE_PASSWORD","CHANGE_PASSWORD_ACTION","completeNewPassword","Password","handlePasswordChange","requiredAttributes","watchHandler","setCurrentUser","handleRequiredAttributeInputChange","attribute","currentAuthenticatedUser","currentUser","challengeParam","userRequiredAttributes","formField","challengeName","SMSMFA","ConfirmSignIn","MFASetup","TOTPSetup","amplifySignInCss","AmplifySignIn","signIn","SIGN_IN_HEADER_TEXT","SIGN_IN_ACTION","hideSignUp","signInAttributes","formFieldInputs","FORGOT_PASSWORD_TEXT","ForgotPassword","RESET_PASSWORD_TEXT","slot","name","federated","class","NO_ACCOUNT_TEXT","SignUp","CREATE_ACCOUNT_TEXT","style","amplifySignUpCss","AmplifySignUp","signUp","SIGN_UP_HEADER_TEXT","SIGN_UP_SUBMIT_BUTTON_TEXT","haveAccountText","SIGN_UP_HAVE_ACCOUNT_TEXT","signInText","SIGN_IN_TEXT","signUpAttributes","attributes","email","phone_number","indexOf","USERNAME_REMOVE_WHITESPACE","PASSWORD_REMOVE_WHITESPACE","SIGN_UP_FAILED","userConfirmed","SIGN_UP_EMAIL_PLACEHOLDER","SIGN_UP_PASSWORD_PLACEHOLDER","SIGN_UP_USERNAME_PLACEHOLDER","logger$2","AmplifyVerifyContact","verifyAttr","verify","contact","attr","verifyCurrentUserAttributeSubmit","SignedIn","verifyCurrentUserAttribute","inputName","renderSubmit","autocomplete","CODE_PLACEHOLDER","renderVerify","unverified","VERIFY_CONTACT_EMAIL_LABEL","key","VERIFY_CONTACT_PHONE_LABEL","VERIFY_CONTACT_HEADER_TEXT","VERIFY_CONTACT_SUBMIT_LABEL","VERIFY_CONTACT_VERIFY_LABEL","amplify_confirm_sign_in","amplify_confirm_sign_up","amplify_forgot_password","amplify_require_new_password","amplify_sign_in","amplify_sign_up","amplify_verify_contact"],"sourceRoot":"webpack:///"}