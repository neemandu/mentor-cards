{"version":3,"file":"node_modules_aws-amplify_ui-components_dist_esm_amplify-form-field_4_entry_js.js","mappings":";;;;;;;;;;;;;;;;;AAA4F;;AAE5F,mCAAmC,yCAAyC,+CAA+C,YAAY,mBAAmB,kBAAkB,cAAc,iCAAiC,qBAAqB,wBAAwB,uCAAuC,kBAAkB;;AAEjU;AACA;AACA,QAAQ,qDAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAC,UAAU,qBAAqB,iBAAiB,qDAAC,UAAU,2BAA2B,EAAE,qDAAC,oBAAoB,uBAAuB,sCAAsC,qDAAC,UAAU,OAAO,aAAa,uFAAuF,sBAAsB,qDAAC,cAAc,qDAAC,WAAW,eAAe,EAAE,qDAAC,oBAAoB,2OAA2O,kBAAkB,qDAAC,mBAAmB,OAAO,aAAa,QAAQ;AACrrB;AACA;AACA;;AAEA,8BAA8B,4BAA4B,yCAAyC,mCAAmC,yCAAyC,MAAM,mBAAmB,+BAA+B,+BAA+B,2BAA2B,uBAAuB;;AAExT;AACA;AACA,QAAQ,qDAAgB;AACxB;AACA;AACA,gBAAgB,qDAAC,UAAU,eAAe,EAAE,qDAAC;AAC7C;AACA;AACA;;AAEA,+BAA+B,uCAAuC,qDAAqD,yCAAyC,kDAAkD,uCAAuC,wBAAwB,YAAY,WAAW,OAAO,cAAc,WAAW,aAAa,iCAAiC,mBAAmB,yCAAyC,sBAAsB,qBAAqB,kBAAkB,8BAA8B,sBAAsB,qBAAqB,gBAAgB,gBAAgB,aAAa,aAAa,uCAAuC,gBAAgB,YAAY;;AAEzrB;AACA;AACA,QAAQ,qDAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qDAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qDAAC,CAAC,iDAAI,IAAI,qBAAqB,EAAE,qDAAC,0BAA0B,4EAA4E,aAAa,oMAAoM;AACzW;AACA;AACA;;AAEA,+BAA+B,6CAA6C,OAAO,yBAAyB,iCAAiC,mBAAmB;;AAEhK;AACA;AACA,QAAQ,qDAAgB;AACxB;AACA;AACA,gBAAgB,qDAAC,YAAY,uCAAuC,EAAE,qDAAC;AACvE;AACA;AACA;;AAE6I","sources":["./node_modules/@aws-amplify/ui-components/dist/esm/amplify-form-field_4.entry.js"],"sourcesContent":["import { r as registerInstance, h, c as createEvent, H as Host } from './index-39969785.js';\n\nconst amplifyFormFieldCss = \":host{--label-font-size:var(--amplify-text-md);--description-font-size:var(--amplify-text-sm)}.form-field{margin-bottom:15px}.form-field-label{display:block;font-size:var(--label-font-size);padding-bottom:0.5em}.form-field-description{font-size:var(--description-font-size);padding-top:0.5em}\";\n\nconst AmplifyFormField = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The input type.  Can be any HTML input type. */\n        this.type = 'text';\n        /** The required flag in order to make an input required prior to submitting a form */\n        this.required = false;\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n    }\n    render() {\n        return (h(\"div\", { class: \"form-field\" }, this.label && (h(\"div\", { class: \"form-field-label\" }, h(\"amplify-label\", { htmlFor: this.fieldId }, this.label))), this.description && (h(\"div\", { id: `${this.fieldId}-description`, class: \"form-field-description\", \"data-test\": \"form-field-description\" }, this.description)), h(\"div\", null, h(\"slot\", { name: \"input\" }, h(\"amplify-input\", { fieldId: this.fieldId, description: this.description, type: this.type, handleInputChange: this.handleInputChange, placeholder: this.placeholder, name: this.name, value: this.value, inputProps: this.inputProps, disabled: this.disabled }))), this.hint && h(\"amplify-hint\", { id: `${this.fieldId}-hint` }, this.hint)));\n    }\n};\nAmplifyFormField.style = amplifyFormFieldCss;\n\nconst amplifyHintCss = \":host{--color:var(--amplify-grey);--font-family:var(--amplify-font-family);--font-size:var(--amplify-text-xs);--font-weight:var(--amplify-font-weight)}.hint{color:var(--color);font-family:var(--font-family);font-weight:var(--font-weight);font-size:var(--font-size);margin-bottom:2.625rem}\";\n\nconst AmplifyHint = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        return (h(\"div\", { class: \"hint\" }, h(\"slot\", null)));\n    }\n};\nAmplifyHint.style = amplifyHintCss;\n\nconst amplifyInputCss = \":host{--color:var(--amplify-secondary-color);--background-color:var(--amplify-secondary-contrast);--border-color:var(--amplify-light-grey);--border-color-focus:var(--amplify-primary-color);--border:1px solid var(--border-color);--margin:0 0 0.625rem 0}.input-host{width:100%}.input{display:block;width:100%;padding:1rem;font-size:var(--amplify-text-sm);color:var(--color);background-color:var(--background-color);background-image:none;border:var(--border);border-radius:3px;-webkit-box-sizing:border-box;box-sizing:border-box;margin:var(--margin);height:3.125rem;line-height:1.1}.input:focus{outline:none;border-color:var(--border-color-focus)}.input:disabled{opacity:0.5}\";\n\nconst AmplifyInput = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** The input type.  Can be any HTML input type. */\n        this.type = 'text';\n        /** The callback, called when the input is modified by the user. */\n        this.handleInputChange = () => void 0;\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n        this.formSubmit = createEvent(this, \"formSubmit\", 7);\n    }\n    // eslint-disable-next-line\n    handleKeyDown(ev) {\n        if (ev.key === 'Enter') {\n            this.formSubmit.emit(ev);\n        }\n    }\n    render() {\n        return (h(Host, { class: \"input-host\" }, h(\"input\", Object.assign({ id: this.fieldId, \"aria-describedby\": this.fieldId && this.description ? `${this.fieldId}-description` : null, type: this.type, onInput: event => this.handleInputChange(event), placeholder: this.placeholder, name: this.name, class: \"input\", value: this.value, disabled: this.disabled }, this.inputProps))));\n    }\n};\nAmplifyInput.style = amplifyInputCss;\n\nconst amplifyLabelCss = \":host{--label-color:var(--amplify-secondary-color)}.label{color:var(--label-color);font-size:var(--amplify-text-sm);margin-bottom:16px}\";\n\nconst AmplifyLabel = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    render() {\n        return (h(\"label\", { class: \"label\", htmlFor: this.htmlFor }, h(\"slot\", null)));\n    }\n};\nAmplifyLabel.style = amplifyLabelCss;\n\nexport { AmplifyFormField as amplify_form_field, AmplifyHint as amplify_hint, AmplifyInput as amplify_input, AmplifyLabel as amplify_label };\n"],"names":[],"sourceRoot":"webpack:///"}