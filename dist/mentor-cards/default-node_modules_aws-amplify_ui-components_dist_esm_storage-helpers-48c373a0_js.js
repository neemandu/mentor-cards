(self["webpackChunkmentor_cards"] = self["webpackChunkmentor_cards"] || []).push([["default-node_modules_aws-amplify_ui-components_dist_esm_storage-helpers-48c373a0_js"],{

/***/ 40036:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/Storage.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Storage": () => (/* binding */ Storage),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-amplify/core */ 90118);
/* harmony import */ var _providers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./providers */ 61812);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (undefined && undefined.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};


var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('StorageClass');
var DEFAULT_PROVIDER = 'AWSS3';
/**
 * Provide storage methods to use AWS S3
 */
var Storage = /** @class */ (function () {
    /**
     * Initialize Storage
     * @param {Object} config - Configuration object for storage
     */
    function Storage() {
        this._config = {};
        this._pluggables = [];
        logger.debug('Storage Options', this._config);
        this.get = this.get.bind(this);
        this.put = this.put.bind(this);
        this.remove = this.remove.bind(this);
        this.list = this.list.bind(this);
    }
    Storage.prototype.getModuleName = function () {
        return 'Storage';
    };
    /**
     * add plugin into Storage category
     * @param {Object} pluggable - an instance of the plugin
     */
    Storage.prototype.addPluggable = function (pluggable) {
        if (pluggable && pluggable.getCategory() === 'Storage') {
            this._pluggables.push(pluggable);
            var config = {};
            config = pluggable.configure(this._config[pluggable.getProviderName()]);
            return config;
        }
    };
    /**
     * Get the plugin object
     * @param providerName - the name of the plugin
     */
    Storage.prototype.getPluggable = function (providerName) {
        var pluggable = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });
        if (pluggable === undefined) {
            logger.debug('No plugin found with providerName', providerName);
            return null;
        }
        else
            return pluggable;
    };
    /**
     * Remove the plugin object
     * @param providerName - the name of the plugin
     */
    Storage.prototype.removePluggable = function (providerName) {
        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });
        return;
    };
    /**
     * Configure Storage
     * @param {Object} config - Configuration object for storage
     * @return {Object} - Current configuration
     */
    Storage.prototype.configure = function (config) {
        var _this = this;
        logger.debug('configure Storage');
        if (!config)
            return this._config;
        var amplifyConfig = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_1__.Parser.parseMobilehubConfig(config);
        var storageKeysFromConfig = Object.keys(amplifyConfig.Storage);
        var storageArrayKeys = [
            'bucket',
            'region',
            'level',
            'track',
            'customPrefix',
            'serverSideEncryption',
            'SSECustomerAlgorithm',
            'SSECustomerKey',
            'SSECustomerKeyMD5',
            'SSEKMSKeyId',
        ];
        var isInStorageArrayKeys = function (k) {
            return storageArrayKeys.some(function (x) { return x === k; });
        };
        var checkConfigKeysFromArray = function (k) {
            return k.find(function (k) { return isInStorageArrayKeys(k); });
        };
        if (storageKeysFromConfig &&
            checkConfigKeysFromArray(storageKeysFromConfig) &&
            !amplifyConfig.Storage[DEFAULT_PROVIDER]) {
            amplifyConfig.Storage[DEFAULT_PROVIDER] = {};
        }
        Object.entries(amplifyConfig.Storage).map(function (_a) {
            var _b = __read(_a, 2), key = _b[0], value = _b[1];
            if (key && isInStorageArrayKeys(key) && value !== undefined) {
                amplifyConfig.Storage[DEFAULT_PROVIDER][key] = value;
                delete amplifyConfig.Storage[key];
            }
        });
        // only update new values for each provider
        Object.keys(amplifyConfig.Storage).forEach(function (providerName) {
            if (typeof amplifyConfig.Storage[providerName] !== 'string') {
                _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), amplifyConfig.Storage[providerName]);
            }
        });
        this._pluggables.forEach(function (pluggable) {
            pluggable.configure(_this._config[pluggable.getProviderName()]);
        });
        if (this._pluggables.length === 0) {
            this.addPluggable(new _providers__WEBPACK_IMPORTED_MODULE_2__.AWSS3Provider());
        }
        return this._config;
    };
    /**
     * Get a presigned URL of the file or the object data when download:true
     *
     * @param {string} key - key of the object
     * @param {Object} [config] - { level : private|protected|public, download: true|false }
     * @return - A promise resolves to either a presigned url or the object
     */
    Storage.prototype.get = function (key, config) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, provider, prov;
            return __generator(this, function (_b) {
                _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;
                prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });
                if (prov === undefined) {
                    logger.debug('No plugin found with providerName', provider);
                    Promise.reject('No plugin found in Storage for the provider');
                }
                return [2 /*return*/, prov.get(key, config)];
            });
        });
    };
    /**
     * Put a file in storage bucket specified to configure method
     * @param {string} key - key of the object
     * @param {Object} object - File to be put in bucket
     * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,
     *  progressCallback: function }
     * @return - promise resolves to object on success
     */
    Storage.prototype.put = function (key, object, config) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, provider, prov;
            return __generator(this, function (_b) {
                _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;
                prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });
                if (prov === undefined) {
                    logger.debug('No plugin found with providerName', provider);
                    Promise.reject('No plugin found in Storage for the provider');
                }
                return [2 /*return*/, prov.put(key, object, config)];
            });
        });
    };
    /**
     * Remove the object for specified key
     * @param {string} key - key of the object
     * @param {Object} [config] - { level : private|protected|public }
     * @return - Promise resolves upon successful removal of the object
     */
    Storage.prototype.remove = function (key, config) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, provider, prov;
            return __generator(this, function (_b) {
                _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;
                prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });
                if (prov === undefined) {
                    logger.debug('No plugin found with providerName', provider);
                    Promise.reject('No plugin found in Storage for the provider');
                }
                return [2 /*return*/, prov.remove(key, config)];
            });
        });
    };
    /**
     * List bucket objects relative to the level and prefix specified
     * @param {String} path - the path that contains objects
     * @param {Object} [config] - { level : private|protected|public, maxKeys: NUMBER }
     * @return - Promise resolves to list of keys for all objects in path
     */
    Storage.prototype.list = function (path, config) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, provider, prov;
            return __generator(this, function (_b) {
                _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;
                prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });
                if (prov === undefined) {
                    logger.debug('No plugin found with providerName', provider);
                    Promise.reject('No plugin found in Storage for the provider');
                }
                return [2 /*return*/, prov.list(path, config)];
            });
        });
    };
    return Storage;
}());

/**
 * @deprecated use named import
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Storage);


/***/ }),

/***/ 37484:
/*!************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Storage": () => (/* binding */ Storage),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "StorageClass": () => (/* reexport safe */ _Storage__WEBPACK_IMPORTED_MODULE_1__.Storage),
/* harmony export */   "AWSS3Provider": () => (/* reexport safe */ _providers__WEBPACK_IMPORTED_MODULE_3__.AWSS3Provider)
/* harmony export */ });
/* harmony import */ var _Storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Storage */ 40036);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/core */ 94758);
/* harmony import */ var _providers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./providers */ 81681);
/*
 * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};


var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_0__.ConsoleLogger('Storage');
var _instance = null;
var getInstance = function () {
    if (_instance) {
        return _instance;
    }
    logger.debug('Create Storage Instance, debug');
    _instance = new _Storage__WEBPACK_IMPORTED_MODULE_1__.Storage();
    _instance.vault = new _Storage__WEBPACK_IMPORTED_MODULE_1__.Storage();
    var old_configure = _instance.configure;
    _instance.configure = function (options) {
        logger.debug('storage configure called');
        var vaultConfig = __assign({}, old_configure.call(_instance, options));
        // set level private for each provider for the vault
        Object.keys(vaultConfig).forEach(function (providerName) {
            if (typeof vaultConfig[providerName] !== 'string') {
                vaultConfig[providerName] = __assign(__assign({}, vaultConfig[providerName]), { level: 'private' });
            }
        });
        logger.debug('storage vault configure called');
        _instance.vault.configure(vaultConfig);
    };
    return _instance;
};
var Storage = getInstance();
_aws_amplify_core__WEBPACK_IMPORTED_MODULE_2__.Amplify.register(Storage);
/**
 * @deprecated use named import
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Storage);




/***/ }),

/***/ 61812:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3Provider.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSS3Provider": () => (/* binding */ AWSS3Provider),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-amplify/core */ 20686);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-amplify/core */ 90118);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @aws-amplify/core */ 99433);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 19813);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 76912);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 79974);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 49551);
/* harmony import */ var _aws_sdk_util_format_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-format-url */ 9385);
/* harmony import */ var _aws_sdk_util_create_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-create-request */ 21823);
/* harmony import */ var _aws_sdk_s3_request_presigner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/s3-request-presigner */ 83474);
/* harmony import */ var _axios_http_handler__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./axios-http-handler */ 99836);
/* harmony import */ var _AWSS3ProviderManagedUpload__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./AWSS3ProviderManagedUpload */ 50835);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! events */ 87508);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_3__);
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */








var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_4__.ConsoleLogger('AWSS3Provider');
var AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&
    typeof Symbol.for === 'function'
    ? Symbol.for('amplify_default')
    : '@@amplify_default');
var dispatchStorageEvent = function (track, event, attrs, metrics, message) {
    if (track) {
        var data = { attrs: attrs };
        if (metrics) {
            data['metrics'] = metrics;
        }
        _aws_amplify_core__WEBPACK_IMPORTED_MODULE_5__.Hub.dispatch('storage', {
            event: event,
            data: data,
            message: message,
        }, 'Storage', AMPLIFY_SYMBOL);
    }
};
var localTestingStorageEndpoint = 'http://localhost:20005';
/**
 * Provide storage methods to use AWS S3
 */
var AWSS3Provider = /** @class */ (function () {
    /**
     * Initialize Storage with AWS configurations
     * @param {Object} config - Configuration object for storage
     */
    function AWSS3Provider(config) {
        this._config = config ? config : {};
        logger.debug('Storage Options', this._config);
    }
    /**
     * get the category of the plugin
     */
    AWSS3Provider.prototype.getCategory = function () {
        return AWSS3Provider.CATEGORY;
    };
    /**
     * get provider name of the plugin
     */
    AWSS3Provider.prototype.getProviderName = function () {
        return AWSS3Provider.PROVIDER_NAME;
    };
    /**
     * Configure Storage part with aws configuration
     * @param {Object} config - Configuration of the Storage
     * @return {Object} - Current configuration
     */
    AWSS3Provider.prototype.configure = function (config) {
        logger.debug('configure Storage', config);
        if (!config)
            return this._config;
        var amplifyConfig = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_6__.Parser.parseMobilehubConfig(config);
        this._config = Object.assign({}, this._config, amplifyConfig.Storage);
        if (!this._config.bucket) {
            logger.debug('Do not have bucket yet');
        }
        return this._config;
    };
    /**
     * Get a presigned URL of the file or the object data when download:true
     *
     * @param {string} key - key of the object
     * @param {Object} [config] - { level : private|protected|public, download: true|false }
     * @return - A promise resolves to Amazon S3 presigned URL on success
     */
    AWSS3Provider.prototype.get = function (key, config) {
        return __awaiter(this, void 0, void 0, function () {
            var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, prefix, final_key, s3, params, getObjectCommand, response, error_1, signer, request, url, _a, error_2;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this._ensureCredentials()];
                    case 1:
                        credentialsOK = _b.sent();
                        if (!credentialsOK) {
                            return [2 /*return*/, Promise.reject('No credentials')];
                        }
                        opt = Object.assign({}, this._config, config);
                        bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track;
                        prefix = this._prefix(opt);
                        final_key = prefix + key;
                        s3 = this._createNewS3Client(opt);
                        logger.debug('get ' + key + ' from ' + final_key);
                        params = {
                            Bucket: bucket,
                            Key: final_key,
                        };
                        // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property
                        if (cacheControl)
                            params.ResponseCacheControl = cacheControl;
                        if (contentDisposition)
                            params.ResponseContentDisposition = contentDisposition;
                        if (contentEncoding)
                            params.ResponseContentEncoding = contentEncoding;
                        if (contentLanguage)
                            params.ResponseContentLanguage = contentLanguage;
                        if (contentType)
                            params.ResponseContentType = contentType;
                        if (!(download === true)) return [3 /*break*/, 5];
                        getObjectCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_7__.GetObjectCommand(params);
                        _b.label = 2;
                    case 2:
                        _b.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, s3.send(getObjectCommand)];
                    case 3:
                        response = _b.sent();
                        dispatchStorageEvent(track, 'download', { method: 'get', result: 'success' }, {
                            fileSize: Number(response.Body['size'] || response.Body['length']),
                        }, "Download success for " + key);
                        return [2 /*return*/, response];
                    case 4:
                        error_1 = _b.sent();
                        dispatchStorageEvent(track, 'download', {
                            method: 'get',
                            result: 'failed',
                        }, null, "Download failed with " + error_1.message);
                        throw error_1;
                    case 5:
                        params.Expires = expires || 900; // Default is 15 mins as defined in V2 AWS SDK
                        _b.label = 6;
                    case 6:
                        _b.trys.push([6, 9, , 10]);
                        signer = new _aws_sdk_s3_request_presigner__WEBPACK_IMPORTED_MODULE_2__.S3RequestPresigner(__assign({}, s3.config));
                        return [4 /*yield*/, (0,_aws_sdk_util_create_request__WEBPACK_IMPORTED_MODULE_1__.createRequest)(s3, new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_7__.GetObjectCommand(params))];
                    case 7:
                        request = _b.sent();
                        _a = _aws_sdk_util_format_url__WEBPACK_IMPORTED_MODULE_0__.formatUrl;
                        return [4 /*yield*/, signer.presign(request, { expiresIn: params.Expires })];
                    case 8:
                        url = _a.apply(void 0, [(_b.sent())]);
                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'success' }, null, "Signed URL: " + url);
                        return [2 /*return*/, url];
                    case 9:
                        error_2 = _b.sent();
                        logger.warn('get signed url error', error_2);
                        dispatchStorageEvent(track, 'getSignedUrl', { method: 'get', result: 'failed' }, null, "Could not get a signed URL for " + key);
                        throw error_2;
                    case 10: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Put a file in S3 bucket specified to configure method
     * @param {string} key - key of the object
     * @param {Object} object - File to be put in Amazon S3 bucket
     * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,
     *  progressCallback: function }
     * @return - promise resolves to object on success
     */
    AWSS3Provider.prototype.put = function (key, object, config) {
        return __awaiter(this, void 0, void 0, function () {
            var credentialsOK, opt, bucket, track, progressCallback, contentType, contentDisposition, cacheControl, expires, metadata, tagging, acl, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, type, prefix, final_key, params, emitter, uploader, response, error_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._ensureCredentials()];
                    case 1:
                        credentialsOK = _a.sent();
                        if (!credentialsOK) {
                            return [2 /*return*/, Promise.reject('No credentials')];
                        }
                        opt = Object.assign({}, this._config, config);
                        bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback;
                        contentType = opt.contentType, contentDisposition = opt.contentDisposition, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging, acl = opt.acl;
                        serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;
                        type = contentType ? contentType : 'binary/octet-stream';
                        prefix = this._prefix(opt);
                        final_key = prefix + key;
                        logger.debug('put ' + key + ' to ' + final_key);
                        params = {
                            Bucket: bucket,
                            Key: final_key,
                            Body: object,
                            ContentType: type,
                        };
                        if (cacheControl) {
                            params.CacheControl = cacheControl;
                        }
                        if (contentDisposition) {
                            params.ContentDisposition = contentDisposition;
                        }
                        if (expires) {
                            params.Expires = expires;
                        }
                        if (metadata) {
                            params.Metadata = metadata;
                        }
                        if (tagging) {
                            params.Tagging = tagging;
                        }
                        if (serverSideEncryption) {
                            params.ServerSideEncryption = serverSideEncryption;
                            if (SSECustomerAlgorithm) {
                                params.SSECustomerAlgorithm = SSECustomerAlgorithm;
                            }
                            if (SSECustomerKey) {
                                params.SSECustomerKey = SSECustomerKey;
                            }
                            if (SSECustomerKeyMD5) {
                                params.SSECustomerKeyMD5 = SSECustomerKeyMD5;
                            }
                            if (SSEKMSKeyId) {
                                params.SSEKMSKeyId = SSEKMSKeyId;
                            }
                        }
                        emitter = new events__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
                        uploader = new _AWSS3ProviderManagedUpload__WEBPACK_IMPORTED_MODULE_8__.AWSS3ProviderManagedUpload(params, opt, emitter);
                        if (acl) {
                            params.ACL = acl;
                        }
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 5]);
                        emitter.on('sendProgress', function (progress) {
                            if (progressCallback) {
                                if (typeof progressCallback === 'function') {
                                    progressCallback(progress);
                                }
                                else {
                                    logger.warn('progressCallback should be a function, not a ' +
                                        typeof progressCallback);
                                }
                            }
                        });
                        return [4 /*yield*/, uploader.upload()];
                    case 3:
                        response = _a.sent();
                        logger.debug('upload result', response);
                        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'success' }, null, "Upload success for " + key);
                        return [2 /*return*/, {
                                key: key,
                            }];
                    case 4:
                        error_3 = _a.sent();
                        logger.warn('error uploading', error_3);
                        dispatchStorageEvent(track, 'upload', { method: 'put', result: 'failed' }, null, "Error uploading " + key);
                        throw error_3;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Remove the object for specified key
     * @param {string} key - key of the object
     * @param {Object} [config] - { level : private|protected|public }
     * @return - Promise resolves upon successful removal of the object
     */
    AWSS3Provider.prototype.remove = function (key, config) {
        return __awaiter(this, void 0, void 0, function () {
            var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_4;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._ensureCredentials()];
                    case 1:
                        credentialsOK = _a.sent();
                        if (!credentialsOK) {
                            return [2 /*return*/, Promise.reject('No credentials')];
                        }
                        opt = Object.assign({}, this._config, config);
                        bucket = opt.bucket, track = opt.track;
                        prefix = this._prefix(opt);
                        final_key = prefix + key;
                        s3 = this._createNewS3Client(opt);
                        logger.debug('remove ' + key + ' from ' + final_key);
                        params = {
                            Bucket: bucket,
                            Key: final_key,
                        };
                        deleteObjectCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_9__.DeleteObjectCommand(params);
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, s3.send(deleteObjectCommand)];
                    case 3:
                        response = _a.sent();
                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'success' }, null, "Deleted " + key + " successfully");
                        return [2 /*return*/, response];
                    case 4:
                        error_4 = _a.sent();
                        dispatchStorageEvent(track, 'delete', { method: 'remove', result: 'failed' }, null, "Deletion of " + key + " failed with " + error_4);
                        throw error_4;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * List bucket objects relative to the level and prefix specified
     * @param {string} path - the path that contains objects
     * @param {Object} [config] - { level : private|protected|public }
     * @return - Promise resolves to list of keys for all objects in path
     */
    AWSS3Provider.prototype.list = function (path, config) {
        return __awaiter(this, void 0, void 0, function () {
            var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, s3, params, listObjectsCommand, response, list, error_5;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._ensureCredentials()];
                    case 1:
                        credentialsOK = _a.sent();
                        if (!credentialsOK) {
                            return [2 /*return*/, Promise.reject('No credentials')];
                        }
                        opt = Object.assign({}, this._config, config);
                        bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;
                        prefix = this._prefix(opt);
                        final_path = prefix + path;
                        s3 = this._createNewS3Client(opt);
                        logger.debug('list ' + path + ' from ' + final_path);
                        params = {
                            Bucket: bucket,
                            Prefix: final_path,
                            MaxKeys: maxKeys,
                        };
                        listObjectsCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_10__.ListObjectsCommand(params);
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, s3.send(listObjectsCommand)];
                    case 3:
                        response = _a.sent();
                        list = [];
                        if (response && response.Contents) {
                            list = response.Contents.map(function (item) {
                                return {
                                    key: item.Key.substr(prefix.length),
                                    eTag: item.ETag,
                                    lastModified: item.LastModified,
                                    size: item.Size,
                                };
                            });
                        }
                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'success' }, null, list.length + " items returned from list operation");
                        logger.debug('list', list);
                        return [2 /*return*/, list];
                    case 4:
                        error_5 = _a.sent();
                        logger.warn('list error', error_5);
                        dispatchStorageEvent(track, 'list', { method: 'list', result: 'failed' }, null, "Listing items failed: " + error_5.message);
                        throw error_5;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     */
    AWSS3Provider.prototype._ensureCredentials = function () {
        var _this = this;
        return _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.Credentials.get()
            .then(function (credentials) {
            if (!credentials)
                return false;
            var cred = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.Credentials.shear(credentials);
            logger.debug('set credentials for storage', cred);
            _this._config.credentials = cred;
            return true;
        })
            .catch(function (error) {
            logger.warn('ensure credentials error', error);
            return false;
        });
    };
    /**
     * @private
     */
    AWSS3Provider.prototype._prefix = function (config) {
        var credentials = config.credentials, level = config.level;
        var customPrefix = config.customPrefix || {};
        var identityId = config.identityId || credentials.identityId;
        var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') +
            identityId +
            '/';
        var protectedPath = (customPrefix.protected !== undefined
            ? customPrefix.protected
            : 'protected/') +
            identityId +
            '/';
        var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';
        switch (level) {
            case 'private':
                return privatePath;
            case 'protected':
                return protectedPath;
            default:
                return publicPath;
        }
    };
    /**
     * @private creates an S3 client with new V3 aws sdk
     */
    AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {
        var region = config.region, credentials = config.credentials, dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting;
        var localTestingConfig = {};
        if (dangerouslyConnectToHttpEndpointForTesting) {
            localTestingConfig = {
                endpoint: localTestingStorageEndpoint,
                tls: false,
                bucketEndpoint: false,
                forcePathStyle: true,
            };
        }
        var s3client = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_12__.S3Client(__assign(__assign({ region: region,
            credentials: credentials, customUserAgent: (0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_13__.getAmplifyUserAgent)() }, localTestingConfig), { requestHandler: new _axios_http_handler__WEBPACK_IMPORTED_MODULE_14__.AxiosHttpHandler({}, emitter) }));
        return s3client;
    };
    AWSS3Provider.CATEGORY = 'Storage';
    AWSS3Provider.PROVIDER_NAME = 'AWSS3';
    return AWSS3Provider;
}());

/**
 * @deprecated use named import
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AWSS3Provider);


/***/ }),

/***/ 50835:
/*!*******************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3ProviderManagedUpload.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSS3ProviderManagedUpload": () => (/* binding */ AWSS3ProviderManagedUpload)
/* harmony export */ });
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aws-amplify/core */ 99433);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @aws-amplify/core */ 75001);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 4391);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 1346);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 45677);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 10);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 59549);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 65674);
/* harmony import */ var _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @aws-sdk/client-s3 */ 49551);
/* harmony import */ var _axios_http_handler__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./axios-http-handler */ 99836);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ 87508);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _aws_sdk_url_parser_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/url-parser-node */ 22929);
/* harmony import */ var _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/fetch-http-handler */ 16423);
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (undefined && undefined.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};






var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.ConsoleLogger('AWSS3ProviderManagedUpload');
var localTestingStorageEndpoint = 'http://localhost:20005';
var SET_CONTENT_LENGTH_HEADER = 'contentLengthMiddleware';
var AWSS3ProviderManagedUpload = /** @class */ (function () {
    function AWSS3ProviderManagedUpload(params, opts, emitter) {
        // Defaults
        this.minPartSize = 5 * 1024 * 1024; // in MB
        this.queueSize = 4;
        // Data for current upload
        this.body = null;
        this.params = null;
        this.opts = null;
        this.multiPartMap = [];
        this.cancel = false;
        // Progress reporting
        this.bytesUploaded = 0;
        this.totalBytesToUpload = 0;
        this.emitter = null;
        this.params = params;
        this.opts = opts;
        this.emitter = emitter;
    }
    AWSS3ProviderManagedUpload.prototype.upload = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _a, putObjectCommand, s3, uploadId, numberOfPartsToUpload, start, parts;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this;
                        return [4 /*yield*/, this.validateAndSanitizeBody(this.params.Body)];
                    case 1:
                        _a.body = _b.sent();
                        this.totalBytesToUpload = this.byteLength(this.body);
                        if (!(this.totalBytesToUpload <= this.minPartSize)) return [3 /*break*/, 3];
                        // Multipart upload is not required. Upload the sanitized body as is
                        this.params.Body = this.body;
                        putObjectCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_4__.PutObjectCommand(this.params);
                        return [4 /*yield*/, this._createNewS3Client(this.opts, this.emitter)];
                    case 2:
                        s3 = _b.sent();
                        return [2 /*return*/, s3.send(putObjectCommand)];
                    case 3: return [4 /*yield*/, this.createMultiPartUpload()];
                    case 4:
                        uploadId = _b.sent();
                        numberOfPartsToUpload = Math.ceil(this.totalBytesToUpload / this.minPartSize);
                        start = 0;
                        _b.label = 5;
                    case 5:
                        if (!(start < numberOfPartsToUpload)) return [3 /*break*/, 10];
                        /** This first block will try to cancel the upload if the cancel
                         *	request came before any parts uploads have started.
                         **/
                        return [4 /*yield*/, this.checkIfUploadCancelled(uploadId)];
                    case 6:
                        /** This first block will try to cancel the upload if the cancel
                         *	request came before any parts uploads have started.
                         **/
                        _b.sent();
                        parts = this.createParts(start);
                        return [4 /*yield*/, this.uploadParts(uploadId, parts)];
                    case 7:
                        _b.sent();
                        /** Call cleanup a second time in case there were part upload requests
                         *  in flight. This is to ensure that all parts are cleaned up.
                         */
                        return [4 /*yield*/, this.checkIfUploadCancelled(uploadId)];
                    case 8:
                        /** Call cleanup a second time in case there were part upload requests
                         *  in flight. This is to ensure that all parts are cleaned up.
                         */
                        _b.sent();
                        _b.label = 9;
                    case 9:
                        start += this.queueSize;
                        return [3 /*break*/, 5];
                    case 10: return [4 /*yield*/, this.finishMultiPartUpload(uploadId)];
                    case 11: 
                    // Step 3: Finalize the upload such that S3 can recreate the file
                    return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    AWSS3ProviderManagedUpload.prototype.createParts = function (startPartNumber) {
        var parts = [];
        var partNumber = startPartNumber;
        for (var bodyStart = startPartNumber * this.minPartSize; bodyStart < this.totalBytesToUpload && parts.length < this.queueSize;) {
            var bodyEnd = Math.min(bodyStart + this.minPartSize, this.totalBytesToUpload);
            parts.push({
                bodyPart: this.body.slice(bodyStart, bodyEnd),
                partNumber: ++partNumber,
                emitter: new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter(),
                _lastUploadedBytes: 0,
            });
            bodyStart += this.minPartSize;
        }
        return parts;
    };
    AWSS3ProviderManagedUpload.prototype.createMultiPartUpload = function () {
        return __awaiter(this, void 0, void 0, function () {
            var createMultiPartUploadCommand, s3, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        createMultiPartUploadCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_5__.CreateMultipartUploadCommand(this.params);
                        return [4 /*yield*/, this._createNewS3Client(this.opts)];
                    case 1:
                        s3 = _a.sent();
                        return [4 /*yield*/, s3.send(createMultiPartUploadCommand)];
                    case 2:
                        response = _a.sent();
                        logger.debug(response.UploadId);
                        return [2 /*return*/, response.UploadId];
                }
            });
        });
    };
    /**
     * @private Not to be extended outside of tests
     * @VisibleFotTesting
     */
    AWSS3ProviderManagedUpload.prototype.uploadParts = function (uploadId, parts) {
        return __awaiter(this, void 0, void 0, function () {
            var promises, parts_1, parts_1_1, part, uploadPartCommandInput, uploadPartCommand, s3, e_1_1, allResults, i, error_1;
            var e_1, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        promises = [];
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 6, 7, 8]);
                        parts_1 = __values(parts), parts_1_1 = parts_1.next();
                        _b.label = 2;
                    case 2:
                        if (!!parts_1_1.done) return [3 /*break*/, 5];
                        part = parts_1_1.value;
                        this.setupEventListener(part);
                        uploadPartCommandInput = {
                            PartNumber: part.partNumber,
                            Body: part.bodyPart,
                            UploadId: uploadId,
                            Key: this.params.Key,
                            Bucket: this.params.Bucket,
                        };
                        uploadPartCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_6__.UploadPartCommand(uploadPartCommandInput);
                        return [4 /*yield*/, this._createNewS3Client(this.opts, part.emitter)];
                    case 3:
                        s3 = _b.sent();
                        promises.push(s3.send(uploadPartCommand));
                        _b.label = 4;
                    case 4:
                        parts_1_1 = parts_1.next();
                        return [3 /*break*/, 2];
                    case 5: return [3 /*break*/, 8];
                    case 6:
                        e_1_1 = _b.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 8];
                    case 7:
                        try {
                            if (parts_1_1 && !parts_1_1.done && (_a = parts_1.return)) _a.call(parts_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 8:
                        _b.trys.push([8, 10, , 11]);
                        return [4 /*yield*/, Promise.all(promises)];
                    case 9:
                        allResults = _b.sent();
                        // The order of resolved promises is the same as input promise order.
                        for (i = 0; i < allResults.length; i++) {
                            this.multiPartMap.push({
                                PartNumber: parts[i].partNumber,
                                ETag: allResults[i].ETag,
                            });
                        }
                        return [3 /*break*/, 11];
                    case 10:
                        error_1 = _b.sent();
                        logger.error('error happened while uploading a part. Cancelling the multipart upload', error_1);
                        this.cancelUpload();
                        return [2 /*return*/];
                    case 11: return [2 /*return*/];
                }
            });
        });
    };
    AWSS3ProviderManagedUpload.prototype.finishMultiPartUpload = function (uploadId) {
        return __awaiter(this, void 0, void 0, function () {
            var input, completeUploadCommand, s3, data, error_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        input = {
                            Bucket: this.params.Bucket,
                            Key: this.params.Key,
                            UploadId: uploadId,
                            MultipartUpload: { Parts: this.multiPartMap },
                        };
                        completeUploadCommand = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_7__.CompleteMultipartUploadCommand(input);
                        return [4 /*yield*/, this._createNewS3Client(this.opts)];
                    case 1:
                        s3 = _a.sent();
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, s3.send(completeUploadCommand)];
                    case 3:
                        data = _a.sent();
                        return [2 /*return*/, data.Key];
                    case 4:
                        error_2 = _a.sent();
                        logger.error('error happened while finishing the upload. Cancelling the multipart upload', error_2);
                        this.cancelUpload();
                        return [2 /*return*/];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    AWSS3ProviderManagedUpload.prototype.checkIfUploadCancelled = function (uploadId) {
        return __awaiter(this, void 0, void 0, function () {
            var errorMessage, error_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.cancel) return [3 /*break*/, 5];
                        errorMessage = 'Upload was cancelled.';
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.cleanup(uploadId)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        error_3 = _a.sent();
                        errorMessage += error_3.errorMessage;
                        return [3 /*break*/, 4];
                    case 4: throw new Error(errorMessage);
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    AWSS3ProviderManagedUpload.prototype.cancelUpload = function () {
        this.cancel = true;
    };
    AWSS3ProviderManagedUpload.prototype.cleanup = function (uploadId) {
        return __awaiter(this, void 0, void 0, function () {
            var input, s3, data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // Reset this's state
                        this.body = null;
                        this.multiPartMap = [];
                        this.bytesUploaded = 0;
                        this.totalBytesToUpload = 0;
                        input = {
                            Bucket: this.params.Bucket,
                            Key: this.params.Key,
                            UploadId: uploadId,
                        };
                        return [4 /*yield*/, this._createNewS3Client(this.opts)];
                    case 1:
                        s3 = _a.sent();
                        return [4 /*yield*/, s3.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_8__.AbortMultipartUploadCommand(input))];
                    case 2:
                        _a.sent();
                        return [4 /*yield*/, s3.send(new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_9__.ListPartsCommand(input))];
                    case 3:
                        data = _a.sent();
                        if (data && data.Parts && data.Parts.length > 0) {
                            throw new Error('Multi Part upload clean up failed');
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    AWSS3ProviderManagedUpload.prototype.setupEventListener = function (part) {
        var _this = this;
        part.emitter.on(_axios_http_handler__WEBPACK_IMPORTED_MODULE_10__.SEND_PROGRESS_EVENT, function (progress) {
            _this.progressChanged(part.partNumber, progress.loaded - part._lastUploadedBytes);
            part._lastUploadedBytes = progress.loaded;
        });
    };
    AWSS3ProviderManagedUpload.prototype.progressChanged = function (partNumber, incrementalUpdate) {
        this.bytesUploaded += incrementalUpdate;
        this.emitter.emit(_axios_http_handler__WEBPACK_IMPORTED_MODULE_10__.SEND_PROGRESS_EVENT, {
            loaded: this.bytesUploaded,
            total: this.totalBytesToUpload,
            part: partNumber,
            key: this.params.Key,
        });
    };
    AWSS3ProviderManagedUpload.prototype.byteLength = function (input) {
        if (input === null || input === undefined)
            return 0;
        if (typeof input.byteLength === 'number') {
            return input.byteLength;
        }
        else if (typeof input.length === 'number') {
            return input.length;
        }
        else if (typeof input.size === 'number') {
            return input.size;
        }
        else if (typeof input.path === 'string') {
            /* NodeJs Support
            return require('fs').lstatSync(input.path).size;
            */
        }
        else {
            throw new Error('Cannot determine length of ' + input);
        }
    };
    AWSS3ProviderManagedUpload.prototype.validateAndSanitizeBody = function (body) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.isGenericObject(body)) return [3 /*break*/, 1];
                        // Any javascript object
                        return [2 /*return*/, JSON.stringify(body)];
                    case 1:
                        if (!this.isBlob(body)) return [3 /*break*/, 4];
                        if (!_aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.Platform.isReactNative) return [3 /*break*/, 3];
                        return [4 /*yield*/, (0,_aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_2__.streamCollector)(body)];
                    case 2: return [2 /*return*/, _a.sent()];
                    case 3: return [2 /*return*/, body];
                    case 4: 
                    // Files, arrayBuffer etc
                    return [2 /*return*/, body];
                }
            });
        });
    };
    AWSS3ProviderManagedUpload.prototype.isBlob = function (body) {
        return typeof Blob !== 'undefined' && body instanceof Blob;
    };
    AWSS3ProviderManagedUpload.prototype.isGenericObject = function (body) {
        if (body !== null && typeof body === 'object') {
            try {
                return !(this.byteLength(body) >= 0);
            }
            catch (error) {
                // If we cannot determine the length of the body, consider it
                // as a generic object and upload a stringified version of it
                return true;
            }
        }
        return false;
    };
    /**
     * @private
     * creates an S3 client with new V3 aws sdk
     */
    AWSS3ProviderManagedUpload.prototype._createNewS3Client = function (config, emitter) {
        return __awaiter(this, void 0, void 0, function () {
            var credentials, region, dangerouslyConnectToHttpEndpointForTesting, localTestingConfig, client;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this._getCredentials()];
                    case 1:
                        credentials = _a.sent();
                        region = config.region, dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting;
                        localTestingConfig = {};
                        if (dangerouslyConnectToHttpEndpointForTesting) {
                            localTestingConfig = {
                                endpoint: localTestingStorageEndpoint,
                                tls: false,
                                bucketEndpoint: false,
                                forcePathStyle: true,
                            };
                        }
                        client = new _aws_sdk_client_s3__WEBPACK_IMPORTED_MODULE_12__.S3Client(__assign(__assign({ region: region,
                            credentials: credentials }, localTestingConfig), { requestHandler: new _axios_http_handler__WEBPACK_IMPORTED_MODULE_10__.AxiosHttpHandler({}, emitter), customUserAgent: (0,_aws_amplify_core__WEBPACK_IMPORTED_MODULE_11__.getAmplifyUserAgent)(), urlParser: _aws_sdk_url_parser_node__WEBPACK_IMPORTED_MODULE_1__.parseUrl }));
                        client.middlewareStack.remove(SET_CONTENT_LENGTH_HEADER);
                        return [2 /*return*/, client];
                }
            });
        });
    };
    /**
     * @private
     */
    AWSS3ProviderManagedUpload.prototype._getCredentials = function () {
        return _aws_amplify_core__WEBPACK_IMPORTED_MODULE_13__.Credentials.get()
            .then(function (credentials) {
            if (!credentials)
                return false;
            var cred = _aws_amplify_core__WEBPACK_IMPORTED_MODULE_13__.Credentials.shear(credentials);
            logger.debug('set credentials for storage', cred);
            return cred;
        })
            .catch(function (error) {
            logger.warn('ensure credentials error', error);
            return false;
        });
    };
    return AWSS3ProviderManagedUpload;
}());



/***/ }),

/***/ 99836:
/*!***********************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/providers/axios-http-handler.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SEND_PROGRESS_EVENT": () => (/* binding */ SEND_PROGRESS_EVENT),
/* harmony export */   "AxiosHttpHandler": () => (/* binding */ AxiosHttpHandler)
/* harmony export */ });
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);
/* harmony import */ var _aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/querystring-builder */ 16949);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ 25597);
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-amplify/core */ 75582);
/*
 * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */




var logger = new _aws_amplify_core__WEBPACK_IMPORTED_MODULE_3__.ConsoleLogger('axios-http-handler');
var SEND_PROGRESS_EVENT = 'sendProgress';
var AxiosHttpHandler = /** @class */ (function () {
    function AxiosHttpHandler(httpOptions, emitter) {
        if (httpOptions === void 0) { httpOptions = {}; }
        this.httpOptions = httpOptions;
        this.emitter = emitter;
    }
    AxiosHttpHandler.prototype.destroy = function () {
        // Do nothing. TLS and HTTP/2 connection pooling is handled by the
        // browser.
    };
    AxiosHttpHandler.prototype.handle = function (request, options) {
        var requestTimeoutInMs = this.httpOptions.requestTimeout;
        var emitter = this.emitter;
        var path = request.path;
        if (request.query) {
            var queryString = (0,_aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_1__.buildQueryString)(request.query);
            if (queryString) {
                path += "?" + queryString;
            }
        }
        var port = request.port;
        var url = request.protocol + "//" + request.hostname + (port ? ":" + port : '') + path;
        var axiosRequest = {};
        axiosRequest.url = url;
        axiosRequest.method = request.method;
        axiosRequest.headers = request.headers;
        // The host header is automatically added by the browser and adding it explicitly in the
        // axios request throws an error https://github.com/aws-amplify/amplify-js/issues/5376
        // This is because the host header is a forbidden header for the http client to set
        // see https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name and
        // https://fetch.spec.whatwg.org/#forbidden-header-name
        // The reason we are removing this header here instead of in the aws-sdk's client
        // middleware is that the host header is required to be in the request signature and if
        // we remove it from the middlewares, then the request fails because the header is added
        // by the browser but is absent from the signature.
        delete axiosRequest.headers['host'];
        if (request.body) {
            axiosRequest.data = request.body;
        }
        else {
            // Fix for https://github.com/aws-amplify/amplify-js/issues/5432
            // If the POST request body is empty but content-type header is set, axios is forcibly removing it
            // See https://github.com/axios/axios/issues/1535 and refusing to fix it https://github.com/axios/axios/issues/755
            // This change is a workaround to set the data as null (instead of undefined) to prevent axios from
            // removing the content-type header. Link for the source code
            // https://github.com/axios/axios/blob/dc4bc49673943e35280e5df831f5c3d0347a9393/lib/adapters/xhr.js#L121-L123
            if (axiosRequest.headers['Content-Type']) {
                axiosRequest.data = null;
            }
        }
        if (emitter) {
            axiosRequest.onUploadProgress = function (event) {
                emitter.emit(SEND_PROGRESS_EVENT, event);
                logger.debug(event);
            };
        }
        // From gamma release, aws-sdk now expects all response type to be of blob or streams
        axiosRequest.responseType = 'blob';
        var raceOfPromises = [
            axios__WEBPACK_IMPORTED_MODULE_2___default().request(axiosRequest)
                .then(function (response) {
                return {
                    response: new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpResponse({
                        headers: response.headers,
                        statusCode: response.status,
                        body: response.data,
                    }),
                };
            })
                .catch(function (error) {
                // Error
                logger.error(error);
                throw error;
            }),
            requestTimeout(requestTimeoutInMs),
        ];
        return Promise.race(raceOfPromises);
    };
    return AxiosHttpHandler;
}());

function requestTimeout(timeoutInMs) {
    if (timeoutInMs === void 0) { timeoutInMs = 0; }
    return new Promise(function (resolve, reject) {
        if (timeoutInMs) {
            setTimeout(function () {
                var timeoutError = new Error("Request did not complete within " + timeoutInMs + " ms");
                timeoutError.name = 'TimeoutError';
                reject(timeoutError);
            }, timeoutInMs);
        }
    });
}


/***/ }),

/***/ 81681:
/*!**********************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/lib-esm/providers/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AWSS3Provider": () => (/* reexport safe */ _AWSS3Provider__WEBPACK_IMPORTED_MODULE_0__.AWSS3Provider)
/* harmony export */ });
/* harmony import */ var _AWSS3Provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AWSS3Provider */ 61812);



/***/ }),

/***/ 25597:
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/index.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./lib/axios */ 72698);

/***/ }),

/***/ 32016:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/adapters/xhr.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 82057);
var settle = __webpack_require__(/*! ./../core/settle */ 33359);
var cookies = __webpack_require__(/*! ./../helpers/cookies */ 45111);
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ 54550);
var buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ 65027);
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ 53887);
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ 89867);
var createError = __webpack_require__(/*! ../core/createError */ 54777);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ 72698:
/*!*******************!*\
  !*** ./lib/axios ***!
  \*******************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ 82057);
var bind = __webpack_require__(/*! ./helpers/bind */ 83629);
var Axios = __webpack_require__(/*! ./core/Axios */ 50948);
var mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ 29034);
var defaults = __webpack_require__(/*! ./defaults */ 84769);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ 72539);
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ 41331);
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ 76018);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ 581);

// Expose isAxiosError
axios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ 36722);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),

/***/ 72539:
/*!***********************!*\
  !*** ./cancel/Cancel ***!
  \***********************/
/***/ ((module) => {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ 41331:
/*!****************************!*\
  !*** ./cancel/CancelToken ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ 72539);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ 76018:
/*!*************************!*\
  !*** ./cancel/isCancel ***!
  \*************************/
/***/ ((module) => {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ 50948:
/*!********************!*\
  !*** ./core/Axios ***!
  \********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 82057);
var buildURL = __webpack_require__(/*! ../helpers/buildURL */ 54550);
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ 92046);
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ 53611);
var mergeConfig = __webpack_require__(/*! ./mergeConfig */ 29034);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ 92046:
/*!****************************!*\
  !*** ./InterceptorManager ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 82057);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ 65027:
/*!****************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/core/buildFullPath.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ 72558);
var combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ 19757);

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ 54777:
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/core/createError.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ 31844);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ 53611:
/*!*************************!*\
  !*** ./dispatchRequest ***!
  \*************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 82057);
var transformData = __webpack_require__(/*! ./transformData */ 93224);
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ 76018);
var defaults = __webpack_require__(/*! ../defaults */ 84769);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ 31844:
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/core/enhanceError.js ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),

/***/ 29034:
/*!**************************!*\
  !*** ./core/mergeConfig ***!
  \**************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ 82057);

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};


/***/ }),

/***/ 33359:
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/core/settle.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var createError = __webpack_require__(/*! ./createError */ 54777);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ 93224:
/*!***********************!*\
  !*** ./transformData ***!
  \***********************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 82057);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),

/***/ 84769:
/*!******************!*\
  !*** ./defaults ***!
  \******************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ 82057);
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ 63191);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ 32016);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ 32016);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),

/***/ 83629:
/*!**********************!*\
  !*** ./helpers/bind ***!
  \**********************/
/***/ ((module) => {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ 54550:
/*!***************************!*\
  !*** ../helpers/buildURL ***!
  \***************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 82057);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ 19757:
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/helpers/combineURLs.js ***!
  \*****************************************************************************************/
/***/ ((module) => {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ 45111:
/*!*************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/helpers/cookies.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 82057);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ 72558:
/*!********************************!*\
  !*** ../helpers/isAbsoluteURL ***!
  \********************************/
/***/ ((module) => {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ 36722:
/*!******************************!*\
  !*** ./helpers/isAxiosError ***!
  \******************************/
/***/ ((module) => {

"use strict";


/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};


/***/ }),

/***/ 89867:
/*!*********************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \*********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 82057);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ 63191:
/*!*************************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \*************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ 82057);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ 53887:
/*!******************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/storage/node_modules/axios/lib/helpers/parseHeaders.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ 82057);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ 581:
/*!************************!*\
  !*** ./helpers/spread ***!
  \************************/
/***/ ((module) => {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ 82057:
/*!***************!*\
  !*** ./utils ***!
  \***************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ 83629);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};


/***/ }),

/***/ 21646:
/*!**************************************************************************************!*\
  !*** ./node_modules/@aws-amplify/ui-components/dist/esm/storage-helpers-48c373a0.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "a": () => (/* binding */ getTextSource),
/* harmony export */   "c": () => (/* binding */ calcKey),
/* harmony export */   "g": () => (/* binding */ getStorageObject),
/* harmony export */   "i": () => (/* binding */ imageFileType),
/* harmony export */   "p": () => (/* binding */ putStorageObject)
/* harmony export */ });
/* harmony import */ var C_Users_Sampath_Music_mentor_cards_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 19369);
/* harmony import */ var _constants_d1abe7de_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants-d1abe7de.js */ 14481);
/* harmony import */ var _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-amplify/storage */ 37484);



const imageFileType = new Set(['apng', 'bmp', 'gif', 'ico', 'cur', 'jpg', 'jpeg', 'jfif', 'pjpeg', 'pjp', 'png', 'svg', 'tif', 'tiff', 'webp']);

const calcKey = (file, fileToKey) => {
  const {
    name,
    size,
    type
  } = file;
  let key = encodeURI(name);

  if (fileToKey) {
    if (typeof fileToKey === 'string') {
      key = fileToKey;
    } else if (typeof fileToKey === 'function') {
      key = fileToKey({
        name,
        size,
        type
      });
    } else {
      key = encodeURI(JSON.stringify(fileToKey));
    }

    if (!key) {
      key = 'empty_key';
    }
  }

  return key.replace(/\s/g, '_');
};

const getStorageObject = /*#__PURE__*/function () {
  var _ref = (0,C_Users_Sampath_Music_mentor_cards_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* (key, level, track, identityId, logger) {
    if (!_aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__.Storage || typeof _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__.Storage.get !== 'function') {
      throw new Error(_constants_d1abe7de_js__WEBPACK_IMPORTED_MODULE_1__.e);
    }

    try {
      const src = yield _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__.Storage.get(key, {
        level,
        track,
        identityId
      });
      logger.debug('Storage image get', src);
      return src;
    } catch (error) {
      throw new Error(error);
    }
  });

  return function getStorageObject(_x, _x2, _x3, _x4, _x5) {
    return _ref.apply(this, arguments);
  };
}();

const readFileAsync = blob => {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();

    reader.onload = () => {
      resolve(reader.result);
    };

    reader.onerror = () => {
      reject('Failed to read file!');
      reader.abort();
    };

    reader.readAsText(blob);
  });
};

const getTextSource = /*#__PURE__*/function () {
  var _ref2 = (0,C_Users_Sampath_Music_mentor_cards_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* (key, level, track, identityId, logger) {
    if (!_aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__.Storage || typeof _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__.Storage.get !== 'function') {
      throw new Error(_constants_d1abe7de_js__WEBPACK_IMPORTED_MODULE_1__.e);
    }

    try {
      const textSrc = yield _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__.Storage.get(key, {
        download: true,
        level,
        track,
        identityId
      });
      logger.debug(textSrc);
      const text = yield readFileAsync(textSrc['Body']);
      return text;
    } catch (error) {
      throw new Error(error);
    }
  });

  return function getTextSource(_x6, _x7, _x8, _x9, _x10) {
    return _ref2.apply(this, arguments);
  };
}();

const putStorageObject = /*#__PURE__*/function () {
  var _ref3 = (0,C_Users_Sampath_Music_mentor_cards_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__.default)(function* (key, body, level, track, contentType, logger) {
    if (!_aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__.Storage || typeof _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__.Storage.put !== 'function') {
      throw new Error(_constants_d1abe7de_js__WEBPACK_IMPORTED_MODULE_1__.e);
    }

    try {
      const data = yield _aws_amplify_storage__WEBPACK_IMPORTED_MODULE_2__.Storage.put(key, body, {
        contentType,
        level,
        track
      });
      logger.debug('Upload data', data);
    } catch (error) {
      throw new Error(error);
    }
  });

  return function putStorageObject(_x11, _x12, _x13, _x14, _x15, _x16) {
    return _ref3.apply(this, arguments);
  };
}();



/***/ }),

/***/ 21833:
/*!***********************************************************!*\
  !*** ./node_modules/@aws-crypto/crc32/build/aws_crc32.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AwsCrc32 = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31098);
var util_1 = __webpack_require__(/*! @aws-crypto/util */ 50007);
var index_1 = __webpack_require__(/*! ./index */ 25926);
var AwsCrc32 = /** @class */ (function () {
    function AwsCrc32() {
        this.crc32 = new index_1.Crc32();
    }
    AwsCrc32.prototype.update = function (toHash) {
        if ((0, util_1.isEmptyData)(toHash))
            return;
        this.crc32.update((0, util_1.convertToBuffer)(toHash));
    };
    AwsCrc32.prototype.digest = function () {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            return (0, tslib_1.__generator)(this, function (_a) {
                return [2 /*return*/, (0, util_1.numToUint8)(this.crc32.digest())];
            });
        });
    };
    return AwsCrc32;
}());
exports.AwsCrc32 = AwsCrc32;


/***/ }),

/***/ 25926:
/*!*******************************************************!*\
  !*** ./node_modules/@aws-crypto/crc32/build/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AwsCrc32 = exports.Crc32 = exports.crc32 = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31098);
var util_1 = __webpack_require__(/*! @aws-crypto/util */ 50007);
function crc32(data) {
    return new Crc32().update(data).digest();
}
exports.crc32 = crc32;
var Crc32 = /** @class */ (function () {
    function Crc32() {
        this.checksum = 0xffffffff;
    }
    Crc32.prototype.update = function (data) {
        var e_1, _a;
        try {
            for (var data_1 = (0, tslib_1.__values)(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {
                var byte = data_1_1.value;
                this.checksum =
                    (this.checksum >>> 8) ^ lookupTable[(this.checksum ^ byte) & 0xff];
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return this;
    };
    Crc32.prototype.digest = function () {
        return (this.checksum ^ 0xffffffff) >>> 0;
    };
    return Crc32;
}());
exports.Crc32 = Crc32;
// prettier-ignore
var a_lookUpTable = [
    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA,
    0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,
    0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,
    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91,
    0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,
    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,
    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,
    0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5,
    0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,
    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,
    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940,
    0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,
    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116,
    0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,
    0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,
    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,
    0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A,
    0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,
    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818,
    0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,
    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,
    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457,
    0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C,
    0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,
    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,
    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB,
    0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,
    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,
    0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086,
    0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,
    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4,
    0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD,
    0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,
    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683,
    0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,
    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,
    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE,
    0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7,
    0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,
    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,
    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252,
    0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,
    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60,
    0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79,
    0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,
    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F,
    0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04,
    0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,
    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,
    0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,
    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,
    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21,
    0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E,
    0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,
    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,
    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,
    0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,
    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB,
    0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0,
    0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,
    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6,
    0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF,
    0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,
    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D,
];
var lookupTable = (0, util_1.uint32ArrayFrom)(a_lookUpTable);
var aws_crc32_1 = __webpack_require__(/*! ./aws_crc32 */ 21833);
Object.defineProperty(exports, "AwsCrc32", ({ enumerable: true, get: function () { return aws_crc32_1.AwsCrc32; } }));


/***/ }),

/***/ 18057:
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/chunked-blob-reader/dist/es/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blobReader": () => (/* binding */ blobReader)
/* harmony export */ });
function blobReader(blob, onChunk, chunkSize) {
    if (chunkSize === void 0) { chunkSize = 1024 * 1024; }
    return new Promise(function (resolve, reject) {
        var fileReader = new FileReader();
        fileReader.addEventListener("error", reject);
        fileReader.addEventListener("abort", reject);
        var size = blob.size;
        var totalBytesRead = 0;
        function read() {
            if (totalBytesRead >= size) {
                resolve();
                return;
            }
            fileReader.readAsArrayBuffer(blob.slice(totalBytesRead, Math.min(size, totalBytesRead + chunkSize)));
        }
        fileReader.addEventListener("load", function (event) {
            var result = event.target.result;
            onChunk(new Uint8Array(result));
            totalBytesRead += result.byteLength;
            // read the next block
            read();
        });
        // kick off the read
        read();
    });
}


/***/ }),

/***/ 49551:
/*!*************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/S3Client.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "S3Client": () => (/* binding */ S3Client)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _runtimeConfig__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./runtimeConfig */ 11572);
/* harmony import */ var _aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/config-resolver */ 98140);
/* harmony import */ var _aws_sdk_eventstream_serde_config_resolver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/eventstream-serde-config-resolver */ 66021);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_content_length__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/middleware-content-length */ 9492);
/* harmony import */ var _aws_sdk_middleware_expect_continue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/middleware-expect-continue */ 62608);
/* harmony import */ var _aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/middleware-host-header */ 9312);
/* harmony import */ var _aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/middleware-logger */ 64871);
/* harmony import */ var _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/middleware-retry */ 9485);
/* harmony import */ var _aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-sdk/middleware-sdk-s3 */ 51862);
/* harmony import */ var _aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/middleware-signing */ 70461);
/* harmony import */ var _aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aws-sdk/middleware-user-agent */ 19189);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);














/**
 * <p></p>
 */
var S3Client = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__extends)(S3Client, _super);
    function S3Client(configuration) {
        var _this = this;
        var _config_0 = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_12__.__assign)({}, _runtimeConfig__WEBPACK_IMPORTED_MODULE_13__.ClientDefaultValues), configuration);
        var _config_1 = (0,_aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveRegionConfig)(_config_0);
        var _config_2 = (0,_aws_sdk_config_resolver__WEBPACK_IMPORTED_MODULE_0__.resolveEndpointsConfig)(_config_1);
        var _config_3 = (0,_aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_9__.resolveAwsAuthConfig)(_config_2);
        var _config_4 = (0,_aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_7__.resolveRetryConfig)(_config_3);
        var _config_5 = (0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_10__.resolveUserAgentConfig)(_config_4);
        var _config_6 = (0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_2__.resolveBucketEndpointConfig)(_config_5);
        var _config_7 = (0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_5__.resolveHostHeaderConfig)(_config_6);
        var _config_8 = (0,_aws_sdk_eventstream_serde_config_resolver__WEBPACK_IMPORTED_MODULE_1__.resolveEventStreamSerdeConfig)(_config_7);
        _this = _super.call(this, _config_8) || this;
        _this.config = _config_8;
        _this.middlewareStack.use((0,_aws_sdk_middleware_signing__WEBPACK_IMPORTED_MODULE_9__.getAwsAuthPlugin)(_this.config));
        _this.middlewareStack.use((0,_aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_7__.getRetryPlugin)(_this.config));
        _this.middlewareStack.use((0,_aws_sdk_middleware_user_agent__WEBPACK_IMPORTED_MODULE_10__.getUserAgentPlugin)(_this.config));
        _this.middlewareStack.use((0,_aws_sdk_middleware_content_length__WEBPACK_IMPORTED_MODULE_3__.getContentLengthPlugin)(_this.config));
        _this.middlewareStack.use((0,_aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_8__.getValidateBucketNamePlugin)(_this.config));
        _this.middlewareStack.use((0,_aws_sdk_middleware_sdk_s3__WEBPACK_IMPORTED_MODULE_8__.getUseRegionalEndpointPlugin)(_this.config));
        _this.middlewareStack.use((0,_aws_sdk_middleware_expect_continue__WEBPACK_IMPORTED_MODULE_4__.getAddExpectContinuePlugin)(_this.config));
        _this.middlewareStack.use((0,_aws_sdk_middleware_host_header__WEBPACK_IMPORTED_MODULE_5__.getHostHeaderPlugin)(_this.config));
        _this.middlewareStack.use((0,_aws_sdk_middleware_logger__WEBPACK_IMPORTED_MODULE_6__.getLoggerPlugin)(_this.config));
        return _this;
    }
    S3Client.prototype.destroy = function () {
        _super.prototype.destroy.call(this);
    };
    return S3Client;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_11__.Client));



/***/ }),

/***/ 59549:
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/AbortMultipartUploadCommand.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbortMultipartUploadCommand": () => (/* binding */ AbortMultipartUploadCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






var AbortMultipartUploadCommand = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(AbortMultipartUploadCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function AbortMultipartUploadCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    AbortMultipartUploadCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "S3Client";
        var commandName = "AbortMultipartUploadCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.AbortMultipartUploadRequest.filterSensitiveLog,
            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.AbortMultipartUploadOutput.filterSensitiveLog,
        };
        if (typeof logger.info === "function") {
            logger.info({
                clientName: clientName,
                commandName: commandName,
            });
        }
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    AbortMultipartUploadCommand.prototype.serialize = function (input, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlAbortMultipartUploadCommand)(input, context);
    };
    AbortMultipartUploadCommand.prototype.deserialize = function (output, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlAbortMultipartUploadCommand)(output, context);
    };
    return AbortMultipartUploadCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command));



/***/ }),

/***/ 10:
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/CompleteMultipartUploadCommand.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CompleteMultipartUploadCommand": () => (/* binding */ CompleteMultipartUploadCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






var CompleteMultipartUploadCommand = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(CompleteMultipartUploadCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function CompleteMultipartUploadCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    CompleteMultipartUploadCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "S3Client";
        var commandName = "CompleteMultipartUploadCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.CompleteMultipartUploadRequest.filterSensitiveLog,
            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.CompleteMultipartUploadOutput.filterSensitiveLog,
        };
        if (typeof logger.info === "function") {
            logger.info({
                clientName: clientName,
                commandName: commandName,
            });
        }
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    CompleteMultipartUploadCommand.prototype.serialize = function (input, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlCompleteMultipartUploadCommand)(input, context);
    };
    CompleteMultipartUploadCommand.prototype.deserialize = function (output, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlCompleteMultipartUploadCommand)(output, context);
    };
    return CompleteMultipartUploadCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command));



/***/ }),

/***/ 1346:
/*!******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/CreateMultipartUploadCommand.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CreateMultipartUploadCommand": () => (/* binding */ CreateMultipartUploadCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-ssec */ 40285);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);







var CreateMultipartUploadCommand = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(CreateMultipartUploadCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function CreateMultipartUploadCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    CreateMultipartUploadCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use((0,_aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__.getSsecPlugin)(configuration));
        this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "S3Client";
        var commandName = "CreateMultipartUploadCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.CreateMultipartUploadRequest.filterSensitiveLog,
            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.CreateMultipartUploadOutput.filterSensitiveLog,
        };
        if (typeof logger.info === "function") {
            logger.info({
                clientName: clientName,
                commandName: commandName,
            });
        }
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    CreateMultipartUploadCommand.prototype.serialize = function (input, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.serializeAws_restXmlCreateMultipartUploadCommand)(input, context);
    };
    CreateMultipartUploadCommand.prototype.deserialize = function (output, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.deserializeAws_restXmlCreateMultipartUploadCommand)(output, context);
    };
    return CreateMultipartUploadCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__.Command));



/***/ }),

/***/ 76912:
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/DeleteObjectCommand.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeleteObjectCommand": () => (/* binding */ DeleteObjectCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






var DeleteObjectCommand = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(DeleteObjectCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function DeleteObjectCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    DeleteObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "S3Client";
        var commandName = "DeleteObjectCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.DeleteObjectRequest.filterSensitiveLog,
            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.DeleteObjectOutput.filterSensitiveLog,
        };
        if (typeof logger.info === "function") {
            logger.info({
                clientName: clientName,
                commandName: commandName,
            });
        }
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    DeleteObjectCommand.prototype.serialize = function (input, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlDeleteObjectCommand)(input, context);
    };
    DeleteObjectCommand.prototype.deserialize = function (output, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlDeleteObjectCommand)(output, context);
    };
    return DeleteObjectCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command));



/***/ }),

/***/ 19813:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/GetObjectCommand.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GetObjectCommand": () => (/* binding */ GetObjectCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-ssec */ 40285);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);







var GetObjectCommand = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(GetObjectCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function GetObjectCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    GetObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use((0,_aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__.getSsecPlugin)(configuration));
        this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "S3Client";
        var commandName = "GetObjectCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.GetObjectRequest.filterSensitiveLog,
            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.GetObjectOutput.filterSensitiveLog,
        };
        if (typeof logger.info === "function") {
            logger.info({
                clientName: clientName,
                commandName: commandName,
            });
        }
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    GetObjectCommand.prototype.serialize = function (input, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.serializeAws_restXmlGetObjectCommand)(input, context);
    };
    GetObjectCommand.prototype.deserialize = function (output, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.deserializeAws_restXmlGetObjectCommand)(output, context);
    };
    return GetObjectCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__.Command));



/***/ }),

/***/ 79974:
/*!********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/ListObjectsCommand.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListObjectsCommand": () => (/* binding */ ListObjectsCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






var ListObjectsCommand = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(ListObjectsCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function ListObjectsCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    ListObjectsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "S3Client";
        var commandName = "ListObjectsCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListObjectsRequest.filterSensitiveLog,
            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListObjectsOutput.filterSensitiveLog,
        };
        if (typeof logger.info === "function") {
            logger.info({
                clientName: clientName,
                commandName: commandName,
            });
        }
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    ListObjectsCommand.prototype.serialize = function (input, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlListObjectsCommand)(input, context);
    };
    ListObjectsCommand.prototype.deserialize = function (output, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlListObjectsCommand)(output, context);
    };
    return ListObjectsCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command));



/***/ }),

/***/ 65674:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/ListPartsCommand.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListPartsCommand": () => (/* binding */ ListPartsCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);






var ListPartsCommand = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(ListPartsCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function ListPartsCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    ListPartsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "S3Client";
        var commandName = "ListPartsCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListPartsRequest.filterSensitiveLog,
            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_4__.ListPartsOutput.filterSensitiveLog,
        };
        if (typeof logger.info === "function") {
            logger.info({
                clientName: clientName,
                commandName: commandName,
            });
        }
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    ListPartsCommand.prototype.serialize = function (input, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.serializeAws_restXmlListPartsCommand)(input, context);
    };
    ListPartsCommand.prototype.deserialize = function (output, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_5__.deserializeAws_restXmlListPartsCommand)(output, context);
    };
    return ListPartsCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_2__.Command));



/***/ }),

/***/ 4391:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/PutObjectCommand.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PutObjectCommand": () => (/* binding */ PutObjectCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_models_0__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_0 */ 37325);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-ssec */ 40285);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);







var PutObjectCommand = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(PutObjectCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function PutObjectCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    PutObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use((0,_aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__.getSsecPlugin)(configuration));
        this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "S3Client";
        var commandName = "PutObjectCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.PutObjectRequest.filterSensitiveLog,
            outputFilterSensitiveLog: _models_models_0__WEBPACK_IMPORTED_MODULE_5__.PutObjectOutput.filterSensitiveLog,
        };
        if (typeof logger.info === "function") {
            logger.info({
                clientName: clientName,
                commandName: commandName,
            });
        }
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    PutObjectCommand.prototype.serialize = function (input, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.serializeAws_restXmlPutObjectCommand)(input, context);
    };
    PutObjectCommand.prototype.deserialize = function (output, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.deserializeAws_restXmlPutObjectCommand)(output, context);
    };
    return PutObjectCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__.Command));



/***/ }),

/***/ 45677:
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/commands/UploadPartCommand.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UploadPartCommand": () => (/* binding */ UploadPartCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_models_1__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/models_1 */ 61250);
/* harmony import */ var _protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../protocols/Aws_restXml */ 74613);
/* harmony import */ var _aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/middleware-bucket-endpoint */ 58538);
/* harmony import */ var _aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/middleware-serde */ 70308);
/* harmony import */ var _aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/middleware-ssec */ 40285);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);







var UploadPartCommand = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__extends)(UploadPartCommand, _super);
    // Start section: command_properties
    // End section: command_properties
    function UploadPartCommand(input) {
        var _this = 
        // Start section: command_constructor
        _super.call(this) || this;
        _this.input = input;
        return _this;
        // End section: command_constructor
    }
    UploadPartCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {
        this.middlewareStack.use((0,_aws_sdk_middleware_serde__WEBPACK_IMPORTED_MODULE_1__.getSerdePlugin)(configuration, this.serialize, this.deserialize));
        this.middlewareStack.use((0,_aws_sdk_middleware_ssec__WEBPACK_IMPORTED_MODULE_2__.getSsecPlugin)(configuration));
        this.middlewareStack.use((0,_aws_sdk_middleware_bucket_endpoint__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin)(configuration));
        var stack = clientStack.concat(this.middlewareStack);
        var logger = configuration.logger;
        var clientName = "S3Client";
        var commandName = "UploadPartCommand";
        var handlerExecutionContext = {
            logger: logger,
            clientName: clientName,
            commandName: commandName,
            inputFilterSensitiveLog: _models_models_1__WEBPACK_IMPORTED_MODULE_5__.UploadPartRequest.filterSensitiveLog,
            outputFilterSensitiveLog: _models_models_1__WEBPACK_IMPORTED_MODULE_5__.UploadPartOutput.filterSensitiveLog,
        };
        if (typeof logger.info === "function") {
            logger.info({
                clientName: clientName,
                commandName: commandName,
            });
        }
        var requestHandler = configuration.requestHandler;
        return stack.resolve(function (request) {
            return requestHandler.handle(request.request, options || {});
        }, handlerExecutionContext);
    };
    UploadPartCommand.prototype.serialize = function (input, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.serializeAws_restXmlUploadPartCommand)(input, context);
    };
    UploadPartCommand.prototype.deserialize = function (output, context) {
        return (0,_protocols_Aws_restXml__WEBPACK_IMPORTED_MODULE_6__.deserializeAws_restXmlUploadPartCommand)(output, context);
    };
    return UploadPartCommand;
}(_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_3__.Command));



/***/ }),

/***/ 81084:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/endpoints.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "defaultRegionInfoProvider": () => (/* binding */ defaultRegionInfoProvider)
/* harmony export */ });
// Partition default templates
var AWS_TEMPLATE = "s3.{region}.amazonaws.com";
var AWS_CN_TEMPLATE = "s3.{region}.amazonaws.com.cn";
var AWS_ISO_TEMPLATE = "s3.{region}.c2s.ic.gov";
var AWS_ISO_B_TEMPLATE = "s3.{region}.sc2s.sgov.gov";
var AWS_US_GOV_TEMPLATE = "s3.{region}.amazonaws.com";
// Partition regions
var AWS_REGIONS = new Set([
    "ap-east-1",
    "ap-northeast-1",
    "ap-northeast-2",
    "ap-south-1",
    "ap-southeast-1",
    "ap-southeast-2",
    "ca-central-1",
    "eu-central-1",
    "eu-north-1",
    "eu-west-1",
    "eu-west-2",
    "eu-west-3",
    "me-south-1",
    "sa-east-1",
    "us-east-1",
    "us-east-2",
    "us-west-1",
    "us-west-2",
]);
var AWS_CN_REGIONS = new Set(["cn-north-1", "cn-northwest-1"]);
var AWS_ISO_REGIONS = new Set(["us-iso-east-1"]);
var AWS_ISO_B_REGIONS = new Set(["us-isob-east-1"]);
var AWS_US_GOV_REGIONS = new Set(["us-gov-east-1", "us-gov-west-1"]);
var defaultRegionInfoProvider = function (region, options) {
    var regionInfo = undefined;
    switch (region) {
        // First, try to match exact region names.
        case "ap-east-1":
            regionInfo = {
                hostname: "s3.ap-east-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "ap-northeast-1":
            regionInfo = {
                hostname: "s3.ap-northeast-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "ap-northeast-2":
            regionInfo = {
                hostname: "s3.ap-northeast-2.amazonaws.com",
                partition: "aws",
            };
            break;
        case "ap-south-1":
            regionInfo = {
                hostname: "s3.ap-south-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "ap-southeast-1":
            regionInfo = {
                hostname: "s3.ap-southeast-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "ap-southeast-2":
            regionInfo = {
                hostname: "s3.ap-southeast-2.amazonaws.com",
                partition: "aws",
            };
            break;
        case "ca-central-1":
            regionInfo = {
                hostname: "s3.ca-central-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "cn-north-1":
            regionInfo = {
                hostname: "s3.cn-north-1.amazonaws.com.cn",
                partition: "aws-cn",
            };
            break;
        case "cn-northwest-1":
            regionInfo = {
                hostname: "s3.cn-northwest-1.amazonaws.com.cn",
                partition: "aws-cn",
            };
            break;
        case "eu-central-1":
            regionInfo = {
                hostname: "s3.eu-central-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "eu-north-1":
            regionInfo = {
                hostname: "s3.eu-north-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "eu-west-1":
            regionInfo = {
                hostname: "s3.eu-west-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "eu-west-2":
            regionInfo = {
                hostname: "s3.eu-west-2.amazonaws.com",
                partition: "aws",
            };
            break;
        case "eu-west-3":
            regionInfo = {
                hostname: "s3.eu-west-3.amazonaws.com",
                partition: "aws",
            };
            break;
        case "fips-us-gov-west-1":
            regionInfo = {
                hostname: "s3-fips-us-gov-west-1.amazonaws.com",
                partition: "aws-us-gov",
                signingRegion: "us-gov-west-1",
            };
            break;
        case "me-south-1":
            regionInfo = {
                hostname: "s3.me-south-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "s3-external-1":
            regionInfo = {
                hostname: "s3-external-1.amazonaws.com",
                partition: "aws",
                signingRegion: "us-east-1",
            };
            break;
        case "sa-east-1":
            regionInfo = {
                hostname: "s3.sa-east-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "us-east-1":
            regionInfo = {
                hostname: "s3.amazonaws.com",
                partition: "aws",
            };
            break;
        case "us-east-2":
            regionInfo = {
                hostname: "s3.us-east-2.amazonaws.com",
                partition: "aws",
            };
            break;
        case "us-gov-east-1":
            regionInfo = {
                hostname: "s3.us-gov-east-1.amazonaws.com",
                partition: "aws-us-gov",
            };
            break;
        case "us-gov-west-1":
            regionInfo = {
                hostname: "s3.us-gov-west-1.amazonaws.com",
                partition: "aws-us-gov",
            };
            break;
        case "us-iso-east-1":
            regionInfo = {
                hostname: "s3.us-iso-east-1.c2s.ic.gov",
                partition: "aws-iso",
            };
            break;
        case "us-isob-east-1":
            regionInfo = {
                hostname: "s3.us-isob-east-1.sc2s.sgov.gov",
                partition: "aws-iso-b",
            };
            break;
        case "us-west-1":
            regionInfo = {
                hostname: "s3.us-west-1.amazonaws.com",
                partition: "aws",
            };
            break;
        case "us-west-2":
            regionInfo = {
                hostname: "s3.us-west-2.amazonaws.com",
                partition: "aws",
            };
            break;
        // Next, try to match partition endpoints.
        default:
            if (AWS_REGIONS.has(region)) {
                regionInfo = {
                    hostname: AWS_TEMPLATE.replace("{region}", region),
                    partition: "aws",
                };
            }
            if (AWS_CN_REGIONS.has(region)) {
                regionInfo = {
                    hostname: AWS_CN_TEMPLATE.replace("{region}", region),
                    partition: "aws-cn",
                };
            }
            if (AWS_ISO_REGIONS.has(region)) {
                regionInfo = {
                    hostname: AWS_ISO_TEMPLATE.replace("{region}", region),
                    partition: "aws-iso",
                };
            }
            if (AWS_ISO_B_REGIONS.has(region)) {
                regionInfo = {
                    hostname: AWS_ISO_B_TEMPLATE.replace("{region}", region),
                    partition: "aws-iso-b",
                };
            }
            if (AWS_US_GOV_REGIONS.has(region)) {
                regionInfo = {
                    hostname: AWS_US_GOV_TEMPLATE.replace("{region}", region),
                    partition: "aws-us-gov",
                };
            }
            // Finally, assume it's an AWS partition endpoint.
            if (regionInfo === undefined) {
                regionInfo = {
                    hostname: AWS_TEMPLATE.replace("{region}", region),
                    partition: "aws",
                };
            }
    }
    return Promise.resolve(regionInfo);
};


/***/ }),

/***/ 37325:
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/models/models_0.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbortIncompleteMultipartUpload": () => (/* binding */ AbortIncompleteMultipartUpload),
/* harmony export */   "AbortMultipartUploadOutput": () => (/* binding */ AbortMultipartUploadOutput),
/* harmony export */   "AbortMultipartUploadRequest": () => (/* binding */ AbortMultipartUploadRequest),
/* harmony export */   "NoSuchUpload": () => (/* binding */ NoSuchUpload),
/* harmony export */   "AccelerateConfiguration": () => (/* binding */ AccelerateConfiguration),
/* harmony export */   "Grantee": () => (/* binding */ Grantee),
/* harmony export */   "Grant": () => (/* binding */ Grant),
/* harmony export */   "Owner": () => (/* binding */ Owner),
/* harmony export */   "AccessControlPolicy": () => (/* binding */ AccessControlPolicy),
/* harmony export */   "AccessControlTranslation": () => (/* binding */ AccessControlTranslation),
/* harmony export */   "CompleteMultipartUploadOutput": () => (/* binding */ CompleteMultipartUploadOutput),
/* harmony export */   "CompletedPart": () => (/* binding */ CompletedPart),
/* harmony export */   "CompletedMultipartUpload": () => (/* binding */ CompletedMultipartUpload),
/* harmony export */   "CompleteMultipartUploadRequest": () => (/* binding */ CompleteMultipartUploadRequest),
/* harmony export */   "CopyObjectResult": () => (/* binding */ CopyObjectResult),
/* harmony export */   "CopyObjectOutput": () => (/* binding */ CopyObjectOutput),
/* harmony export */   "CopyObjectRequest": () => (/* binding */ CopyObjectRequest),
/* harmony export */   "ObjectNotInActiveTierError": () => (/* binding */ ObjectNotInActiveTierError),
/* harmony export */   "BucketAlreadyExists": () => (/* binding */ BucketAlreadyExists),
/* harmony export */   "BucketAlreadyOwnedByYou": () => (/* binding */ BucketAlreadyOwnedByYou),
/* harmony export */   "CreateBucketOutput": () => (/* binding */ CreateBucketOutput),
/* harmony export */   "CreateBucketConfiguration": () => (/* binding */ CreateBucketConfiguration),
/* harmony export */   "CreateBucketRequest": () => (/* binding */ CreateBucketRequest),
/* harmony export */   "CreateMultipartUploadOutput": () => (/* binding */ CreateMultipartUploadOutput),
/* harmony export */   "CreateMultipartUploadRequest": () => (/* binding */ CreateMultipartUploadRequest),
/* harmony export */   "DeleteBucketRequest": () => (/* binding */ DeleteBucketRequest),
/* harmony export */   "DeleteBucketAnalyticsConfigurationRequest": () => (/* binding */ DeleteBucketAnalyticsConfigurationRequest),
/* harmony export */   "DeleteBucketCorsRequest": () => (/* binding */ DeleteBucketCorsRequest),
/* harmony export */   "DeleteBucketEncryptionRequest": () => (/* binding */ DeleteBucketEncryptionRequest),
/* harmony export */   "DeleteBucketInventoryConfigurationRequest": () => (/* binding */ DeleteBucketInventoryConfigurationRequest),
/* harmony export */   "DeleteBucketLifecycleRequest": () => (/* binding */ DeleteBucketLifecycleRequest),
/* harmony export */   "DeleteBucketMetricsConfigurationRequest": () => (/* binding */ DeleteBucketMetricsConfigurationRequest),
/* harmony export */   "DeleteBucketOwnershipControlsRequest": () => (/* binding */ DeleteBucketOwnershipControlsRequest),
/* harmony export */   "DeleteBucketPolicyRequest": () => (/* binding */ DeleteBucketPolicyRequest),
/* harmony export */   "DeleteBucketReplicationRequest": () => (/* binding */ DeleteBucketReplicationRequest),
/* harmony export */   "DeleteBucketTaggingRequest": () => (/* binding */ DeleteBucketTaggingRequest),
/* harmony export */   "DeleteBucketWebsiteRequest": () => (/* binding */ DeleteBucketWebsiteRequest),
/* harmony export */   "DeleteObjectOutput": () => (/* binding */ DeleteObjectOutput),
/* harmony export */   "DeleteObjectRequest": () => (/* binding */ DeleteObjectRequest),
/* harmony export */   "DeletedObject": () => (/* binding */ DeletedObject),
/* harmony export */   "_Error": () => (/* binding */ _Error),
/* harmony export */   "DeleteObjectsOutput": () => (/* binding */ DeleteObjectsOutput),
/* harmony export */   "ObjectIdentifier": () => (/* binding */ ObjectIdentifier),
/* harmony export */   "Delete": () => (/* binding */ Delete),
/* harmony export */   "DeleteObjectsRequest": () => (/* binding */ DeleteObjectsRequest),
/* harmony export */   "DeleteObjectTaggingOutput": () => (/* binding */ DeleteObjectTaggingOutput),
/* harmony export */   "DeleteObjectTaggingRequest": () => (/* binding */ DeleteObjectTaggingRequest),
/* harmony export */   "DeletePublicAccessBlockRequest": () => (/* binding */ DeletePublicAccessBlockRequest),
/* harmony export */   "GetBucketAccelerateConfigurationOutput": () => (/* binding */ GetBucketAccelerateConfigurationOutput),
/* harmony export */   "GetBucketAccelerateConfigurationRequest": () => (/* binding */ GetBucketAccelerateConfigurationRequest),
/* harmony export */   "GetBucketAclOutput": () => (/* binding */ GetBucketAclOutput),
/* harmony export */   "GetBucketAclRequest": () => (/* binding */ GetBucketAclRequest),
/* harmony export */   "Tag": () => (/* binding */ Tag),
/* harmony export */   "AnalyticsAndOperator": () => (/* binding */ AnalyticsAndOperator),
/* harmony export */   "AnalyticsFilter": () => (/* binding */ AnalyticsFilter),
/* harmony export */   "AnalyticsS3BucketDestination": () => (/* binding */ AnalyticsS3BucketDestination),
/* harmony export */   "AnalyticsExportDestination": () => (/* binding */ AnalyticsExportDestination),
/* harmony export */   "StorageClassAnalysisDataExport": () => (/* binding */ StorageClassAnalysisDataExport),
/* harmony export */   "StorageClassAnalysis": () => (/* binding */ StorageClassAnalysis),
/* harmony export */   "AnalyticsConfiguration": () => (/* binding */ AnalyticsConfiguration),
/* harmony export */   "GetBucketAnalyticsConfigurationOutput": () => (/* binding */ GetBucketAnalyticsConfigurationOutput),
/* harmony export */   "GetBucketAnalyticsConfigurationRequest": () => (/* binding */ GetBucketAnalyticsConfigurationRequest),
/* harmony export */   "CORSRule": () => (/* binding */ CORSRule),
/* harmony export */   "GetBucketCorsOutput": () => (/* binding */ GetBucketCorsOutput),
/* harmony export */   "GetBucketCorsRequest": () => (/* binding */ GetBucketCorsRequest),
/* harmony export */   "ServerSideEncryptionByDefault": () => (/* binding */ ServerSideEncryptionByDefault),
/* harmony export */   "ServerSideEncryptionRule": () => (/* binding */ ServerSideEncryptionRule),
/* harmony export */   "ServerSideEncryptionConfiguration": () => (/* binding */ ServerSideEncryptionConfiguration),
/* harmony export */   "GetBucketEncryptionOutput": () => (/* binding */ GetBucketEncryptionOutput),
/* harmony export */   "GetBucketEncryptionRequest": () => (/* binding */ GetBucketEncryptionRequest),
/* harmony export */   "SSEKMS": () => (/* binding */ SSEKMS),
/* harmony export */   "SSES3": () => (/* binding */ SSES3),
/* harmony export */   "InventoryEncryption": () => (/* binding */ InventoryEncryption),
/* harmony export */   "InventoryS3BucketDestination": () => (/* binding */ InventoryS3BucketDestination),
/* harmony export */   "InventoryDestination": () => (/* binding */ InventoryDestination),
/* harmony export */   "InventoryFilter": () => (/* binding */ InventoryFilter),
/* harmony export */   "InventorySchedule": () => (/* binding */ InventorySchedule),
/* harmony export */   "InventoryConfiguration": () => (/* binding */ InventoryConfiguration),
/* harmony export */   "GetBucketInventoryConfigurationOutput": () => (/* binding */ GetBucketInventoryConfigurationOutput),
/* harmony export */   "GetBucketInventoryConfigurationRequest": () => (/* binding */ GetBucketInventoryConfigurationRequest),
/* harmony export */   "LifecycleExpiration": () => (/* binding */ LifecycleExpiration),
/* harmony export */   "LifecycleRuleAndOperator": () => (/* binding */ LifecycleRuleAndOperator),
/* harmony export */   "LifecycleRuleFilter": () => (/* binding */ LifecycleRuleFilter),
/* harmony export */   "NoncurrentVersionExpiration": () => (/* binding */ NoncurrentVersionExpiration),
/* harmony export */   "NoncurrentVersionTransition": () => (/* binding */ NoncurrentVersionTransition),
/* harmony export */   "Transition": () => (/* binding */ Transition),
/* harmony export */   "LifecycleRule": () => (/* binding */ LifecycleRule),
/* harmony export */   "GetBucketLifecycleConfigurationOutput": () => (/* binding */ GetBucketLifecycleConfigurationOutput),
/* harmony export */   "GetBucketLifecycleConfigurationRequest": () => (/* binding */ GetBucketLifecycleConfigurationRequest),
/* harmony export */   "GetBucketLocationOutput": () => (/* binding */ GetBucketLocationOutput),
/* harmony export */   "GetBucketLocationRequest": () => (/* binding */ GetBucketLocationRequest),
/* harmony export */   "TargetGrant": () => (/* binding */ TargetGrant),
/* harmony export */   "LoggingEnabled": () => (/* binding */ LoggingEnabled),
/* harmony export */   "GetBucketLoggingOutput": () => (/* binding */ GetBucketLoggingOutput),
/* harmony export */   "GetBucketLoggingRequest": () => (/* binding */ GetBucketLoggingRequest),
/* harmony export */   "MetricsAndOperator": () => (/* binding */ MetricsAndOperator),
/* harmony export */   "MetricsFilter": () => (/* binding */ MetricsFilter),
/* harmony export */   "MetricsConfiguration": () => (/* binding */ MetricsConfiguration),
/* harmony export */   "GetBucketMetricsConfigurationOutput": () => (/* binding */ GetBucketMetricsConfigurationOutput),
/* harmony export */   "GetBucketMetricsConfigurationRequest": () => (/* binding */ GetBucketMetricsConfigurationRequest),
/* harmony export */   "GetBucketNotificationConfigurationRequest": () => (/* binding */ GetBucketNotificationConfigurationRequest),
/* harmony export */   "FilterRule": () => (/* binding */ FilterRule),
/* harmony export */   "S3KeyFilter": () => (/* binding */ S3KeyFilter),
/* harmony export */   "NotificationConfigurationFilter": () => (/* binding */ NotificationConfigurationFilter),
/* harmony export */   "LambdaFunctionConfiguration": () => (/* binding */ LambdaFunctionConfiguration),
/* harmony export */   "QueueConfiguration": () => (/* binding */ QueueConfiguration),
/* harmony export */   "TopicConfiguration": () => (/* binding */ TopicConfiguration),
/* harmony export */   "NotificationConfiguration": () => (/* binding */ NotificationConfiguration),
/* harmony export */   "OwnershipControlsRule": () => (/* binding */ OwnershipControlsRule),
/* harmony export */   "OwnershipControls": () => (/* binding */ OwnershipControls),
/* harmony export */   "GetBucketOwnershipControlsOutput": () => (/* binding */ GetBucketOwnershipControlsOutput),
/* harmony export */   "GetBucketOwnershipControlsRequest": () => (/* binding */ GetBucketOwnershipControlsRequest),
/* harmony export */   "GetBucketPolicyOutput": () => (/* binding */ GetBucketPolicyOutput),
/* harmony export */   "GetBucketPolicyRequest": () => (/* binding */ GetBucketPolicyRequest),
/* harmony export */   "PolicyStatus": () => (/* binding */ PolicyStatus),
/* harmony export */   "GetBucketPolicyStatusOutput": () => (/* binding */ GetBucketPolicyStatusOutput),
/* harmony export */   "GetBucketPolicyStatusRequest": () => (/* binding */ GetBucketPolicyStatusRequest),
/* harmony export */   "DeleteMarkerReplication": () => (/* binding */ DeleteMarkerReplication),
/* harmony export */   "EncryptionConfiguration": () => (/* binding */ EncryptionConfiguration),
/* harmony export */   "ReplicationTimeValue": () => (/* binding */ ReplicationTimeValue),
/* harmony export */   "Metrics": () => (/* binding */ Metrics),
/* harmony export */   "ReplicationTime": () => (/* binding */ ReplicationTime),
/* harmony export */   "Destination": () => (/* binding */ Destination),
/* harmony export */   "ExistingObjectReplication": () => (/* binding */ ExistingObjectReplication),
/* harmony export */   "ReplicationRuleAndOperator": () => (/* binding */ ReplicationRuleAndOperator),
/* harmony export */   "ReplicationRuleFilter": () => (/* binding */ ReplicationRuleFilter),
/* harmony export */   "SseKmsEncryptedObjects": () => (/* binding */ SseKmsEncryptedObjects),
/* harmony export */   "SourceSelectionCriteria": () => (/* binding */ SourceSelectionCriteria),
/* harmony export */   "ReplicationRule": () => (/* binding */ ReplicationRule),
/* harmony export */   "ReplicationConfiguration": () => (/* binding */ ReplicationConfiguration),
/* harmony export */   "GetBucketReplicationOutput": () => (/* binding */ GetBucketReplicationOutput),
/* harmony export */   "GetBucketReplicationRequest": () => (/* binding */ GetBucketReplicationRequest),
/* harmony export */   "GetBucketRequestPaymentOutput": () => (/* binding */ GetBucketRequestPaymentOutput),
/* harmony export */   "GetBucketRequestPaymentRequest": () => (/* binding */ GetBucketRequestPaymentRequest),
/* harmony export */   "GetBucketTaggingOutput": () => (/* binding */ GetBucketTaggingOutput),
/* harmony export */   "GetBucketTaggingRequest": () => (/* binding */ GetBucketTaggingRequest),
/* harmony export */   "GetBucketVersioningOutput": () => (/* binding */ GetBucketVersioningOutput),
/* harmony export */   "GetBucketVersioningRequest": () => (/* binding */ GetBucketVersioningRequest),
/* harmony export */   "ErrorDocument": () => (/* binding */ ErrorDocument),
/* harmony export */   "IndexDocument": () => (/* binding */ IndexDocument),
/* harmony export */   "RedirectAllRequestsTo": () => (/* binding */ RedirectAllRequestsTo),
/* harmony export */   "Condition": () => (/* binding */ Condition),
/* harmony export */   "Redirect": () => (/* binding */ Redirect),
/* harmony export */   "RoutingRule": () => (/* binding */ RoutingRule),
/* harmony export */   "GetBucketWebsiteOutput": () => (/* binding */ GetBucketWebsiteOutput),
/* harmony export */   "GetBucketWebsiteRequest": () => (/* binding */ GetBucketWebsiteRequest),
/* harmony export */   "GetObjectOutput": () => (/* binding */ GetObjectOutput),
/* harmony export */   "GetObjectRequest": () => (/* binding */ GetObjectRequest),
/* harmony export */   "NoSuchKey": () => (/* binding */ NoSuchKey),
/* harmony export */   "GetObjectAclOutput": () => (/* binding */ GetObjectAclOutput),
/* harmony export */   "GetObjectAclRequest": () => (/* binding */ GetObjectAclRequest),
/* harmony export */   "ObjectLockLegalHold": () => (/* binding */ ObjectLockLegalHold),
/* harmony export */   "GetObjectLegalHoldOutput": () => (/* binding */ GetObjectLegalHoldOutput),
/* harmony export */   "GetObjectLegalHoldRequest": () => (/* binding */ GetObjectLegalHoldRequest),
/* harmony export */   "DefaultRetention": () => (/* binding */ DefaultRetention),
/* harmony export */   "ObjectLockRule": () => (/* binding */ ObjectLockRule),
/* harmony export */   "ObjectLockConfiguration": () => (/* binding */ ObjectLockConfiguration),
/* harmony export */   "GetObjectLockConfigurationOutput": () => (/* binding */ GetObjectLockConfigurationOutput),
/* harmony export */   "GetObjectLockConfigurationRequest": () => (/* binding */ GetObjectLockConfigurationRequest),
/* harmony export */   "ObjectLockRetention": () => (/* binding */ ObjectLockRetention),
/* harmony export */   "GetObjectRetentionOutput": () => (/* binding */ GetObjectRetentionOutput),
/* harmony export */   "GetObjectRetentionRequest": () => (/* binding */ GetObjectRetentionRequest),
/* harmony export */   "GetObjectTaggingOutput": () => (/* binding */ GetObjectTaggingOutput),
/* harmony export */   "GetObjectTaggingRequest": () => (/* binding */ GetObjectTaggingRequest),
/* harmony export */   "GetObjectTorrentOutput": () => (/* binding */ GetObjectTorrentOutput),
/* harmony export */   "GetObjectTorrentRequest": () => (/* binding */ GetObjectTorrentRequest),
/* harmony export */   "PublicAccessBlockConfiguration": () => (/* binding */ PublicAccessBlockConfiguration),
/* harmony export */   "GetPublicAccessBlockOutput": () => (/* binding */ GetPublicAccessBlockOutput),
/* harmony export */   "GetPublicAccessBlockRequest": () => (/* binding */ GetPublicAccessBlockRequest),
/* harmony export */   "HeadBucketRequest": () => (/* binding */ HeadBucketRequest),
/* harmony export */   "NoSuchBucket": () => (/* binding */ NoSuchBucket),
/* harmony export */   "HeadObjectOutput": () => (/* binding */ HeadObjectOutput),
/* harmony export */   "HeadObjectRequest": () => (/* binding */ HeadObjectRequest),
/* harmony export */   "ListBucketAnalyticsConfigurationsOutput": () => (/* binding */ ListBucketAnalyticsConfigurationsOutput),
/* harmony export */   "ListBucketAnalyticsConfigurationsRequest": () => (/* binding */ ListBucketAnalyticsConfigurationsRequest),
/* harmony export */   "ListBucketInventoryConfigurationsOutput": () => (/* binding */ ListBucketInventoryConfigurationsOutput),
/* harmony export */   "ListBucketInventoryConfigurationsRequest": () => (/* binding */ ListBucketInventoryConfigurationsRequest),
/* harmony export */   "ListBucketMetricsConfigurationsOutput": () => (/* binding */ ListBucketMetricsConfigurationsOutput),
/* harmony export */   "ListBucketMetricsConfigurationsRequest": () => (/* binding */ ListBucketMetricsConfigurationsRequest),
/* harmony export */   "Bucket": () => (/* binding */ Bucket),
/* harmony export */   "ListBucketsOutput": () => (/* binding */ ListBucketsOutput),
/* harmony export */   "CommonPrefix": () => (/* binding */ CommonPrefix),
/* harmony export */   "Initiator": () => (/* binding */ Initiator),
/* harmony export */   "MultipartUpload": () => (/* binding */ MultipartUpload),
/* harmony export */   "ListMultipartUploadsOutput": () => (/* binding */ ListMultipartUploadsOutput),
/* harmony export */   "ListMultipartUploadsRequest": () => (/* binding */ ListMultipartUploadsRequest),
/* harmony export */   "_Object": () => (/* binding */ _Object),
/* harmony export */   "ListObjectsOutput": () => (/* binding */ ListObjectsOutput),
/* harmony export */   "ListObjectsRequest": () => (/* binding */ ListObjectsRequest),
/* harmony export */   "ListObjectsV2Output": () => (/* binding */ ListObjectsV2Output),
/* harmony export */   "ListObjectsV2Request": () => (/* binding */ ListObjectsV2Request),
/* harmony export */   "DeleteMarkerEntry": () => (/* binding */ DeleteMarkerEntry),
/* harmony export */   "ObjectVersion": () => (/* binding */ ObjectVersion),
/* harmony export */   "ListObjectVersionsOutput": () => (/* binding */ ListObjectVersionsOutput),
/* harmony export */   "ListObjectVersionsRequest": () => (/* binding */ ListObjectVersionsRequest),
/* harmony export */   "Part": () => (/* binding */ Part),
/* harmony export */   "ListPartsOutput": () => (/* binding */ ListPartsOutput),
/* harmony export */   "ListPartsRequest": () => (/* binding */ ListPartsRequest),
/* harmony export */   "PutBucketAccelerateConfigurationRequest": () => (/* binding */ PutBucketAccelerateConfigurationRequest),
/* harmony export */   "PutBucketAclRequest": () => (/* binding */ PutBucketAclRequest),
/* harmony export */   "PutBucketAnalyticsConfigurationRequest": () => (/* binding */ PutBucketAnalyticsConfigurationRequest),
/* harmony export */   "CORSConfiguration": () => (/* binding */ CORSConfiguration),
/* harmony export */   "PutBucketCorsRequest": () => (/* binding */ PutBucketCorsRequest),
/* harmony export */   "PutBucketEncryptionRequest": () => (/* binding */ PutBucketEncryptionRequest),
/* harmony export */   "PutBucketInventoryConfigurationRequest": () => (/* binding */ PutBucketInventoryConfigurationRequest),
/* harmony export */   "BucketLifecycleConfiguration": () => (/* binding */ BucketLifecycleConfiguration),
/* harmony export */   "PutBucketLifecycleConfigurationRequest": () => (/* binding */ PutBucketLifecycleConfigurationRequest),
/* harmony export */   "BucketLoggingStatus": () => (/* binding */ BucketLoggingStatus),
/* harmony export */   "PutBucketLoggingRequest": () => (/* binding */ PutBucketLoggingRequest),
/* harmony export */   "PutBucketMetricsConfigurationRequest": () => (/* binding */ PutBucketMetricsConfigurationRequest),
/* harmony export */   "PutBucketNotificationConfigurationRequest": () => (/* binding */ PutBucketNotificationConfigurationRequest),
/* harmony export */   "PutBucketOwnershipControlsRequest": () => (/* binding */ PutBucketOwnershipControlsRequest),
/* harmony export */   "PutBucketPolicyRequest": () => (/* binding */ PutBucketPolicyRequest),
/* harmony export */   "PutBucketReplicationRequest": () => (/* binding */ PutBucketReplicationRequest),
/* harmony export */   "RequestPaymentConfiguration": () => (/* binding */ RequestPaymentConfiguration),
/* harmony export */   "PutBucketRequestPaymentRequest": () => (/* binding */ PutBucketRequestPaymentRequest),
/* harmony export */   "Tagging": () => (/* binding */ Tagging),
/* harmony export */   "PutBucketTaggingRequest": () => (/* binding */ PutBucketTaggingRequest),
/* harmony export */   "VersioningConfiguration": () => (/* binding */ VersioningConfiguration),
/* harmony export */   "PutBucketVersioningRequest": () => (/* binding */ PutBucketVersioningRequest),
/* harmony export */   "WebsiteConfiguration": () => (/* binding */ WebsiteConfiguration),
/* harmony export */   "PutBucketWebsiteRequest": () => (/* binding */ PutBucketWebsiteRequest),
/* harmony export */   "PutObjectOutput": () => (/* binding */ PutObjectOutput),
/* harmony export */   "PutObjectRequest": () => (/* binding */ PutObjectRequest),
/* harmony export */   "PutObjectAclOutput": () => (/* binding */ PutObjectAclOutput),
/* harmony export */   "PutObjectAclRequest": () => (/* binding */ PutObjectAclRequest),
/* harmony export */   "PutObjectLegalHoldOutput": () => (/* binding */ PutObjectLegalHoldOutput),
/* harmony export */   "PutObjectLegalHoldRequest": () => (/* binding */ PutObjectLegalHoldRequest),
/* harmony export */   "PutObjectLockConfigurationOutput": () => (/* binding */ PutObjectLockConfigurationOutput),
/* harmony export */   "PutObjectLockConfigurationRequest": () => (/* binding */ PutObjectLockConfigurationRequest),
/* harmony export */   "PutObjectRetentionOutput": () => (/* binding */ PutObjectRetentionOutput),
/* harmony export */   "PutObjectRetentionRequest": () => (/* binding */ PutObjectRetentionRequest),
/* harmony export */   "PutObjectTaggingOutput": () => (/* binding */ PutObjectTaggingOutput),
/* harmony export */   "PutObjectTaggingRequest": () => (/* binding */ PutObjectTaggingRequest),
/* harmony export */   "PutPublicAccessBlockRequest": () => (/* binding */ PutPublicAccessBlockRequest),
/* harmony export */   "ObjectAlreadyInActiveTierError": () => (/* binding */ ObjectAlreadyInActiveTierError),
/* harmony export */   "RestoreObjectOutput": () => (/* binding */ RestoreObjectOutput),
/* harmony export */   "GlacierJobParameters": () => (/* binding */ GlacierJobParameters),
/* harmony export */   "Encryption": () => (/* binding */ Encryption),
/* harmony export */   "MetadataEntry": () => (/* binding */ MetadataEntry),
/* harmony export */   "S3Location": () => (/* binding */ S3Location),
/* harmony export */   "OutputLocation": () => (/* binding */ OutputLocation),
/* harmony export */   "FileHeaderInfo": () => (/* binding */ FileHeaderInfo),
/* harmony export */   "CSVInput": () => (/* binding */ CSVInput),
/* harmony export */   "JSONType": () => (/* binding */ JSONType),
/* harmony export */   "JSONInput": () => (/* binding */ JSONInput),
/* harmony export */   "ParquetInput": () => (/* binding */ ParquetInput),
/* harmony export */   "InputSerialization": () => (/* binding */ InputSerialization),
/* harmony export */   "QuoteFields": () => (/* binding */ QuoteFields),
/* harmony export */   "CSVOutput": () => (/* binding */ CSVOutput),
/* harmony export */   "JSONOutput": () => (/* binding */ JSONOutput),
/* harmony export */   "OutputSerialization": () => (/* binding */ OutputSerialization),
/* harmony export */   "SelectParameters": () => (/* binding */ SelectParameters)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);


var AbortIncompleteMultipartUpload;
(function (AbortIncompleteMultipartUpload) {
    AbortIncompleteMultipartUpload.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AbortIncompleteMultipartUpload || (AbortIncompleteMultipartUpload = {}));
var AbortMultipartUploadOutput;
(function (AbortMultipartUploadOutput) {
    AbortMultipartUploadOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AbortMultipartUploadOutput || (AbortMultipartUploadOutput = {}));
var AbortMultipartUploadRequest;
(function (AbortMultipartUploadRequest) {
    AbortMultipartUploadRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AbortMultipartUploadRequest || (AbortMultipartUploadRequest = {}));
var NoSuchUpload;
(function (NoSuchUpload) {
    NoSuchUpload.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(NoSuchUpload || (NoSuchUpload = {}));
var AccelerateConfiguration;
(function (AccelerateConfiguration) {
    AccelerateConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AccelerateConfiguration || (AccelerateConfiguration = {}));
var Grantee;
(function (Grantee) {
    Grantee.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Grantee || (Grantee = {}));
var Grant;
(function (Grant) {
    Grant.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Grant || (Grant = {}));
var Owner;
(function (Owner) {
    Owner.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Owner || (Owner = {}));
var AccessControlPolicy;
(function (AccessControlPolicy) {
    AccessControlPolicy.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AccessControlPolicy || (AccessControlPolicy = {}));
var AccessControlTranslation;
(function (AccessControlTranslation) {
    AccessControlTranslation.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AccessControlTranslation || (AccessControlTranslation = {}));
var CompleteMultipartUploadOutput;
(function (CompleteMultipartUploadOutput) {
    CompleteMultipartUploadOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(CompleteMultipartUploadOutput || (CompleteMultipartUploadOutput = {}));
var CompletedPart;
(function (CompletedPart) {
    CompletedPart.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CompletedPart || (CompletedPart = {}));
var CompletedMultipartUpload;
(function (CompletedMultipartUpload) {
    CompletedMultipartUpload.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CompletedMultipartUpload || (CompletedMultipartUpload = {}));
var CompleteMultipartUploadRequest;
(function (CompleteMultipartUploadRequest) {
    CompleteMultipartUploadRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CompleteMultipartUploadRequest || (CompleteMultipartUploadRequest = {}));
var CopyObjectResult;
(function (CopyObjectResult) {
    CopyObjectResult.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CopyObjectResult || (CopyObjectResult = {}));
var CopyObjectOutput;
(function (CopyObjectOutput) {
    CopyObjectOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(CopyObjectOutput || (CopyObjectOutput = {}));
var CopyObjectRequest;
(function (CopyObjectRequest) {
    CopyObjectRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.SSECustomerKey && { SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.CopySourceSSECustomerKey && { CopySourceSSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(CopyObjectRequest || (CopyObjectRequest = {}));
var ObjectNotInActiveTierError;
(function (ObjectNotInActiveTierError) {
    ObjectNotInActiveTierError.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ObjectNotInActiveTierError || (ObjectNotInActiveTierError = {}));
var BucketAlreadyExists;
(function (BucketAlreadyExists) {
    BucketAlreadyExists.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(BucketAlreadyExists || (BucketAlreadyExists = {}));
var BucketAlreadyOwnedByYou;
(function (BucketAlreadyOwnedByYou) {
    BucketAlreadyOwnedByYou.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(BucketAlreadyOwnedByYou || (BucketAlreadyOwnedByYou = {}));
var CreateBucketOutput;
(function (CreateBucketOutput) {
    CreateBucketOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CreateBucketOutput || (CreateBucketOutput = {}));
var CreateBucketConfiguration;
(function (CreateBucketConfiguration) {
    CreateBucketConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CreateBucketConfiguration || (CreateBucketConfiguration = {}));
var CreateBucketRequest;
(function (CreateBucketRequest) {
    CreateBucketRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CreateBucketRequest || (CreateBucketRequest = {}));
var CreateMultipartUploadOutput;
(function (CreateMultipartUploadOutput) {
    CreateMultipartUploadOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(CreateMultipartUploadOutput || (CreateMultipartUploadOutput = {}));
var CreateMultipartUploadRequest;
(function (CreateMultipartUploadRequest) {
    CreateMultipartUploadRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.SSECustomerKey && { SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(CreateMultipartUploadRequest || (CreateMultipartUploadRequest = {}));
var DeleteBucketRequest;
(function (DeleteBucketRequest) {
    DeleteBucketRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketRequest || (DeleteBucketRequest = {}));
var DeleteBucketAnalyticsConfigurationRequest;
(function (DeleteBucketAnalyticsConfigurationRequest) {
    DeleteBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketAnalyticsConfigurationRequest || (DeleteBucketAnalyticsConfigurationRequest = {}));
var DeleteBucketCorsRequest;
(function (DeleteBucketCorsRequest) {
    DeleteBucketCorsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketCorsRequest || (DeleteBucketCorsRequest = {}));
var DeleteBucketEncryptionRequest;
(function (DeleteBucketEncryptionRequest) {
    DeleteBucketEncryptionRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketEncryptionRequest || (DeleteBucketEncryptionRequest = {}));
var DeleteBucketInventoryConfigurationRequest;
(function (DeleteBucketInventoryConfigurationRequest) {
    DeleteBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketInventoryConfigurationRequest || (DeleteBucketInventoryConfigurationRequest = {}));
var DeleteBucketLifecycleRequest;
(function (DeleteBucketLifecycleRequest) {
    DeleteBucketLifecycleRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketLifecycleRequest || (DeleteBucketLifecycleRequest = {}));
var DeleteBucketMetricsConfigurationRequest;
(function (DeleteBucketMetricsConfigurationRequest) {
    DeleteBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketMetricsConfigurationRequest || (DeleteBucketMetricsConfigurationRequest = {}));
var DeleteBucketOwnershipControlsRequest;
(function (DeleteBucketOwnershipControlsRequest) {
    DeleteBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketOwnershipControlsRequest || (DeleteBucketOwnershipControlsRequest = {}));
var DeleteBucketPolicyRequest;
(function (DeleteBucketPolicyRequest) {
    DeleteBucketPolicyRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketPolicyRequest || (DeleteBucketPolicyRequest = {}));
var DeleteBucketReplicationRequest;
(function (DeleteBucketReplicationRequest) {
    DeleteBucketReplicationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketReplicationRequest || (DeleteBucketReplicationRequest = {}));
var DeleteBucketTaggingRequest;
(function (DeleteBucketTaggingRequest) {
    DeleteBucketTaggingRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketTaggingRequest || (DeleteBucketTaggingRequest = {}));
var DeleteBucketWebsiteRequest;
(function (DeleteBucketWebsiteRequest) {
    DeleteBucketWebsiteRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteBucketWebsiteRequest || (DeleteBucketWebsiteRequest = {}));
var DeleteObjectOutput;
(function (DeleteObjectOutput) {
    DeleteObjectOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteObjectOutput || (DeleteObjectOutput = {}));
var DeleteObjectRequest;
(function (DeleteObjectRequest) {
    DeleteObjectRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteObjectRequest || (DeleteObjectRequest = {}));
var DeletedObject;
(function (DeletedObject) {
    DeletedObject.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeletedObject || (DeletedObject = {}));
var _Error;
(function (_Error) {
    _Error.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(_Error || (_Error = {}));
var DeleteObjectsOutput;
(function (DeleteObjectsOutput) {
    DeleteObjectsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteObjectsOutput || (DeleteObjectsOutput = {}));
var ObjectIdentifier;
(function (ObjectIdentifier) {
    ObjectIdentifier.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ObjectIdentifier || (ObjectIdentifier = {}));
var Delete;
(function (Delete) {
    Delete.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Delete || (Delete = {}));
var DeleteObjectsRequest;
(function (DeleteObjectsRequest) {
    DeleteObjectsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteObjectsRequest || (DeleteObjectsRequest = {}));
var DeleteObjectTaggingOutput;
(function (DeleteObjectTaggingOutput) {
    DeleteObjectTaggingOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteObjectTaggingOutput || (DeleteObjectTaggingOutput = {}));
var DeleteObjectTaggingRequest;
(function (DeleteObjectTaggingRequest) {
    DeleteObjectTaggingRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteObjectTaggingRequest || (DeleteObjectTaggingRequest = {}));
var DeletePublicAccessBlockRequest;
(function (DeletePublicAccessBlockRequest) {
    DeletePublicAccessBlockRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeletePublicAccessBlockRequest || (DeletePublicAccessBlockRequest = {}));
var GetBucketAccelerateConfigurationOutput;
(function (GetBucketAccelerateConfigurationOutput) {
    GetBucketAccelerateConfigurationOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketAccelerateConfigurationOutput || (GetBucketAccelerateConfigurationOutput = {}));
var GetBucketAccelerateConfigurationRequest;
(function (GetBucketAccelerateConfigurationRequest) {
    GetBucketAccelerateConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketAccelerateConfigurationRequest || (GetBucketAccelerateConfigurationRequest = {}));
var GetBucketAclOutput;
(function (GetBucketAclOutput) {
    GetBucketAclOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketAclOutput || (GetBucketAclOutput = {}));
var GetBucketAclRequest;
(function (GetBucketAclRequest) {
    GetBucketAclRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketAclRequest || (GetBucketAclRequest = {}));
var Tag;
(function (Tag) {
    Tag.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Tag || (Tag = {}));
var AnalyticsAndOperator;
(function (AnalyticsAndOperator) {
    AnalyticsAndOperator.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AnalyticsAndOperator || (AnalyticsAndOperator = {}));
var AnalyticsFilter;
(function (AnalyticsFilter) {
    AnalyticsFilter.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AnalyticsFilter || (AnalyticsFilter = {}));
var AnalyticsS3BucketDestination;
(function (AnalyticsS3BucketDestination) {
    AnalyticsS3BucketDestination.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AnalyticsS3BucketDestination || (AnalyticsS3BucketDestination = {}));
var AnalyticsExportDestination;
(function (AnalyticsExportDestination) {
    AnalyticsExportDestination.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AnalyticsExportDestination || (AnalyticsExportDestination = {}));
var StorageClassAnalysisDataExport;
(function (StorageClassAnalysisDataExport) {
    StorageClassAnalysisDataExport.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(StorageClassAnalysisDataExport || (StorageClassAnalysisDataExport = {}));
var StorageClassAnalysis;
(function (StorageClassAnalysis) {
    StorageClassAnalysis.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(StorageClassAnalysis || (StorageClassAnalysis = {}));
var AnalyticsConfiguration;
(function (AnalyticsConfiguration) {
    AnalyticsConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(AnalyticsConfiguration || (AnalyticsConfiguration = {}));
var GetBucketAnalyticsConfigurationOutput;
(function (GetBucketAnalyticsConfigurationOutput) {
    GetBucketAnalyticsConfigurationOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketAnalyticsConfigurationOutput || (GetBucketAnalyticsConfigurationOutput = {}));
var GetBucketAnalyticsConfigurationRequest;
(function (GetBucketAnalyticsConfigurationRequest) {
    GetBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketAnalyticsConfigurationRequest || (GetBucketAnalyticsConfigurationRequest = {}));
var CORSRule;
(function (CORSRule) {
    CORSRule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CORSRule || (CORSRule = {}));
var GetBucketCorsOutput;
(function (GetBucketCorsOutput) {
    GetBucketCorsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketCorsOutput || (GetBucketCorsOutput = {}));
var GetBucketCorsRequest;
(function (GetBucketCorsRequest) {
    GetBucketCorsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketCorsRequest || (GetBucketCorsRequest = {}));
var ServerSideEncryptionByDefault;
(function (ServerSideEncryptionByDefault) {
    ServerSideEncryptionByDefault.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.KMSMasterKeyID && { KMSMasterKeyID: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(ServerSideEncryptionByDefault || (ServerSideEncryptionByDefault = {}));
var ServerSideEncryptionRule;
(function (ServerSideEncryptionRule) {
    ServerSideEncryptionRule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.ApplyServerSideEncryptionByDefault && {
        ApplyServerSideEncryptionByDefault: ServerSideEncryptionByDefault.filterSensitiveLog(obj.ApplyServerSideEncryptionByDefault),
    }))); };
})(ServerSideEncryptionRule || (ServerSideEncryptionRule = {}));
var ServerSideEncryptionConfiguration;
(function (ServerSideEncryptionConfiguration) {
    ServerSideEncryptionConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.Rules && { Rules: obj.Rules.map(function (item) { return ServerSideEncryptionRule.filterSensitiveLog(item); }) }))); };
})(ServerSideEncryptionConfiguration || (ServerSideEncryptionConfiguration = {}));
var GetBucketEncryptionOutput;
(function (GetBucketEncryptionOutput) {
    GetBucketEncryptionOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.ServerSideEncryptionConfiguration && {
        ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(obj.ServerSideEncryptionConfiguration),
    }))); };
})(GetBucketEncryptionOutput || (GetBucketEncryptionOutput = {}));
var GetBucketEncryptionRequest;
(function (GetBucketEncryptionRequest) {
    GetBucketEncryptionRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketEncryptionRequest || (GetBucketEncryptionRequest = {}));
var SSEKMS;
(function (SSEKMS) {
    SSEKMS.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.KeyId && { KeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(SSEKMS || (SSEKMS = {}));
var SSES3;
(function (SSES3) {
    SSES3.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(SSES3 || (SSES3 = {}));
var InventoryEncryption;
(function (InventoryEncryption) {
    InventoryEncryption.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMS && { SSEKMS: SSEKMS.filterSensitiveLog(obj.SSEKMS) }))); };
})(InventoryEncryption || (InventoryEncryption = {}));
var InventoryS3BucketDestination;
(function (InventoryS3BucketDestination) {
    InventoryS3BucketDestination.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.Encryption && { Encryption: InventoryEncryption.filterSensitiveLog(obj.Encryption) }))); };
})(InventoryS3BucketDestination || (InventoryS3BucketDestination = {}));
var InventoryDestination;
(function (InventoryDestination) {
    InventoryDestination.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.S3BucketDestination && {
        S3BucketDestination: InventoryS3BucketDestination.filterSensitiveLog(obj.S3BucketDestination),
    }))); };
})(InventoryDestination || (InventoryDestination = {}));
var InventoryFilter;
(function (InventoryFilter) {
    InventoryFilter.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(InventoryFilter || (InventoryFilter = {}));
var InventorySchedule;
(function (InventorySchedule) {
    InventorySchedule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(InventorySchedule || (InventorySchedule = {}));
var InventoryConfiguration;
(function (InventoryConfiguration) {
    InventoryConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.Destination && { Destination: InventoryDestination.filterSensitiveLog(obj.Destination) }))); };
})(InventoryConfiguration || (InventoryConfiguration = {}));
var GetBucketInventoryConfigurationOutput;
(function (GetBucketInventoryConfigurationOutput) {
    GetBucketInventoryConfigurationOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.InventoryConfiguration && {
        InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration),
    }))); };
})(GetBucketInventoryConfigurationOutput || (GetBucketInventoryConfigurationOutput = {}));
var GetBucketInventoryConfigurationRequest;
(function (GetBucketInventoryConfigurationRequest) {
    GetBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketInventoryConfigurationRequest || (GetBucketInventoryConfigurationRequest = {}));
var LifecycleExpiration;
(function (LifecycleExpiration) {
    LifecycleExpiration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(LifecycleExpiration || (LifecycleExpiration = {}));
var LifecycleRuleAndOperator;
(function (LifecycleRuleAndOperator) {
    LifecycleRuleAndOperator.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(LifecycleRuleAndOperator || (LifecycleRuleAndOperator = {}));
var LifecycleRuleFilter;
(function (LifecycleRuleFilter) {
    LifecycleRuleFilter.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(LifecycleRuleFilter || (LifecycleRuleFilter = {}));
var NoncurrentVersionExpiration;
(function (NoncurrentVersionExpiration) {
    NoncurrentVersionExpiration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(NoncurrentVersionExpiration || (NoncurrentVersionExpiration = {}));
var NoncurrentVersionTransition;
(function (NoncurrentVersionTransition) {
    NoncurrentVersionTransition.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(NoncurrentVersionTransition || (NoncurrentVersionTransition = {}));
var Transition;
(function (Transition) {
    Transition.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Transition || (Transition = {}));
var LifecycleRule;
(function (LifecycleRule) {
    LifecycleRule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(LifecycleRule || (LifecycleRule = {}));
var GetBucketLifecycleConfigurationOutput;
(function (GetBucketLifecycleConfigurationOutput) {
    GetBucketLifecycleConfigurationOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketLifecycleConfigurationOutput || (GetBucketLifecycleConfigurationOutput = {}));
var GetBucketLifecycleConfigurationRequest;
(function (GetBucketLifecycleConfigurationRequest) {
    GetBucketLifecycleConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketLifecycleConfigurationRequest || (GetBucketLifecycleConfigurationRequest = {}));
var GetBucketLocationOutput;
(function (GetBucketLocationOutput) {
    GetBucketLocationOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketLocationOutput || (GetBucketLocationOutput = {}));
var GetBucketLocationRequest;
(function (GetBucketLocationRequest) {
    GetBucketLocationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketLocationRequest || (GetBucketLocationRequest = {}));
var TargetGrant;
(function (TargetGrant) {
    TargetGrant.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(TargetGrant || (TargetGrant = {}));
var LoggingEnabled;
(function (LoggingEnabled) {
    LoggingEnabled.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(LoggingEnabled || (LoggingEnabled = {}));
var GetBucketLoggingOutput;
(function (GetBucketLoggingOutput) {
    GetBucketLoggingOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketLoggingOutput || (GetBucketLoggingOutput = {}));
var GetBucketLoggingRequest;
(function (GetBucketLoggingRequest) {
    GetBucketLoggingRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketLoggingRequest || (GetBucketLoggingRequest = {}));
var MetricsAndOperator;
(function (MetricsAndOperator) {
    MetricsAndOperator.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(MetricsAndOperator || (MetricsAndOperator = {}));
var MetricsFilter;
(function (MetricsFilter) {
    MetricsFilter.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(MetricsFilter || (MetricsFilter = {}));
var MetricsConfiguration;
(function (MetricsConfiguration) {
    MetricsConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(MetricsConfiguration || (MetricsConfiguration = {}));
var GetBucketMetricsConfigurationOutput;
(function (GetBucketMetricsConfigurationOutput) {
    GetBucketMetricsConfigurationOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketMetricsConfigurationOutput || (GetBucketMetricsConfigurationOutput = {}));
var GetBucketMetricsConfigurationRequest;
(function (GetBucketMetricsConfigurationRequest) {
    GetBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketMetricsConfigurationRequest || (GetBucketMetricsConfigurationRequest = {}));
var GetBucketNotificationConfigurationRequest;
(function (GetBucketNotificationConfigurationRequest) {
    GetBucketNotificationConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketNotificationConfigurationRequest || (GetBucketNotificationConfigurationRequest = {}));
var FilterRule;
(function (FilterRule) {
    FilterRule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(FilterRule || (FilterRule = {}));
var S3KeyFilter;
(function (S3KeyFilter) {
    S3KeyFilter.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(S3KeyFilter || (S3KeyFilter = {}));
var NotificationConfigurationFilter;
(function (NotificationConfigurationFilter) {
    NotificationConfigurationFilter.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(NotificationConfigurationFilter || (NotificationConfigurationFilter = {}));
var LambdaFunctionConfiguration;
(function (LambdaFunctionConfiguration) {
    LambdaFunctionConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(LambdaFunctionConfiguration || (LambdaFunctionConfiguration = {}));
var QueueConfiguration;
(function (QueueConfiguration) {
    QueueConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(QueueConfiguration || (QueueConfiguration = {}));
var TopicConfiguration;
(function (TopicConfiguration) {
    TopicConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(TopicConfiguration || (TopicConfiguration = {}));
var NotificationConfiguration;
(function (NotificationConfiguration) {
    NotificationConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(NotificationConfiguration || (NotificationConfiguration = {}));
var OwnershipControlsRule;
(function (OwnershipControlsRule) {
    OwnershipControlsRule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(OwnershipControlsRule || (OwnershipControlsRule = {}));
var OwnershipControls;
(function (OwnershipControls) {
    OwnershipControls.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(OwnershipControls || (OwnershipControls = {}));
var GetBucketOwnershipControlsOutput;
(function (GetBucketOwnershipControlsOutput) {
    GetBucketOwnershipControlsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketOwnershipControlsOutput || (GetBucketOwnershipControlsOutput = {}));
var GetBucketOwnershipControlsRequest;
(function (GetBucketOwnershipControlsRequest) {
    GetBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketOwnershipControlsRequest || (GetBucketOwnershipControlsRequest = {}));
var GetBucketPolicyOutput;
(function (GetBucketPolicyOutput) {
    GetBucketPolicyOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketPolicyOutput || (GetBucketPolicyOutput = {}));
var GetBucketPolicyRequest;
(function (GetBucketPolicyRequest) {
    GetBucketPolicyRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketPolicyRequest || (GetBucketPolicyRequest = {}));
var PolicyStatus;
(function (PolicyStatus) {
    PolicyStatus.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PolicyStatus || (PolicyStatus = {}));
var GetBucketPolicyStatusOutput;
(function (GetBucketPolicyStatusOutput) {
    GetBucketPolicyStatusOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketPolicyStatusOutput || (GetBucketPolicyStatusOutput = {}));
var GetBucketPolicyStatusRequest;
(function (GetBucketPolicyStatusRequest) {
    GetBucketPolicyStatusRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketPolicyStatusRequest || (GetBucketPolicyStatusRequest = {}));
var DeleteMarkerReplication;
(function (DeleteMarkerReplication) {
    DeleteMarkerReplication.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteMarkerReplication || (DeleteMarkerReplication = {}));
var EncryptionConfiguration;
(function (EncryptionConfiguration) {
    EncryptionConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(EncryptionConfiguration || (EncryptionConfiguration = {}));
var ReplicationTimeValue;
(function (ReplicationTimeValue) {
    ReplicationTimeValue.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ReplicationTimeValue || (ReplicationTimeValue = {}));
var Metrics;
(function (Metrics) {
    Metrics.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Metrics || (Metrics = {}));
var ReplicationTime;
(function (ReplicationTime) {
    ReplicationTime.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ReplicationTime || (ReplicationTime = {}));
var Destination;
(function (Destination) {
    Destination.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Destination || (Destination = {}));
var ExistingObjectReplication;
(function (ExistingObjectReplication) {
    ExistingObjectReplication.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ExistingObjectReplication || (ExistingObjectReplication = {}));
var ReplicationRuleAndOperator;
(function (ReplicationRuleAndOperator) {
    ReplicationRuleAndOperator.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ReplicationRuleAndOperator || (ReplicationRuleAndOperator = {}));
var ReplicationRuleFilter;
(function (ReplicationRuleFilter) {
    ReplicationRuleFilter.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ReplicationRuleFilter || (ReplicationRuleFilter = {}));
var SseKmsEncryptedObjects;
(function (SseKmsEncryptedObjects) {
    SseKmsEncryptedObjects.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(SseKmsEncryptedObjects || (SseKmsEncryptedObjects = {}));
var SourceSelectionCriteria;
(function (SourceSelectionCriteria) {
    SourceSelectionCriteria.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(SourceSelectionCriteria || (SourceSelectionCriteria = {}));
var ReplicationRule;
(function (ReplicationRule) {
    ReplicationRule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ReplicationRule || (ReplicationRule = {}));
var ReplicationConfiguration;
(function (ReplicationConfiguration) {
    ReplicationConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ReplicationConfiguration || (ReplicationConfiguration = {}));
var GetBucketReplicationOutput;
(function (GetBucketReplicationOutput) {
    GetBucketReplicationOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketReplicationOutput || (GetBucketReplicationOutput = {}));
var GetBucketReplicationRequest;
(function (GetBucketReplicationRequest) {
    GetBucketReplicationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketReplicationRequest || (GetBucketReplicationRequest = {}));
var GetBucketRequestPaymentOutput;
(function (GetBucketRequestPaymentOutput) {
    GetBucketRequestPaymentOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketRequestPaymentOutput || (GetBucketRequestPaymentOutput = {}));
var GetBucketRequestPaymentRequest;
(function (GetBucketRequestPaymentRequest) {
    GetBucketRequestPaymentRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketRequestPaymentRequest || (GetBucketRequestPaymentRequest = {}));
var GetBucketTaggingOutput;
(function (GetBucketTaggingOutput) {
    GetBucketTaggingOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketTaggingOutput || (GetBucketTaggingOutput = {}));
var GetBucketTaggingRequest;
(function (GetBucketTaggingRequest) {
    GetBucketTaggingRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketTaggingRequest || (GetBucketTaggingRequest = {}));
var GetBucketVersioningOutput;
(function (GetBucketVersioningOutput) {
    GetBucketVersioningOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketVersioningOutput || (GetBucketVersioningOutput = {}));
var GetBucketVersioningRequest;
(function (GetBucketVersioningRequest) {
    GetBucketVersioningRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketVersioningRequest || (GetBucketVersioningRequest = {}));
var ErrorDocument;
(function (ErrorDocument) {
    ErrorDocument.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ErrorDocument || (ErrorDocument = {}));
var IndexDocument;
(function (IndexDocument) {
    IndexDocument.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(IndexDocument || (IndexDocument = {}));
var RedirectAllRequestsTo;
(function (RedirectAllRequestsTo) {
    RedirectAllRequestsTo.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(RedirectAllRequestsTo || (RedirectAllRequestsTo = {}));
var Condition;
(function (Condition) {
    Condition.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Condition || (Condition = {}));
var Redirect;
(function (Redirect) {
    Redirect.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Redirect || (Redirect = {}));
var RoutingRule;
(function (RoutingRule) {
    RoutingRule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(RoutingRule || (RoutingRule = {}));
var GetBucketWebsiteOutput;
(function (GetBucketWebsiteOutput) {
    GetBucketWebsiteOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketWebsiteOutput || (GetBucketWebsiteOutput = {}));
var GetBucketWebsiteRequest;
(function (GetBucketWebsiteRequest) {
    GetBucketWebsiteRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetBucketWebsiteRequest || (GetBucketWebsiteRequest = {}));
var GetObjectOutput;
(function (GetObjectOutput) {
    GetObjectOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(GetObjectOutput || (GetObjectOutput = {}));
var GetObjectRequest;
(function (GetObjectRequest) {
    GetObjectRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSECustomerKey && { SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(GetObjectRequest || (GetObjectRequest = {}));
var NoSuchKey;
(function (NoSuchKey) {
    NoSuchKey.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(NoSuchKey || (NoSuchKey = {}));
var GetObjectAclOutput;
(function (GetObjectAclOutput) {
    GetObjectAclOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectAclOutput || (GetObjectAclOutput = {}));
var GetObjectAclRequest;
(function (GetObjectAclRequest) {
    GetObjectAclRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectAclRequest || (GetObjectAclRequest = {}));
var ObjectLockLegalHold;
(function (ObjectLockLegalHold) {
    ObjectLockLegalHold.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ObjectLockLegalHold || (ObjectLockLegalHold = {}));
var GetObjectLegalHoldOutput;
(function (GetObjectLegalHoldOutput) {
    GetObjectLegalHoldOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectLegalHoldOutput || (GetObjectLegalHoldOutput = {}));
var GetObjectLegalHoldRequest;
(function (GetObjectLegalHoldRequest) {
    GetObjectLegalHoldRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectLegalHoldRequest || (GetObjectLegalHoldRequest = {}));
var DefaultRetention;
(function (DefaultRetention) {
    DefaultRetention.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DefaultRetention || (DefaultRetention = {}));
var ObjectLockRule;
(function (ObjectLockRule) {
    ObjectLockRule.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ObjectLockRule || (ObjectLockRule = {}));
var ObjectLockConfiguration;
(function (ObjectLockConfiguration) {
    ObjectLockConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ObjectLockConfiguration || (ObjectLockConfiguration = {}));
var GetObjectLockConfigurationOutput;
(function (GetObjectLockConfigurationOutput) {
    GetObjectLockConfigurationOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectLockConfigurationOutput || (GetObjectLockConfigurationOutput = {}));
var GetObjectLockConfigurationRequest;
(function (GetObjectLockConfigurationRequest) {
    GetObjectLockConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectLockConfigurationRequest || (GetObjectLockConfigurationRequest = {}));
var ObjectLockRetention;
(function (ObjectLockRetention) {
    ObjectLockRetention.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ObjectLockRetention || (ObjectLockRetention = {}));
var GetObjectRetentionOutput;
(function (GetObjectRetentionOutput) {
    GetObjectRetentionOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectRetentionOutput || (GetObjectRetentionOutput = {}));
var GetObjectRetentionRequest;
(function (GetObjectRetentionRequest) {
    GetObjectRetentionRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectRetentionRequest || (GetObjectRetentionRequest = {}));
var GetObjectTaggingOutput;
(function (GetObjectTaggingOutput) {
    GetObjectTaggingOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectTaggingOutput || (GetObjectTaggingOutput = {}));
var GetObjectTaggingRequest;
(function (GetObjectTaggingRequest) {
    GetObjectTaggingRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectTaggingRequest || (GetObjectTaggingRequest = {}));
var GetObjectTorrentOutput;
(function (GetObjectTorrentOutput) {
    GetObjectTorrentOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectTorrentOutput || (GetObjectTorrentOutput = {}));
var GetObjectTorrentRequest;
(function (GetObjectTorrentRequest) {
    GetObjectTorrentRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetObjectTorrentRequest || (GetObjectTorrentRequest = {}));
var PublicAccessBlockConfiguration;
(function (PublicAccessBlockConfiguration) {
    PublicAccessBlockConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PublicAccessBlockConfiguration || (PublicAccessBlockConfiguration = {}));
var GetPublicAccessBlockOutput;
(function (GetPublicAccessBlockOutput) {
    GetPublicAccessBlockOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetPublicAccessBlockOutput || (GetPublicAccessBlockOutput = {}));
var GetPublicAccessBlockRequest;
(function (GetPublicAccessBlockRequest) {
    GetPublicAccessBlockRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GetPublicAccessBlockRequest || (GetPublicAccessBlockRequest = {}));
var HeadBucketRequest;
(function (HeadBucketRequest) {
    HeadBucketRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(HeadBucketRequest || (HeadBucketRequest = {}));
var NoSuchBucket;
(function (NoSuchBucket) {
    NoSuchBucket.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(NoSuchBucket || (NoSuchBucket = {}));
var HeadObjectOutput;
(function (HeadObjectOutput) {
    HeadObjectOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(HeadObjectOutput || (HeadObjectOutput = {}));
var HeadObjectRequest;
(function (HeadObjectRequest) {
    HeadObjectRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSECustomerKey && { SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(HeadObjectRequest || (HeadObjectRequest = {}));
var ListBucketAnalyticsConfigurationsOutput;
(function (ListBucketAnalyticsConfigurationsOutput) {
    ListBucketAnalyticsConfigurationsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListBucketAnalyticsConfigurationsOutput || (ListBucketAnalyticsConfigurationsOutput = {}));
var ListBucketAnalyticsConfigurationsRequest;
(function (ListBucketAnalyticsConfigurationsRequest) {
    ListBucketAnalyticsConfigurationsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListBucketAnalyticsConfigurationsRequest || (ListBucketAnalyticsConfigurationsRequest = {}));
var ListBucketInventoryConfigurationsOutput;
(function (ListBucketInventoryConfigurationsOutput) {
    ListBucketInventoryConfigurationsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.InventoryConfigurationList && {
        InventoryConfigurationList: obj.InventoryConfigurationList.map(function (item) {
            return InventoryConfiguration.filterSensitiveLog(item);
        }),
    }))); };
})(ListBucketInventoryConfigurationsOutput || (ListBucketInventoryConfigurationsOutput = {}));
var ListBucketInventoryConfigurationsRequest;
(function (ListBucketInventoryConfigurationsRequest) {
    ListBucketInventoryConfigurationsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListBucketInventoryConfigurationsRequest || (ListBucketInventoryConfigurationsRequest = {}));
var ListBucketMetricsConfigurationsOutput;
(function (ListBucketMetricsConfigurationsOutput) {
    ListBucketMetricsConfigurationsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListBucketMetricsConfigurationsOutput || (ListBucketMetricsConfigurationsOutput = {}));
var ListBucketMetricsConfigurationsRequest;
(function (ListBucketMetricsConfigurationsRequest) {
    ListBucketMetricsConfigurationsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListBucketMetricsConfigurationsRequest || (ListBucketMetricsConfigurationsRequest = {}));
var Bucket;
(function (Bucket) {
    Bucket.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Bucket || (Bucket = {}));
var ListBucketsOutput;
(function (ListBucketsOutput) {
    ListBucketsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListBucketsOutput || (ListBucketsOutput = {}));
var CommonPrefix;
(function (CommonPrefix) {
    CommonPrefix.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CommonPrefix || (CommonPrefix = {}));
var Initiator;
(function (Initiator) {
    Initiator.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Initiator || (Initiator = {}));
var MultipartUpload;
(function (MultipartUpload) {
    MultipartUpload.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(MultipartUpload || (MultipartUpload = {}));
var ListMultipartUploadsOutput;
(function (ListMultipartUploadsOutput) {
    ListMultipartUploadsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListMultipartUploadsOutput || (ListMultipartUploadsOutput = {}));
var ListMultipartUploadsRequest;
(function (ListMultipartUploadsRequest) {
    ListMultipartUploadsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListMultipartUploadsRequest || (ListMultipartUploadsRequest = {}));
var _Object;
(function (_Object) {
    _Object.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(_Object || (_Object = {}));
var ListObjectsOutput;
(function (ListObjectsOutput) {
    ListObjectsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListObjectsOutput || (ListObjectsOutput = {}));
var ListObjectsRequest;
(function (ListObjectsRequest) {
    ListObjectsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListObjectsRequest || (ListObjectsRequest = {}));
var ListObjectsV2Output;
(function (ListObjectsV2Output) {
    ListObjectsV2Output.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListObjectsV2Output || (ListObjectsV2Output = {}));
var ListObjectsV2Request;
(function (ListObjectsV2Request) {
    ListObjectsV2Request.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListObjectsV2Request || (ListObjectsV2Request = {}));
var DeleteMarkerEntry;
(function (DeleteMarkerEntry) {
    DeleteMarkerEntry.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(DeleteMarkerEntry || (DeleteMarkerEntry = {}));
var ObjectVersion;
(function (ObjectVersion) {
    ObjectVersion.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ObjectVersion || (ObjectVersion = {}));
var ListObjectVersionsOutput;
(function (ListObjectVersionsOutput) {
    ListObjectVersionsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListObjectVersionsOutput || (ListObjectVersionsOutput = {}));
var ListObjectVersionsRequest;
(function (ListObjectVersionsRequest) {
    ListObjectVersionsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListObjectVersionsRequest || (ListObjectVersionsRequest = {}));
var Part;
(function (Part) {
    Part.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Part || (Part = {}));
var ListPartsOutput;
(function (ListPartsOutput) {
    ListPartsOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListPartsOutput || (ListPartsOutput = {}));
var ListPartsRequest;
(function (ListPartsRequest) {
    ListPartsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ListPartsRequest || (ListPartsRequest = {}));
var PutBucketAccelerateConfigurationRequest;
(function (PutBucketAccelerateConfigurationRequest) {
    PutBucketAccelerateConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketAccelerateConfigurationRequest || (PutBucketAccelerateConfigurationRequest = {}));
var PutBucketAclRequest;
(function (PutBucketAclRequest) {
    PutBucketAclRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketAclRequest || (PutBucketAclRequest = {}));
var PutBucketAnalyticsConfigurationRequest;
(function (PutBucketAnalyticsConfigurationRequest) {
    PutBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketAnalyticsConfigurationRequest || (PutBucketAnalyticsConfigurationRequest = {}));
var CORSConfiguration;
(function (CORSConfiguration) {
    CORSConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CORSConfiguration || (CORSConfiguration = {}));
var PutBucketCorsRequest;
(function (PutBucketCorsRequest) {
    PutBucketCorsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketCorsRequest || (PutBucketCorsRequest = {}));
var PutBucketEncryptionRequest;
(function (PutBucketEncryptionRequest) {
    PutBucketEncryptionRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.ServerSideEncryptionConfiguration && {
        ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(obj.ServerSideEncryptionConfiguration),
    }))); };
})(PutBucketEncryptionRequest || (PutBucketEncryptionRequest = {}));
var PutBucketInventoryConfigurationRequest;
(function (PutBucketInventoryConfigurationRequest) {
    PutBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.InventoryConfiguration && {
        InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration),
    }))); };
})(PutBucketInventoryConfigurationRequest || (PutBucketInventoryConfigurationRequest = {}));
var BucketLifecycleConfiguration;
(function (BucketLifecycleConfiguration) {
    BucketLifecycleConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(BucketLifecycleConfiguration || (BucketLifecycleConfiguration = {}));
var PutBucketLifecycleConfigurationRequest;
(function (PutBucketLifecycleConfigurationRequest) {
    PutBucketLifecycleConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketLifecycleConfigurationRequest || (PutBucketLifecycleConfigurationRequest = {}));
var BucketLoggingStatus;
(function (BucketLoggingStatus) {
    BucketLoggingStatus.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(BucketLoggingStatus || (BucketLoggingStatus = {}));
var PutBucketLoggingRequest;
(function (PutBucketLoggingRequest) {
    PutBucketLoggingRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketLoggingRequest || (PutBucketLoggingRequest = {}));
var PutBucketMetricsConfigurationRequest;
(function (PutBucketMetricsConfigurationRequest) {
    PutBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketMetricsConfigurationRequest || (PutBucketMetricsConfigurationRequest = {}));
var PutBucketNotificationConfigurationRequest;
(function (PutBucketNotificationConfigurationRequest) {
    PutBucketNotificationConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketNotificationConfigurationRequest || (PutBucketNotificationConfigurationRequest = {}));
var PutBucketOwnershipControlsRequest;
(function (PutBucketOwnershipControlsRequest) {
    PutBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketOwnershipControlsRequest || (PutBucketOwnershipControlsRequest = {}));
var PutBucketPolicyRequest;
(function (PutBucketPolicyRequest) {
    PutBucketPolicyRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketPolicyRequest || (PutBucketPolicyRequest = {}));
var PutBucketReplicationRequest;
(function (PutBucketReplicationRequest) {
    PutBucketReplicationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketReplicationRequest || (PutBucketReplicationRequest = {}));
var RequestPaymentConfiguration;
(function (RequestPaymentConfiguration) {
    RequestPaymentConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(RequestPaymentConfiguration || (RequestPaymentConfiguration = {}));
var PutBucketRequestPaymentRequest;
(function (PutBucketRequestPaymentRequest) {
    PutBucketRequestPaymentRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketRequestPaymentRequest || (PutBucketRequestPaymentRequest = {}));
var Tagging;
(function (Tagging) {
    Tagging.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Tagging || (Tagging = {}));
var PutBucketTaggingRequest;
(function (PutBucketTaggingRequest) {
    PutBucketTaggingRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketTaggingRequest || (PutBucketTaggingRequest = {}));
var VersioningConfiguration;
(function (VersioningConfiguration) {
    VersioningConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(VersioningConfiguration || (VersioningConfiguration = {}));
var PutBucketVersioningRequest;
(function (PutBucketVersioningRequest) {
    PutBucketVersioningRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketVersioningRequest || (PutBucketVersioningRequest = {}));
var WebsiteConfiguration;
(function (WebsiteConfiguration) {
    WebsiteConfiguration.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(WebsiteConfiguration || (WebsiteConfiguration = {}));
var PutBucketWebsiteRequest;
(function (PutBucketWebsiteRequest) {
    PutBucketWebsiteRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutBucketWebsiteRequest || (PutBucketWebsiteRequest = {}));
var PutObjectOutput;
(function (PutObjectOutput) {
    PutObjectOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(PutObjectOutput || (PutObjectOutput = {}));
var PutObjectRequest;
(function (PutObjectRequest) {
    PutObjectRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSECustomerKey && { SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(PutObjectRequest || (PutObjectRequest = {}));
var PutObjectAclOutput;
(function (PutObjectAclOutput) {
    PutObjectAclOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectAclOutput || (PutObjectAclOutput = {}));
var PutObjectAclRequest;
(function (PutObjectAclRequest) {
    PutObjectAclRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectAclRequest || (PutObjectAclRequest = {}));
var PutObjectLegalHoldOutput;
(function (PutObjectLegalHoldOutput) {
    PutObjectLegalHoldOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectLegalHoldOutput || (PutObjectLegalHoldOutput = {}));
var PutObjectLegalHoldRequest;
(function (PutObjectLegalHoldRequest) {
    PutObjectLegalHoldRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectLegalHoldRequest || (PutObjectLegalHoldRequest = {}));
var PutObjectLockConfigurationOutput;
(function (PutObjectLockConfigurationOutput) {
    PutObjectLockConfigurationOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectLockConfigurationOutput || (PutObjectLockConfigurationOutput = {}));
var PutObjectLockConfigurationRequest;
(function (PutObjectLockConfigurationRequest) {
    PutObjectLockConfigurationRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectLockConfigurationRequest || (PutObjectLockConfigurationRequest = {}));
var PutObjectRetentionOutput;
(function (PutObjectRetentionOutput) {
    PutObjectRetentionOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectRetentionOutput || (PutObjectRetentionOutput = {}));
var PutObjectRetentionRequest;
(function (PutObjectRetentionRequest) {
    PutObjectRetentionRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectRetentionRequest || (PutObjectRetentionRequest = {}));
var PutObjectTaggingOutput;
(function (PutObjectTaggingOutput) {
    PutObjectTaggingOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectTaggingOutput || (PutObjectTaggingOutput = {}));
var PutObjectTaggingRequest;
(function (PutObjectTaggingRequest) {
    PutObjectTaggingRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutObjectTaggingRequest || (PutObjectTaggingRequest = {}));
var PutPublicAccessBlockRequest;
(function (PutPublicAccessBlockRequest) {
    PutPublicAccessBlockRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(PutPublicAccessBlockRequest || (PutPublicAccessBlockRequest = {}));
var ObjectAlreadyInActiveTierError;
(function (ObjectAlreadyInActiveTierError) {
    ObjectAlreadyInActiveTierError.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ObjectAlreadyInActiveTierError || (ObjectAlreadyInActiveTierError = {}));
var RestoreObjectOutput;
(function (RestoreObjectOutput) {
    RestoreObjectOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(RestoreObjectOutput || (RestoreObjectOutput = {}));
var GlacierJobParameters;
(function (GlacierJobParameters) {
    GlacierJobParameters.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(GlacierJobParameters || (GlacierJobParameters = {}));
var Encryption;
(function (Encryption) {
    Encryption.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.KMSKeyId && { KMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(Encryption || (Encryption = {}));
var MetadataEntry;
(function (MetadataEntry) {
    MetadataEntry.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(MetadataEntry || (MetadataEntry = {}));
var S3Location;
(function (S3Location) {
    S3Location.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.Encryption && { Encryption: Encryption.filterSensitiveLog(obj.Encryption) }))); };
})(S3Location || (S3Location = {}));
var OutputLocation;
(function (OutputLocation) {
    OutputLocation.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.S3 && { S3: S3Location.filterSensitiveLog(obj.S3) }))); };
})(OutputLocation || (OutputLocation = {}));
var FileHeaderInfo;
(function (FileHeaderInfo) {
    FileHeaderInfo["IGNORE"] = "IGNORE";
    FileHeaderInfo["NONE"] = "NONE";
    FileHeaderInfo["USE"] = "USE";
})(FileHeaderInfo || (FileHeaderInfo = {}));
var CSVInput;
(function (CSVInput) {
    CSVInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CSVInput || (CSVInput = {}));
var JSONType;
(function (JSONType) {
    JSONType["DOCUMENT"] = "DOCUMENT";
    JSONType["LINES"] = "LINES";
})(JSONType || (JSONType = {}));
var JSONInput;
(function (JSONInput) {
    JSONInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(JSONInput || (JSONInput = {}));
var ParquetInput;
(function (ParquetInput) {
    ParquetInput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ParquetInput || (ParquetInput = {}));
var InputSerialization;
(function (InputSerialization) {
    InputSerialization.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(InputSerialization || (InputSerialization = {}));
var QuoteFields;
(function (QuoteFields) {
    QuoteFields["ALWAYS"] = "ALWAYS";
    QuoteFields["ASNEEDED"] = "ASNEEDED";
})(QuoteFields || (QuoteFields = {}));
var CSVOutput;
(function (CSVOutput) {
    CSVOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CSVOutput || (CSVOutput = {}));
var JSONOutput;
(function (JSONOutput) {
    JSONOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(JSONOutput || (JSONOutput = {}));
var OutputSerialization;
(function (OutputSerialization) {
    OutputSerialization.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(OutputSerialization || (OutputSerialization = {}));
var SelectParameters;
(function (SelectParameters) {
    SelectParameters.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(SelectParameters || (SelectParameters = {}));


/***/ }),

/***/ 61250:
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/models/models_1.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RestoreRequestType": () => (/* binding */ RestoreRequestType),
/* harmony export */   "RestoreRequest": () => (/* binding */ RestoreRequest),
/* harmony export */   "RestoreObjectRequest": () => (/* binding */ RestoreObjectRequest),
/* harmony export */   "ContinuationEvent": () => (/* binding */ ContinuationEvent),
/* harmony export */   "EndEvent": () => (/* binding */ EndEvent),
/* harmony export */   "Progress": () => (/* binding */ Progress),
/* harmony export */   "ProgressEvent": () => (/* binding */ ProgressEvent),
/* harmony export */   "RecordsEvent": () => (/* binding */ RecordsEvent),
/* harmony export */   "Stats": () => (/* binding */ Stats),
/* harmony export */   "StatsEvent": () => (/* binding */ StatsEvent),
/* harmony export */   "SelectObjectContentEventStream": () => (/* binding */ SelectObjectContentEventStream),
/* harmony export */   "SelectObjectContentOutput": () => (/* binding */ SelectObjectContentOutput),
/* harmony export */   "RequestProgress": () => (/* binding */ RequestProgress),
/* harmony export */   "ScanRange": () => (/* binding */ ScanRange),
/* harmony export */   "SelectObjectContentRequest": () => (/* binding */ SelectObjectContentRequest),
/* harmony export */   "UploadPartOutput": () => (/* binding */ UploadPartOutput),
/* harmony export */   "UploadPartRequest": () => (/* binding */ UploadPartRequest),
/* harmony export */   "CopyPartResult": () => (/* binding */ CopyPartResult),
/* harmony export */   "UploadPartCopyOutput": () => (/* binding */ UploadPartCopyOutput),
/* harmony export */   "UploadPartCopyRequest": () => (/* binding */ UploadPartCopyRequest)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _models_0__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./models_0 */ 37325);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);



var RestoreRequestType;
(function (RestoreRequestType) {
    RestoreRequestType["SELECT"] = "SELECT";
})(RestoreRequestType || (RestoreRequestType = {}));
var RestoreRequest;
(function (RestoreRequest) {
    RestoreRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.OutputLocation && { OutputLocation: _models_0__WEBPACK_IMPORTED_MODULE_2__.OutputLocation.filterSensitiveLog(obj.OutputLocation) }))); };
})(RestoreRequest || (RestoreRequest = {}));
var RestoreObjectRequest;
(function (RestoreObjectRequest) {
    RestoreObjectRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.RestoreRequest && { RestoreRequest: RestoreRequest.filterSensitiveLog(obj.RestoreRequest) }))); };
})(RestoreObjectRequest || (RestoreObjectRequest = {}));
var ContinuationEvent;
(function (ContinuationEvent) {
    ContinuationEvent.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ContinuationEvent || (ContinuationEvent = {}));
var EndEvent;
(function (EndEvent) {
    EndEvent.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(EndEvent || (EndEvent = {}));
var Progress;
(function (Progress) {
    Progress.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Progress || (Progress = {}));
var ProgressEvent;
(function (ProgressEvent) {
    ProgressEvent.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ProgressEvent || (ProgressEvent = {}));
var RecordsEvent;
(function (RecordsEvent) {
    RecordsEvent.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(RecordsEvent || (RecordsEvent = {}));
var Stats;
(function (Stats) {
    Stats.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(Stats || (Stats = {}));
var StatsEvent;
(function (StatsEvent) {
    StatsEvent.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(StatsEvent || (StatsEvent = {}));
var SelectObjectContentEventStream;
(function (SelectObjectContentEventStream) {
    SelectObjectContentEventStream.visit = function (value, visitor) {
        if (value.Cont !== undefined)
            return visitor.Cont(value.Cont);
        if (value.Progress !== undefined)
            return visitor.Progress(value.Progress);
        if (value.Stats !== undefined)
            return visitor.Stats(value.Stats);
        if (value.End !== undefined)
            return visitor.End(value.End);
        if (value.Records !== undefined)
            return visitor.Records(value.Records);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
    SelectObjectContentEventStream.filterSensitiveLog = function (obj) {
        var _a;
        if (obj.Cont !== undefined)
            return { Cont: ContinuationEvent.filterSensitiveLog(obj.Cont) };
        if (obj.Progress !== undefined)
            return { Progress: ProgressEvent.filterSensitiveLog(obj.Progress) };
        if (obj.Stats !== undefined)
            return { Stats: StatsEvent.filterSensitiveLog(obj.Stats) };
        if (obj.End !== undefined)
            return { End: EndEvent.filterSensitiveLog(obj.End) };
        if (obj.Records !== undefined)
            return { Records: RecordsEvent.filterSensitiveLog(obj.Records) };
        if (obj.$unknown !== undefined)
            return _a = {}, _a[obj.$unknown[0]] = "UNKNOWN", _a;
    };
})(SelectObjectContentEventStream || (SelectObjectContentEventStream = {}));
var SelectObjectContentOutput;
(function (SelectObjectContentOutput) {
    SelectObjectContentOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.Payload && { Payload: "STREAMING_CONTENT" }))); };
})(SelectObjectContentOutput || (SelectObjectContentOutput = {}));
var RequestProgress;
(function (RequestProgress) {
    RequestProgress.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(RequestProgress || (RequestProgress = {}));
var ScanRange;
(function (ScanRange) {
    ScanRange.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(ScanRange || (ScanRange = {}));
var SelectObjectContentRequest;
(function (SelectObjectContentRequest) {
    SelectObjectContentRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSECustomerKey && { SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(SelectObjectContentRequest || (SelectObjectContentRequest = {}));
var UploadPartOutput;
(function (UploadPartOutput) {
    UploadPartOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(UploadPartOutput || (UploadPartOutput = {}));
var UploadPartRequest;
(function (UploadPartRequest) {
    UploadPartRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSECustomerKey && { SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(UploadPartRequest || (UploadPartRequest = {}));
var CopyPartResult;
(function (CopyPartResult) {
    CopyPartResult.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj)); };
})(CopyPartResult || (CopyPartResult = {}));
var UploadPartCopyOutput;
(function (UploadPartCopyOutput) {
    UploadPartCopyOutput.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSEKMSKeyId && { SSEKMSKeyId: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(UploadPartCopyOutput || (UploadPartCopyOutput = {}));
var UploadPartCopyRequest;
(function (UploadPartCopyRequest) {
    UploadPartCopyRequest.filterSensitiveLog = function (obj) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, obj), (obj.SSECustomerKey && { SSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING })), (obj.CopySourceSSECustomerKey && { CopySourceSSECustomerKey: _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_0__.SENSITIVE_STRING }))); };
})(UploadPartCopyRequest || (UploadPartCopyRequest = {}));


/***/ }),

/***/ 74613:
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/protocols/Aws_restXml.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "serializeAws_restXmlAbortMultipartUploadCommand": () => (/* binding */ serializeAws_restXmlAbortMultipartUploadCommand),
/* harmony export */   "serializeAws_restXmlCompleteMultipartUploadCommand": () => (/* binding */ serializeAws_restXmlCompleteMultipartUploadCommand),
/* harmony export */   "serializeAws_restXmlCopyObjectCommand": () => (/* binding */ serializeAws_restXmlCopyObjectCommand),
/* harmony export */   "serializeAws_restXmlCreateBucketCommand": () => (/* binding */ serializeAws_restXmlCreateBucketCommand),
/* harmony export */   "serializeAws_restXmlCreateMultipartUploadCommand": () => (/* binding */ serializeAws_restXmlCreateMultipartUploadCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketCorsCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketCorsCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketEncryptionCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketEncryptionCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketInventoryConfigurationCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketInventoryConfigurationCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketLifecycleCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketLifecycleCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketMetricsConfigurationCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketMetricsConfigurationCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketOwnershipControlsCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketOwnershipControlsCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketPolicyCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketPolicyCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketReplicationCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketReplicationCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketTaggingCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketTaggingCommand),
/* harmony export */   "serializeAws_restXmlDeleteBucketWebsiteCommand": () => (/* binding */ serializeAws_restXmlDeleteBucketWebsiteCommand),
/* harmony export */   "serializeAws_restXmlDeleteObjectCommand": () => (/* binding */ serializeAws_restXmlDeleteObjectCommand),
/* harmony export */   "serializeAws_restXmlDeleteObjectsCommand": () => (/* binding */ serializeAws_restXmlDeleteObjectsCommand),
/* harmony export */   "serializeAws_restXmlDeleteObjectTaggingCommand": () => (/* binding */ serializeAws_restXmlDeleteObjectTaggingCommand),
/* harmony export */   "serializeAws_restXmlDeletePublicAccessBlockCommand": () => (/* binding */ serializeAws_restXmlDeletePublicAccessBlockCommand),
/* harmony export */   "serializeAws_restXmlGetBucketAccelerateConfigurationCommand": () => (/* binding */ serializeAws_restXmlGetBucketAccelerateConfigurationCommand),
/* harmony export */   "serializeAws_restXmlGetBucketAclCommand": () => (/* binding */ serializeAws_restXmlGetBucketAclCommand),
/* harmony export */   "serializeAws_restXmlGetBucketAnalyticsConfigurationCommand": () => (/* binding */ serializeAws_restXmlGetBucketAnalyticsConfigurationCommand),
/* harmony export */   "serializeAws_restXmlGetBucketCorsCommand": () => (/* binding */ serializeAws_restXmlGetBucketCorsCommand),
/* harmony export */   "serializeAws_restXmlGetBucketEncryptionCommand": () => (/* binding */ serializeAws_restXmlGetBucketEncryptionCommand),
/* harmony export */   "serializeAws_restXmlGetBucketInventoryConfigurationCommand": () => (/* binding */ serializeAws_restXmlGetBucketInventoryConfigurationCommand),
/* harmony export */   "serializeAws_restXmlGetBucketLifecycleConfigurationCommand": () => (/* binding */ serializeAws_restXmlGetBucketLifecycleConfigurationCommand),
/* harmony export */   "serializeAws_restXmlGetBucketLocationCommand": () => (/* binding */ serializeAws_restXmlGetBucketLocationCommand),
/* harmony export */   "serializeAws_restXmlGetBucketLoggingCommand": () => (/* binding */ serializeAws_restXmlGetBucketLoggingCommand),
/* harmony export */   "serializeAws_restXmlGetBucketMetricsConfigurationCommand": () => (/* binding */ serializeAws_restXmlGetBucketMetricsConfigurationCommand),
/* harmony export */   "serializeAws_restXmlGetBucketNotificationConfigurationCommand": () => (/* binding */ serializeAws_restXmlGetBucketNotificationConfigurationCommand),
/* harmony export */   "serializeAws_restXmlGetBucketOwnershipControlsCommand": () => (/* binding */ serializeAws_restXmlGetBucketOwnershipControlsCommand),
/* harmony export */   "serializeAws_restXmlGetBucketPolicyCommand": () => (/* binding */ serializeAws_restXmlGetBucketPolicyCommand),
/* harmony export */   "serializeAws_restXmlGetBucketPolicyStatusCommand": () => (/* binding */ serializeAws_restXmlGetBucketPolicyStatusCommand),
/* harmony export */   "serializeAws_restXmlGetBucketReplicationCommand": () => (/* binding */ serializeAws_restXmlGetBucketReplicationCommand),
/* harmony export */   "serializeAws_restXmlGetBucketRequestPaymentCommand": () => (/* binding */ serializeAws_restXmlGetBucketRequestPaymentCommand),
/* harmony export */   "serializeAws_restXmlGetBucketTaggingCommand": () => (/* binding */ serializeAws_restXmlGetBucketTaggingCommand),
/* harmony export */   "serializeAws_restXmlGetBucketVersioningCommand": () => (/* binding */ serializeAws_restXmlGetBucketVersioningCommand),
/* harmony export */   "serializeAws_restXmlGetBucketWebsiteCommand": () => (/* binding */ serializeAws_restXmlGetBucketWebsiteCommand),
/* harmony export */   "serializeAws_restXmlGetObjectCommand": () => (/* binding */ serializeAws_restXmlGetObjectCommand),
/* harmony export */   "serializeAws_restXmlGetObjectAclCommand": () => (/* binding */ serializeAws_restXmlGetObjectAclCommand),
/* harmony export */   "serializeAws_restXmlGetObjectLegalHoldCommand": () => (/* binding */ serializeAws_restXmlGetObjectLegalHoldCommand),
/* harmony export */   "serializeAws_restXmlGetObjectLockConfigurationCommand": () => (/* binding */ serializeAws_restXmlGetObjectLockConfigurationCommand),
/* harmony export */   "serializeAws_restXmlGetObjectRetentionCommand": () => (/* binding */ serializeAws_restXmlGetObjectRetentionCommand),
/* harmony export */   "serializeAws_restXmlGetObjectTaggingCommand": () => (/* binding */ serializeAws_restXmlGetObjectTaggingCommand),
/* harmony export */   "serializeAws_restXmlGetObjectTorrentCommand": () => (/* binding */ serializeAws_restXmlGetObjectTorrentCommand),
/* harmony export */   "serializeAws_restXmlGetPublicAccessBlockCommand": () => (/* binding */ serializeAws_restXmlGetPublicAccessBlockCommand),
/* harmony export */   "serializeAws_restXmlHeadBucketCommand": () => (/* binding */ serializeAws_restXmlHeadBucketCommand),
/* harmony export */   "serializeAws_restXmlHeadObjectCommand": () => (/* binding */ serializeAws_restXmlHeadObjectCommand),
/* harmony export */   "serializeAws_restXmlListBucketAnalyticsConfigurationsCommand": () => (/* binding */ serializeAws_restXmlListBucketAnalyticsConfigurationsCommand),
/* harmony export */   "serializeAws_restXmlListBucketInventoryConfigurationsCommand": () => (/* binding */ serializeAws_restXmlListBucketInventoryConfigurationsCommand),
/* harmony export */   "serializeAws_restXmlListBucketMetricsConfigurationsCommand": () => (/* binding */ serializeAws_restXmlListBucketMetricsConfigurationsCommand),
/* harmony export */   "serializeAws_restXmlListBucketsCommand": () => (/* binding */ serializeAws_restXmlListBucketsCommand),
/* harmony export */   "serializeAws_restXmlListMultipartUploadsCommand": () => (/* binding */ serializeAws_restXmlListMultipartUploadsCommand),
/* harmony export */   "serializeAws_restXmlListObjectsCommand": () => (/* binding */ serializeAws_restXmlListObjectsCommand),
/* harmony export */   "serializeAws_restXmlListObjectsV2Command": () => (/* binding */ serializeAws_restXmlListObjectsV2Command),
/* harmony export */   "serializeAws_restXmlListObjectVersionsCommand": () => (/* binding */ serializeAws_restXmlListObjectVersionsCommand),
/* harmony export */   "serializeAws_restXmlListPartsCommand": () => (/* binding */ serializeAws_restXmlListPartsCommand),
/* harmony export */   "serializeAws_restXmlPutBucketAccelerateConfigurationCommand": () => (/* binding */ serializeAws_restXmlPutBucketAccelerateConfigurationCommand),
/* harmony export */   "serializeAws_restXmlPutBucketAclCommand": () => (/* binding */ serializeAws_restXmlPutBucketAclCommand),
/* harmony export */   "serializeAws_restXmlPutBucketAnalyticsConfigurationCommand": () => (/* binding */ serializeAws_restXmlPutBucketAnalyticsConfigurationCommand),
/* harmony export */   "serializeAws_restXmlPutBucketCorsCommand": () => (/* binding */ serializeAws_restXmlPutBucketCorsCommand),
/* harmony export */   "serializeAws_restXmlPutBucketEncryptionCommand": () => (/* binding */ serializeAws_restXmlPutBucketEncryptionCommand),
/* harmony export */   "serializeAws_restXmlPutBucketInventoryConfigurationCommand": () => (/* binding */ serializeAws_restXmlPutBucketInventoryConfigurationCommand),
/* harmony export */   "serializeAws_restXmlPutBucketLifecycleConfigurationCommand": () => (/* binding */ serializeAws_restXmlPutBucketLifecycleConfigurationCommand),
/* harmony export */   "serializeAws_restXmlPutBucketLoggingCommand": () => (/* binding */ serializeAws_restXmlPutBucketLoggingCommand),
/* harmony export */   "serializeAws_restXmlPutBucketMetricsConfigurationCommand": () => (/* binding */ serializeAws_restXmlPutBucketMetricsConfigurationCommand),
/* harmony export */   "serializeAws_restXmlPutBucketNotificationConfigurationCommand": () => (/* binding */ serializeAws_restXmlPutBucketNotificationConfigurationCommand),
/* harmony export */   "serializeAws_restXmlPutBucketOwnershipControlsCommand": () => (/* binding */ serializeAws_restXmlPutBucketOwnershipControlsCommand),
/* harmony export */   "serializeAws_restXmlPutBucketPolicyCommand": () => (/* binding */ serializeAws_restXmlPutBucketPolicyCommand),
/* harmony export */   "serializeAws_restXmlPutBucketReplicationCommand": () => (/* binding */ serializeAws_restXmlPutBucketReplicationCommand),
/* harmony export */   "serializeAws_restXmlPutBucketRequestPaymentCommand": () => (/* binding */ serializeAws_restXmlPutBucketRequestPaymentCommand),
/* harmony export */   "serializeAws_restXmlPutBucketTaggingCommand": () => (/* binding */ serializeAws_restXmlPutBucketTaggingCommand),
/* harmony export */   "serializeAws_restXmlPutBucketVersioningCommand": () => (/* binding */ serializeAws_restXmlPutBucketVersioningCommand),
/* harmony export */   "serializeAws_restXmlPutBucketWebsiteCommand": () => (/* binding */ serializeAws_restXmlPutBucketWebsiteCommand),
/* harmony export */   "serializeAws_restXmlPutObjectCommand": () => (/* binding */ serializeAws_restXmlPutObjectCommand),
/* harmony export */   "serializeAws_restXmlPutObjectAclCommand": () => (/* binding */ serializeAws_restXmlPutObjectAclCommand),
/* harmony export */   "serializeAws_restXmlPutObjectLegalHoldCommand": () => (/* binding */ serializeAws_restXmlPutObjectLegalHoldCommand),
/* harmony export */   "serializeAws_restXmlPutObjectLockConfigurationCommand": () => (/* binding */ serializeAws_restXmlPutObjectLockConfigurationCommand),
/* harmony export */   "serializeAws_restXmlPutObjectRetentionCommand": () => (/* binding */ serializeAws_restXmlPutObjectRetentionCommand),
/* harmony export */   "serializeAws_restXmlPutObjectTaggingCommand": () => (/* binding */ serializeAws_restXmlPutObjectTaggingCommand),
/* harmony export */   "serializeAws_restXmlPutPublicAccessBlockCommand": () => (/* binding */ serializeAws_restXmlPutPublicAccessBlockCommand),
/* harmony export */   "serializeAws_restXmlRestoreObjectCommand": () => (/* binding */ serializeAws_restXmlRestoreObjectCommand),
/* harmony export */   "serializeAws_restXmlSelectObjectContentCommand": () => (/* binding */ serializeAws_restXmlSelectObjectContentCommand),
/* harmony export */   "serializeAws_restXmlUploadPartCommand": () => (/* binding */ serializeAws_restXmlUploadPartCommand),
/* harmony export */   "serializeAws_restXmlUploadPartCopyCommand": () => (/* binding */ serializeAws_restXmlUploadPartCopyCommand),
/* harmony export */   "deserializeAws_restXmlAbortMultipartUploadCommand": () => (/* binding */ deserializeAws_restXmlAbortMultipartUploadCommand),
/* harmony export */   "deserializeAws_restXmlCompleteMultipartUploadCommand": () => (/* binding */ deserializeAws_restXmlCompleteMultipartUploadCommand),
/* harmony export */   "deserializeAws_restXmlCopyObjectCommand": () => (/* binding */ deserializeAws_restXmlCopyObjectCommand),
/* harmony export */   "deserializeAws_restXmlCreateBucketCommand": () => (/* binding */ deserializeAws_restXmlCreateBucketCommand),
/* harmony export */   "deserializeAws_restXmlCreateMultipartUploadCommand": () => (/* binding */ deserializeAws_restXmlCreateMultipartUploadCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketCorsCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketCorsCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketEncryptionCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketEncryptionCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketLifecycleCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketLifecycleCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketOwnershipControlsCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketOwnershipControlsCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketPolicyCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketPolicyCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketReplicationCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketReplicationCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketTaggingCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketTaggingCommand),
/* harmony export */   "deserializeAws_restXmlDeleteBucketWebsiteCommand": () => (/* binding */ deserializeAws_restXmlDeleteBucketWebsiteCommand),
/* harmony export */   "deserializeAws_restXmlDeleteObjectCommand": () => (/* binding */ deserializeAws_restXmlDeleteObjectCommand),
/* harmony export */   "deserializeAws_restXmlDeleteObjectsCommand": () => (/* binding */ deserializeAws_restXmlDeleteObjectsCommand),
/* harmony export */   "deserializeAws_restXmlDeleteObjectTaggingCommand": () => (/* binding */ deserializeAws_restXmlDeleteObjectTaggingCommand),
/* harmony export */   "deserializeAws_restXmlDeletePublicAccessBlockCommand": () => (/* binding */ deserializeAws_restXmlDeletePublicAccessBlockCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketAccelerateConfigurationCommand": () => (/* binding */ deserializeAws_restXmlGetBucketAccelerateConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketAclCommand": () => (/* binding */ deserializeAws_restXmlGetBucketAclCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand": () => (/* binding */ deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketCorsCommand": () => (/* binding */ deserializeAws_restXmlGetBucketCorsCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketEncryptionCommand": () => (/* binding */ deserializeAws_restXmlGetBucketEncryptionCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketInventoryConfigurationCommand": () => (/* binding */ deserializeAws_restXmlGetBucketInventoryConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketLifecycleConfigurationCommand": () => (/* binding */ deserializeAws_restXmlGetBucketLifecycleConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketLocationCommand": () => (/* binding */ deserializeAws_restXmlGetBucketLocationCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketLoggingCommand": () => (/* binding */ deserializeAws_restXmlGetBucketLoggingCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketMetricsConfigurationCommand": () => (/* binding */ deserializeAws_restXmlGetBucketMetricsConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketNotificationConfigurationCommand": () => (/* binding */ deserializeAws_restXmlGetBucketNotificationConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketOwnershipControlsCommand": () => (/* binding */ deserializeAws_restXmlGetBucketOwnershipControlsCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketPolicyCommand": () => (/* binding */ deserializeAws_restXmlGetBucketPolicyCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketPolicyStatusCommand": () => (/* binding */ deserializeAws_restXmlGetBucketPolicyStatusCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketReplicationCommand": () => (/* binding */ deserializeAws_restXmlGetBucketReplicationCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketRequestPaymentCommand": () => (/* binding */ deserializeAws_restXmlGetBucketRequestPaymentCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketTaggingCommand": () => (/* binding */ deserializeAws_restXmlGetBucketTaggingCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketVersioningCommand": () => (/* binding */ deserializeAws_restXmlGetBucketVersioningCommand),
/* harmony export */   "deserializeAws_restXmlGetBucketWebsiteCommand": () => (/* binding */ deserializeAws_restXmlGetBucketWebsiteCommand),
/* harmony export */   "deserializeAws_restXmlGetObjectCommand": () => (/* binding */ deserializeAws_restXmlGetObjectCommand),
/* harmony export */   "deserializeAws_restXmlGetObjectAclCommand": () => (/* binding */ deserializeAws_restXmlGetObjectAclCommand),
/* harmony export */   "deserializeAws_restXmlGetObjectLegalHoldCommand": () => (/* binding */ deserializeAws_restXmlGetObjectLegalHoldCommand),
/* harmony export */   "deserializeAws_restXmlGetObjectLockConfigurationCommand": () => (/* binding */ deserializeAws_restXmlGetObjectLockConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlGetObjectRetentionCommand": () => (/* binding */ deserializeAws_restXmlGetObjectRetentionCommand),
/* harmony export */   "deserializeAws_restXmlGetObjectTaggingCommand": () => (/* binding */ deserializeAws_restXmlGetObjectTaggingCommand),
/* harmony export */   "deserializeAws_restXmlGetObjectTorrentCommand": () => (/* binding */ deserializeAws_restXmlGetObjectTorrentCommand),
/* harmony export */   "deserializeAws_restXmlGetPublicAccessBlockCommand": () => (/* binding */ deserializeAws_restXmlGetPublicAccessBlockCommand),
/* harmony export */   "deserializeAws_restXmlHeadBucketCommand": () => (/* binding */ deserializeAws_restXmlHeadBucketCommand),
/* harmony export */   "deserializeAws_restXmlHeadObjectCommand": () => (/* binding */ deserializeAws_restXmlHeadObjectCommand),
/* harmony export */   "deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand": () => (/* binding */ deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand),
/* harmony export */   "deserializeAws_restXmlListBucketInventoryConfigurationsCommand": () => (/* binding */ deserializeAws_restXmlListBucketInventoryConfigurationsCommand),
/* harmony export */   "deserializeAws_restXmlListBucketMetricsConfigurationsCommand": () => (/* binding */ deserializeAws_restXmlListBucketMetricsConfigurationsCommand),
/* harmony export */   "deserializeAws_restXmlListBucketsCommand": () => (/* binding */ deserializeAws_restXmlListBucketsCommand),
/* harmony export */   "deserializeAws_restXmlListMultipartUploadsCommand": () => (/* binding */ deserializeAws_restXmlListMultipartUploadsCommand),
/* harmony export */   "deserializeAws_restXmlListObjectsCommand": () => (/* binding */ deserializeAws_restXmlListObjectsCommand),
/* harmony export */   "deserializeAws_restXmlListObjectsV2Command": () => (/* binding */ deserializeAws_restXmlListObjectsV2Command),
/* harmony export */   "deserializeAws_restXmlListObjectVersionsCommand": () => (/* binding */ deserializeAws_restXmlListObjectVersionsCommand),
/* harmony export */   "deserializeAws_restXmlListPartsCommand": () => (/* binding */ deserializeAws_restXmlListPartsCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketAccelerateConfigurationCommand": () => (/* binding */ deserializeAws_restXmlPutBucketAccelerateConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketAclCommand": () => (/* binding */ deserializeAws_restXmlPutBucketAclCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand": () => (/* binding */ deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketCorsCommand": () => (/* binding */ deserializeAws_restXmlPutBucketCorsCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketEncryptionCommand": () => (/* binding */ deserializeAws_restXmlPutBucketEncryptionCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketInventoryConfigurationCommand": () => (/* binding */ deserializeAws_restXmlPutBucketInventoryConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketLifecycleConfigurationCommand": () => (/* binding */ deserializeAws_restXmlPutBucketLifecycleConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketLoggingCommand": () => (/* binding */ deserializeAws_restXmlPutBucketLoggingCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketMetricsConfigurationCommand": () => (/* binding */ deserializeAws_restXmlPutBucketMetricsConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketNotificationConfigurationCommand": () => (/* binding */ deserializeAws_restXmlPutBucketNotificationConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketOwnershipControlsCommand": () => (/* binding */ deserializeAws_restXmlPutBucketOwnershipControlsCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketPolicyCommand": () => (/* binding */ deserializeAws_restXmlPutBucketPolicyCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketReplicationCommand": () => (/* binding */ deserializeAws_restXmlPutBucketReplicationCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketRequestPaymentCommand": () => (/* binding */ deserializeAws_restXmlPutBucketRequestPaymentCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketTaggingCommand": () => (/* binding */ deserializeAws_restXmlPutBucketTaggingCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketVersioningCommand": () => (/* binding */ deserializeAws_restXmlPutBucketVersioningCommand),
/* harmony export */   "deserializeAws_restXmlPutBucketWebsiteCommand": () => (/* binding */ deserializeAws_restXmlPutBucketWebsiteCommand),
/* harmony export */   "deserializeAws_restXmlPutObjectCommand": () => (/* binding */ deserializeAws_restXmlPutObjectCommand),
/* harmony export */   "deserializeAws_restXmlPutObjectAclCommand": () => (/* binding */ deserializeAws_restXmlPutObjectAclCommand),
/* harmony export */   "deserializeAws_restXmlPutObjectLegalHoldCommand": () => (/* binding */ deserializeAws_restXmlPutObjectLegalHoldCommand),
/* harmony export */   "deserializeAws_restXmlPutObjectLockConfigurationCommand": () => (/* binding */ deserializeAws_restXmlPutObjectLockConfigurationCommand),
/* harmony export */   "deserializeAws_restXmlPutObjectRetentionCommand": () => (/* binding */ deserializeAws_restXmlPutObjectRetentionCommand),
/* harmony export */   "deserializeAws_restXmlPutObjectTaggingCommand": () => (/* binding */ deserializeAws_restXmlPutObjectTaggingCommand),
/* harmony export */   "deserializeAws_restXmlPutPublicAccessBlockCommand": () => (/* binding */ deserializeAws_restXmlPutPublicAccessBlockCommand),
/* harmony export */   "deserializeAws_restXmlRestoreObjectCommand": () => (/* binding */ deserializeAws_restXmlRestoreObjectCommand),
/* harmony export */   "deserializeAws_restXmlSelectObjectContentCommand": () => (/* binding */ deserializeAws_restXmlSelectObjectContentCommand),
/* harmony export */   "deserializeAws_restXmlUploadPartCommand": () => (/* binding */ deserializeAws_restXmlUploadPartCommand),
/* harmony export */   "deserializeAws_restXmlUploadPartCopyCommand": () => (/* binding */ deserializeAws_restXmlUploadPartCopyCommand)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);
/* harmony import */ var _aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/smithy-client */ 1882);
/* harmony import */ var _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/xml-builder */ 67003);
/* harmony import */ var fast_xml_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fast-xml-parser */ 78642);





var serializeAws_restXmlAbortMultipartUploadCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "x-id": "AbortMultipartUpload" }, (input.UploadId !== undefined && { uploadId: input.UploadId }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlCompleteMultipartUploadCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, (input.UploadId !== undefined && { uploadId: input.UploadId }));
                if (input.MultipartUpload !== undefined) {
                    contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "POST",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlCopyObjectCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.Tagging) && { "x-amz-tagging": input.Tagging })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {
                    "x-amz-server-side-encryption-context": input.SSEKMSEncryptionContext,
                })), (isSerializableHeaderValue(input.ACL) && { "x-amz-acl": input.ACL })), (isSerializableHeaderValue(input.Expires) && { Expires: (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.Expires).toString() })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {
                    "x-amz-copy-source-if-modified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.CopySourceIfModifiedSince).toString(),
                })), (isSerializableHeaderValue(input.ContentDisposition) && { "Content-Disposition": input.ContentDisposition })), (isSerializableHeaderValue(input.SSECustomerKey) && {
                    "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
                })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {
                    "x-amz-website-redirect-location": input.WebsiteRedirectLocation,
                })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {
                    "x-amz-object-lock-retain-until-date": (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString(),
                })), (isSerializableHeaderValue(input.ContentLanguage) && { "Content-Language": input.ContentLanguage })), (isSerializableHeaderValue(input.GrantRead) && { "x-amz-grant-read": input.GrantRead })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {
                    "x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus,
                })), (isSerializableHeaderValue(input.GrantWriteACP) && { "x-amz-grant-write-acp": input.GrantWriteACP })), (isSerializableHeaderValue(input.CopySource) && { "x-amz-copy-source": input.CopySource })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {
                    "x-amz-copy-source-server-side-encryption-customer-algorithm": input.CopySourceSSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {
                    "x-amz-copy-source-server-side-encryption-customer-key": input.CopySourceSSECustomerKey,
                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {
                    "x-amz-copy-source-server-side-encryption-customer-key-MD5": input.CopySourceSSECustomerKeyMD5,
                })), (isSerializableHeaderValue(input.CacheControl) && { "Cache-Control": input.CacheControl })), (isSerializableHeaderValue(input.GrantReadACP) && { "x-amz-grant-read-acp": input.GrantReadACP })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
                    "x-amz-server-side-encryption-customer-key-MD5": input.SSECustomerKeyMD5,
                })), (isSerializableHeaderValue(input.TaggingDirective) && { "x-amz-tagging-directive": input.TaggingDirective })), (isSerializableHeaderValue(input.ContentEncoding) && { "Content-Encoding": input.ContentEncoding })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {
                    "x-amz-copy-source-if-unmodified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.CopySourceIfUnmodifiedSince).toString(),
                })), (isSerializableHeaderValue(input.ContentType) && { "Content-Type": input.ContentType })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
                    "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {
                    "x-amz-copy-source-if-match": input.CopySourceIfMatch,
                })), (isSerializableHeaderValue(input.ObjectLockMode) && { "x-amz-object-lock-mode": input.ObjectLockMode })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {
                    "x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId,
                })), (isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {
                    "x-amz-source-expected-bucket-owner": input.ExpectedSourceBucketOwner,
                })), (isSerializableHeaderValue(input.ServerSideEncryption) && {
                    "x-amz-server-side-encryption": input.ServerSideEncryption,
                })), (isSerializableHeaderValue(input.MetadataDirective) && { "x-amz-metadata-directive": input.MetadataDirective })), (isSerializableHeaderValue(input.GrantFullControl) && { "x-amz-grant-full-control": input.GrantFullControl })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {
                    "x-amz-copy-source-if-none-match": input.CopySourceIfNoneMatch,
                })), (isSerializableHeaderValue(input.StorageClass) && { "x-amz-storage-class": input.StorageClass })), (input.Metadata !== undefined &&
                    Object.keys(input.Metadata).reduce(function (acc, suffix) {
                        acc["x-amz-meta-" + suffix] = input.Metadata[suffix];
                        return acc;
                    }, {})));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    "x-id": "CopyObject",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlCreateBucketCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.GrantReadACP) && { "x-amz-grant-read-acp": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantRead) && { "x-amz-grant-read": input.GrantRead })), (isSerializableHeaderValue(input.ACL) && { "x-amz-acl": input.ACL })), (isSerializableHeaderValue(input.GrantWrite) && { "x-amz-grant-write": input.GrantWrite })), (isSerializableHeaderValue(input.GrantFullControl) && { "x-amz-grant-full-control": input.GrantFullControl })), (isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {
                    "x-amz-bucket-object-lock-enabled": input.ObjectLockEnabledForBucket.toString(),
                })), (isSerializableHeaderValue(input.GrantWriteACP) && { "x-amz-grant-write-acp": input.GrantWriteACP }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.CreateBucketConfiguration !== undefined) {
                    contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlCreateMultipartUploadCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.GrantFullControl) && { "x-amz-grant-full-control": input.GrantFullControl })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
                    "x-amz-server-side-encryption-customer-key-MD5": input.SSECustomerKeyMD5,
                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
                    "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {
                    "x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId,
                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {
                    "x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.GrantRead) && { "x-amz-grant-read": input.GrantRead })), (isSerializableHeaderValue(input.GrantWriteACP) && { "x-amz-grant-write-acp": input.GrantWriteACP })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {
                    "x-amz-website-redirect-location": input.WebsiteRedirectLocation,
                })), (isSerializableHeaderValue(input.ContentType) && { "Content-Type": input.ContentType })), (isSerializableHeaderValue(input.ContentLanguage) && { "Content-Language": input.ContentLanguage })), (isSerializableHeaderValue(input.CacheControl) && { "Cache-Control": input.CacheControl })), (isSerializableHeaderValue(input.GrantReadACP) && { "x-amz-grant-read-acp": input.GrantReadACP })), (isSerializableHeaderValue(input.Tagging) && { "x-amz-tagging": input.Tagging })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {
                    "x-amz-server-side-encryption-context": input.SSEKMSEncryptionContext,
                })), (isSerializableHeaderValue(input.ACL) && { "x-amz-acl": input.ACL })), (isSerializableHeaderValue(input.SSECustomerKey) && {
                    "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.Expires) && { Expires: (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.Expires).toString() })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {
                    "x-amz-object-lock-retain-until-date": (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString(),
                })), (isSerializableHeaderValue(input.ServerSideEncryption) && {
                    "x-amz-server-side-encryption": input.ServerSideEncryption,
                })), (isSerializableHeaderValue(input.ContentDisposition) && { "Content-Disposition": input.ContentDisposition })), (isSerializableHeaderValue(input.ObjectLockMode) && { "x-amz-object-lock-mode": input.ObjectLockMode })), (isSerializableHeaderValue(input.StorageClass) && { "x-amz-storage-class": input.StorageClass })), (isSerializableHeaderValue(input.ContentEncoding) && { "Content-Encoding": input.ContentEncoding })), (input.Metadata !== undefined &&
                    Object.keys(input.Metadata).reduce(function (acc, suffix) {
                        acc["x-amz-meta-" + suffix] = input.Metadata[suffix];
                        return acc;
                    }, {})));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = {
                    uploads: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "POST",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ analytics: "" }, (input.Id !== undefined && { id: input.Id }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketCorsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    cors: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketEncryptionCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    encryption: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ inventory: "" }, (input.Id !== undefined && { id: input.Id }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketLifecycleCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    lifecycle: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ metrics: "" }, (input.Id !== undefined && { id: input.Id }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    ownershipControls: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketPolicyCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    policy: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketReplicationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    replication: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketTaggingCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    tagging: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteBucketWebsiteCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    website: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteObjectCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.MFA) && { "x-amz-mfa": input.MFA })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {
                    "x-amz-bypass-governance-retention": input.BypassGovernanceRetention.toString(),
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "x-id": "DeleteObject" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteObjectsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.MFA) && { "x-amz-mfa": input.MFA })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {
                    "x-amz-bypass-governance-retention": input.BypassGovernanceRetention.toString(),
                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    delete: "",
                };
                if (input.Delete !== undefined) {
                    contents = serializeAws_restXmlDelete(input.Delete, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "POST",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeleteObjectTaggingCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ tagging: "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlDeletePublicAccessBlockCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    publicAccessBlock: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "DELETE",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    accelerate: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketAclCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    acl: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ analytics: "", "x-id": "GetBucketAnalyticsConfiguration" }, (input.Id !== undefined && { id: input.Id }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketCorsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    cors: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketEncryptionCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    encryption: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ inventory: "", "x-id": "GetBucketInventoryConfiguration" }, (input.Id !== undefined && { id: input.Id }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    lifecycle: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketLocationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    location: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketLoggingCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    logging: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ metrics: "", "x-id": "GetBucketMetricsConfiguration" }, (input.Id !== undefined && { id: input.Id }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    notification: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketOwnershipControlsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    ownershipControls: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketPolicyCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    policy: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketPolicyStatusCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    policyStatus: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketReplicationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    replication: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketRequestPaymentCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    requestPayment: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketTaggingCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    tagging: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketVersioningCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    versioning: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetBucketWebsiteCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    website: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetObjectCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.SSECustomerKey) && {
                    "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
                    "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
                    "x-amz-server-side-encryption-customer-key-MD5": input.SSECustomerKeyMD5,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {
                    "If-Unmodified-Since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.IfUnmodifiedSince).toString(),
                })), (isSerializableHeaderValue(input.IfModifiedSince) && {
                    "If-Modified-Since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.IfModifiedSince).toString(),
                })), (isSerializableHeaderValue(input.IfNoneMatch) && { "If-None-Match": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfMatch) && { "If-Match": input.IfMatch })), (isSerializableHeaderValue(input.Range) && { Range: input.Range }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "x-id": "GetObject" }, (input.ResponseContentEncoding !== undefined && { "response-content-encoding": input.ResponseContentEncoding })), (input.ResponseCacheControl !== undefined && { "response-cache-control": input.ResponseCacheControl })), (input.ResponseContentLanguage !== undefined && { "response-content-language": input.ResponseContentLanguage })), (input.ResponseContentDisposition !== undefined && {
                    "response-content-disposition": input.ResponseContentDisposition,
                })), (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.VersionId !== undefined && { versionId: input.VersionId })), (input.ResponseExpires !== undefined && {
                    "response-expires": (input.ResponseExpires.toISOString().split(".")[0] + "Z").toString(),
                })), (input.ResponseContentType !== undefined && { "response-content-type": input.ResponseContentType }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetObjectAclCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ acl: "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetObjectLegalHoldCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "legal-hold": "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetObjectLockConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    "object-lock": "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetObjectRetentionCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ retention: "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetObjectTaggingCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ tagging: "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetObjectTorrentCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = {
                    torrent: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlGetPublicAccessBlockCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    publicAccessBlock: "",
                };
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlHeadBucketCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "HEAD",
                        headers: headers,
                        path: resolvedPath,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlHeadObjectCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
                    "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.SSECustomerKey) && {
                    "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
                })), (isSerializableHeaderValue(input.Range) && { Range: input.Range })), (isSerializableHeaderValue(input.IfNoneMatch) && { "If-None-Match": input.IfNoneMatch })), (isSerializableHeaderValue(input.IfUnmodifiedSince) && {
                    "If-Unmodified-Since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.IfUnmodifiedSince).toString(),
                })), (isSerializableHeaderValue(input.IfModifiedSince) && {
                    "If-Modified-Since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.IfModifiedSince).toString(),
                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
                    "x-amz-server-side-encryption-customer-key-MD5": input.SSECustomerKeyMD5,
                })), (isSerializableHeaderValue(input.IfMatch) && { "If-Match": input.IfMatch })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.VersionId !== undefined && { versionId: input.VersionId }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "HEAD",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ analytics: "", "x-id": "ListBucketAnalyticsConfigurations" }, (input.ContinuationToken !== undefined && { "continuation-token": input.ContinuationToken }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ inventory: "", "x-id": "ListBucketInventoryConfigurations" }, (input.ContinuationToken !== undefined && { "continuation-token": input.ContinuationToken }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ metrics: "", "x-id": "ListBucketMetricsConfigurations" }, (input.ContinuationToken !== undefined && { "continuation-token": input.ContinuationToken }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlListBucketsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = {
                    "Content-Type": "",
                };
                resolvedPath = "/";
                body = "";
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlListMultipartUploadsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ uploads: "" }, (input.UploadIdMarker !== undefined && { "upload-id-marker": input.UploadIdMarker })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.MaxUploads !== undefined && { "max-uploads": input.MaxUploads.toString() })), (input.KeyMarker !== undefined && { "key-marker": input.KeyMarker })), (input.EncodingType !== undefined && { "encoding-type": input.EncodingType }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlListObjectsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, (input.MaxKeys !== undefined && { "max-keys": input.MaxKeys.toString() })), (input.Marker !== undefined && { marker: input.Marker })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.EncodingType !== undefined && { "encoding-type": input.EncodingType }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlListObjectsV2Command = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "list-type": "2" }, (input.ContinuationToken !== undefined && { "continuation-token": input.ContinuationToken })), (input.FetchOwner !== undefined && { "fetch-owner": input.FetchOwner.toString() })), (input.EncodingType !== undefined && { "encoding-type": input.EncodingType })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.StartAfter !== undefined && { "start-after": input.StartAfter })), (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.MaxKeys !== undefined && { "max-keys": input.MaxKeys.toString() }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlListObjectVersionsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ versions: "" }, (input.KeyMarker !== undefined && { "key-marker": input.KeyMarker })), (input.MaxKeys !== undefined && { "max-keys": input.MaxKeys.toString() })), (input.Delimiter !== undefined && { delimiter: input.Delimiter })), (input.VersionIdMarker !== undefined && { "version-id-marker": input.VersionIdMarker })), (input.Prefix !== undefined && { prefix: input.Prefix })), (input.EncodingType !== undefined && { "encoding-type": input.EncodingType }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlListPartsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "x-id": "ListParts" }, (input.UploadId !== undefined && { uploadId: input.UploadId })), (input.MaxParts !== undefined && { "max-parts": input.MaxParts.toString() })), (input.PartNumberMarker !== undefined && { "part-number-marker": input.PartNumberMarker.toString() }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "GET",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    accelerate: "",
                };
                if (input.AccelerateConfiguration !== undefined) {
                    contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketAclCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.GrantFullControl) && { "x-amz-grant-full-control": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantReadACP) && { "x-amz-grant-read-acp": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantWrite) && { "x-amz-grant-write": input.GrantWrite })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.ACL) && { "x-amz-acl": input.ACL })), (isSerializableHeaderValue(input.GrantWriteACP) && { "x-amz-grant-write-acp": input.GrantWriteACP })), (isSerializableHeaderValue(input.GrantRead) && { "x-amz-grant-read": input.GrantRead })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    acl: "",
                };
                if (input.AccessControlPolicy !== undefined) {
                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ analytics: "" }, (input.Id !== undefined && { id: input.Id }));
                if (input.AnalyticsConfiguration !== undefined) {
                    contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketCorsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    cors: "",
                };
                if (input.CORSConfiguration !== undefined) {
                    contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketEncryptionCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    encryption: "",
                };
                if (input.ServerSideEncryptionConfiguration !== undefined) {
                    contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ inventory: "" }, (input.Id !== undefined && { id: input.Id }));
                if (input.InventoryConfiguration !== undefined) {
                    contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    lifecycle: "",
                };
                if (input.LifecycleConfiguration !== undefined) {
                    contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketLoggingCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    logging: "",
                };
                if (input.BucketLoggingStatus !== undefined) {
                    contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ metrics: "" }, (input.Id !== undefined && { id: input.Id }));
                if (input.MetricsConfiguration !== undefined) {
                    contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    notification: "",
                };
                if (input.NotificationConfiguration !== undefined) {
                    contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketOwnershipControlsCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    ownershipControls: "",
                };
                if (input.OwnershipControls !== undefined) {
                    contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketPolicyCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, bodyNode, node, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {
                    "x-amz-confirm-remove-self-bucket-access": input.ConfirmRemoveSelfBucketAccess.toString(),
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    policy: "",
                };
                body = '<?xml version="1.0" encoding="UTF-8"?>';
                bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("PutBucketPolicyRequest");
                bodyNode.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                if (input.Policy !== undefined) {
                    node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Policy").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Policy)).withName("Policy");
                    bodyNode.addChildNode(node);
                }
                body += bodyNode.toString();
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketReplicationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.Token) && { "x-amz-bucket-object-lock-token": input.Token })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    replication: "",
                };
                if (input.ReplicationConfiguration !== undefined) {
                    contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketRequestPaymentCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    requestPayment: "",
                };
                if (input.RequestPaymentConfiguration !== undefined) {
                    contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketTaggingCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    tagging: "",
                };
                if (input.Tagging !== undefined) {
                    contents = serializeAws_restXmlTagging(input.Tagging, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketVersioningCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.MFA) && { "x-amz-mfa": input.MFA })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    versioning: "",
                };
                if (input.VersioningConfiguration !== undefined) {
                    contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutBucketWebsiteCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    website: "",
                };
                if (input.WebsiteConfiguration !== undefined) {
                    contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutObjectCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/octet-stream" }, (isSerializableHeaderValue(input.GrantFullControl) && { "x-amz-grant-full-control": input.GrantFullControl })), (isSerializableHeaderValue(input.ContentEncoding) && { "Content-Encoding": input.ContentEncoding })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.GrantReadACP) && { "x-amz-grant-read-acp": input.GrantReadACP })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
                    "x-amz-server-side-encryption-customer-key-MD5": input.SSECustomerKeyMD5,
                })), (isSerializableHeaderValue(input.CacheControl) && { "Cache-Control": input.CacheControl })), (isSerializableHeaderValue(input.WebsiteRedirectLocation) && {
                    "x-amz-website-redirect-location": input.WebsiteRedirectLocation,
                })), (isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {
                    "x-amz-object-lock-legal-hold": input.ObjectLockLegalHoldStatus,
                })), (isSerializableHeaderValue(input.GrantWriteACP) && { "x-amz-grant-write-acp": input.GrantWriteACP })), (isSerializableHeaderValue(input.ContentLength) && { "Content-Length": input.ContentLength.toString() })), (isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {
                    "x-amz-object-lock-retain-until-date": (input.ObjectLockRetainUntilDate.toISOString().split(".")[0] + "Z").toString(),
                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
                    "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.ContentDisposition) && { "Content-Disposition": input.ContentDisposition })), (isSerializableHeaderValue(input.SSECustomerKey) && {
                    "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
                })), (isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {
                    "x-amz-server-side-encryption-context": input.SSEKMSEncryptionContext,
                })), (isSerializableHeaderValue(input.Tagging) && { "x-amz-tagging": input.Tagging })), (isSerializableHeaderValue(input.Expires) && { Expires: (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.Expires).toString() })), (isSerializableHeaderValue(input.StorageClass) && { "x-amz-storage-class": input.StorageClass })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.ServerSideEncryption) && {
                    "x-amz-server-side-encryption": input.ServerSideEncryption,
                })), (isSerializableHeaderValue(input.ObjectLockMode) && { "x-amz-object-lock-mode": input.ObjectLockMode })), (isSerializableHeaderValue(input.SSEKMSKeyId) && {
                    "x-amz-server-side-encryption-aws-kms-key-id": input.SSEKMSKeyId,
                })), (isSerializableHeaderValue(input.ContentLanguage) && { "Content-Language": input.ContentLanguage })), (isSerializableHeaderValue(input.GrantRead) && { "x-amz-grant-read": input.GrantRead })), (isSerializableHeaderValue(input.ACL) && { "x-amz-acl": input.ACL })), (isSerializableHeaderValue(input.ContentType) && { "Content-Type": input.ContentType })), (input.Metadata !== undefined &&
                    Object.keys(input.Metadata).reduce(function (acc, suffix) {
                        acc["x-amz-meta-" + suffix] = input.Metadata[suffix];
                        return acc;
                    }, {})));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = {
                    "x-id": "PutObject",
                };
                if (input.Body !== undefined) {
                    contents = input.Body;
                    body = contents;
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutObjectAclCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ACL) && { "x-amz-acl": input.ACL })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.GrantFullControl) && { "x-amz-grant-full-control": input.GrantFullControl })), (isSerializableHeaderValue(input.GrantReadACP) && { "x-amz-grant-read-acp": input.GrantReadACP })), (isSerializableHeaderValue(input.GrantRead) && { "x-amz-grant-read": input.GrantRead })), (isSerializableHeaderValue(input.GrantWrite) && { "x-amz-grant-write": input.GrantWrite })), (isSerializableHeaderValue(input.GrantWriteACP) && { "x-amz-grant-write-acp": input.GrantWriteACP }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ acl: "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                if (input.AccessControlPolicy !== undefined) {
                    contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutObjectLegalHoldCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "legal-hold": "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                if (input.LegalHold !== undefined) {
                    contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutObjectLockConfigurationCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.Token) && { "x-amz-bucket-object-lock-token": input.Token })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    "object-lock": "",
                };
                if (input.ObjectLockConfiguration !== undefined) {
                    contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutObjectRetentionCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.BypassGovernanceRetention) && {
                    "x-amz-bypass-governance-retention": input.BypassGovernanceRetention.toString(),
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ retention: "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                if (input.Retention !== undefined) {
                    contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutObjectTaggingCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ tagging: "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                if (input.Tagging !== undefined) {
                    contents = serializeAws_restXmlTagging(input.Tagging, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlPutPublicAccessBlockCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 }));
                resolvedPath = "/{Bucket}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    publicAccessBlock: "",
                };
                if (input.PublicAccessBlockConfiguration !== undefined) {
                    contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlRestoreObjectCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ restore: "" }, (input.VersionId !== undefined && { versionId: input.VersionId }));
                if (input.RestoreRequest !== undefined) {
                    contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);
                    body = '<?xml version="1.0" encoding="UTF-8"?>';
                    contents.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                    body += contents.toString();
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "POST",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlSelectObjectContentCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/xml" }, (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
                    "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.SSECustomerKey) && {
                    "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
                    "x-amz-server-side-encryption-customer-key-MD5": input.SSECustomerKeyMD5,
                }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                query = {
                    select: "",
                    "select-type": "2",
                };
                body = '<?xml version="1.0" encoding="UTF-8"?>';
                bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SelectObjectContentRequest");
                bodyNode.addAttribute("xmlns", "http://s3.amazonaws.com/doc/2006-03-01/");
                if (input.Expression !== undefined) {
                    node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Expression").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Expression)).withName("Expression");
                    bodyNode.addChildNode(node);
                }
                if (input.ExpressionType !== undefined) {
                    node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExpressionType")
                        .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ExpressionType))
                        .withName("ExpressionType");
                    bodyNode.addChildNode(node);
                }
                if (input.InputSerialization !== undefined) {
                    node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName("InputSerialization");
                    bodyNode.addChildNode(node);
                }
                if (input.OutputSerialization !== undefined) {
                    node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName("OutputSerialization");
                    bodyNode.addChildNode(node);
                }
                if (input.RequestProgress !== undefined) {
                    node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName("RequestProgress");
                    bodyNode.addChildNode(node);
                }
                if (input.ScanRange !== undefined) {
                    node = serializeAws_restXmlScanRange(input.ScanRange, context).withName("ScanRange");
                    bodyNode.addChildNode(node);
                }
                body += bodyNode.toString();
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "POST",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlUploadPartCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "application/octet-stream" }, (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.ContentLength) && { "Content-Length": input.ContentLength.toString() })), (isSerializableHeaderValue(input.SSECustomerKey) && {
                    "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
                    "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
                    "x-amz-server-side-encryption-customer-key-MD5": input.SSECustomerKeyMD5,
                })), (isSerializableHeaderValue(input.ContentMD5) && { "Content-MD5": input.ContentMD5 }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "x-id": "UploadPart" }, (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() })), (input.UploadId !== undefined && { uploadId: input.UploadId }));
                if (input.Body !== undefined) {
                    contents = input.Body;
                    body = contents;
                }
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var serializeAws_restXmlUploadPartCopyCommand = function (input, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                headers = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "Content-Type": "" }, (isSerializableHeaderValue(input.RequestPayer) && { "x-amz-request-payer": input.RequestPayer })), (isSerializableHeaderValue(input.CopySourceRange) && { "x-amz-copy-source-range": input.CopySourceRange })), (isSerializableHeaderValue(input.SSECustomerKey) && {
                    "x-amz-server-side-encryption-customer-key": input.SSECustomerKey,
                })), (isSerializableHeaderValue(input.SSECustomerAlgorithm) && {
                    "x-amz-server-side-encryption-customer-algorithm": input.SSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.CopySourceIfMatch) && {
                    "x-amz-copy-source-if-match": input.CopySourceIfMatch,
                })), (isSerializableHeaderValue(input.ExpectedBucketOwner) && {
                    "x-amz-expected-bucket-owner": input.ExpectedBucketOwner,
                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {
                    "x-amz-copy-source-server-side-encryption-customer-key": input.CopySourceSSECustomerKey,
                })), (isSerializableHeaderValue(input.CopySource) && { "x-amz-copy-source": input.CopySource })), (isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {
                    "x-amz-copy-source-if-modified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.CopySourceIfModifiedSince).toString(),
                })), (isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {
                    "x-amz-copy-source-server-side-encryption-customer-algorithm": input.CopySourceSSECustomerAlgorithm,
                })), (isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {
                    "x-amz-copy-source-if-unmodified-since": (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.dateToUtcString)(input.CopySourceIfUnmodifiedSince).toString(),
                })), (isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {
                    "x-amz-source-expected-bucket-owner": input.ExpectedSourceBucketOwner,
                })), (isSerializableHeaderValue(input.SSECustomerKeyMD5) && {
                    "x-amz-server-side-encryption-customer-key-MD5": input.SSECustomerKeyMD5,
                })), (isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {
                    "x-amz-copy-source-if-none-match": input.CopySourceIfNoneMatch,
                })), (isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {
                    "x-amz-copy-source-server-side-encryption-customer-key-MD5": input.CopySourceSSECustomerKeyMD5,
                }));
                resolvedPath = "/{Bucket}/{Key+}";
                if (input.Bucket !== undefined) {
                    labelValue = input.Bucket;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Bucket.");
                    }
                    resolvedPath = resolvedPath.replace("{Bucket}", (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(labelValue));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Bucket.");
                }
                if (input.Key !== undefined) {
                    labelValue = input.Key;
                    if (labelValue.length <= 0) {
                        throw new Error("Empty value provided for input HTTP label: Key.");
                    }
                    resolvedPath = resolvedPath.replace("{Key+}", labelValue
                        .split("/")
                        .map(function (segment) { return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.extendedEncodeURIComponent)(segment); })
                        .join("/"));
                }
                else {
                    throw new Error("No value provided for input HTTP label: Key.");
                }
                query = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({ "x-id": "UploadPartCopy" }, (input.UploadId !== undefined && { uploadId: input.UploadId })), (input.PartNumber !== undefined && { partNumber: input.PartNumber.toString() }));
                return [4 /*yield*/, context.endpoint()];
            case 1:
                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? "https" : _b, port = _a.port;
                return [2 /*return*/, new _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest({
                        protocol: protocol,
                        hostname: hostname,
                        port: port,
                        method: "PUT",
                        headers: headers,
                        path: resolvedPath,
                        query: query,
                        body: body,
                    })];
        }
    });
}); };
var deserializeAws_restXmlAbortMultipartUploadCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    RequestCharged: undefined,
                };
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlAbortMultipartUploadCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "NoSuchUpload": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#NoSuchUpload": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlCompleteMultipartUploadCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Bucket: undefined,
                    ETag: undefined,
                    Expiration: undefined,
                    Key: undefined,
                    Location: undefined,
                    RequestCharged: undefined,
                    SSEKMSKeyId: undefined,
                    ServerSideEncryption: undefined,
                    VersionId: undefined,
                };
                if (output.headers["x-amz-expiration"] !== undefined) {
                    contents.Expiration = output.headers["x-amz-expiration"];
                }
                if (output.headers["x-amz-server-side-encryption"] !== undefined) {
                    contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
                }
                if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
                    contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
                }
                if (output.headers["x-amz-version-id"] !== undefined) {
                    contents.VersionId = output.headers["x-amz-version-id"];
                }
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["Bucket"] !== undefined) {
                    contents.Bucket = data["Bucket"];
                }
                if (data["ETag"] !== undefined) {
                    contents.ETag = data["ETag"];
                }
                if (data["Key"] !== undefined) {
                    contents.Key = data["Key"];
                }
                if (data["Location"] !== undefined) {
                    contents.Location = data["Location"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlCompleteMultipartUploadCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlCopyObjectCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlCopyObjectCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    CopyObjectResult: undefined,
                    CopySourceVersionId: undefined,
                    Expiration: undefined,
                    RequestCharged: undefined,
                    SSECustomerAlgorithm: undefined,
                    SSECustomerKeyMD5: undefined,
                    SSEKMSEncryptionContext: undefined,
                    SSEKMSKeyId: undefined,
                    ServerSideEncryption: undefined,
                    VersionId: undefined,
                };
                if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
                    contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
                }
                if (output.headers["x-amz-expiration"] !== undefined) {
                    contents.Expiration = output.headers["x-amz-expiration"];
                }
                if (output.headers["x-amz-version-id"] !== undefined) {
                    contents.VersionId = output.headers["x-amz-version-id"];
                }
                if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
                    contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
                }
                if (output.headers["x-amz-copy-source-version-id"] !== undefined) {
                    contents.CopySourceVersionId = output.headers["x-amz-copy-source-version-id"];
                }
                if (output.headers["x-amz-server-side-encryption-context"] !== undefined) {
                    contents.SSEKMSEncryptionContext = output.headers["x-amz-server-side-encryption-context"];
                }
                if (output.headers["x-amz-server-side-encryption"] !== undefined) {
                    contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
                }
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
                    contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
                }
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlCopyObjectCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ObjectNotInActiveTierError": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#ObjectNotInActiveTierError": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlCreateBucketCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlCreateBucketCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Location: undefined,
                };
                if (output.headers["location"] !== undefined) {
                    contents.Location = output.headers["location"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlCreateBucketCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;
    var _e;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_f) {
        switch (_f.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _e = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "BucketAlreadyExists": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#BucketAlreadyExists": return [3 /*break*/, 2];
                    case "BucketAlreadyOwnedByYou": return [3 /*break*/, 4];
                    case "com.amazonaws.s3#BucketAlreadyOwnedByYou": return [3 /*break*/, 4];
                }
                return [3 /*break*/, 6];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 7];
            case 4:
                _d = [{}];
                return [4 /*yield*/, deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];
            case 5:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 7];
            case 6:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _f.label = 7;
            case 7:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlCreateMultipartUploadCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    AbortDate: undefined,
                    AbortRuleId: undefined,
                    Bucket: undefined,
                    Key: undefined,
                    RequestCharged: undefined,
                    SSECustomerAlgorithm: undefined,
                    SSECustomerKeyMD5: undefined,
                    SSEKMSEncryptionContext: undefined,
                    SSEKMSKeyId: undefined,
                    ServerSideEncryption: undefined,
                    UploadId: undefined,
                };
                if (output.headers["x-amz-server-side-encryption-context"] !== undefined) {
                    contents.SSEKMSEncryptionContext = output.headers["x-amz-server-side-encryption-context"];
                }
                if (output.headers["x-amz-server-side-encryption"] !== undefined) {
                    contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
                }
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                if (output.headers["x-amz-abort-date"] !== undefined) {
                    contents.AbortDate = new Date(output.headers["x-amz-abort-date"]);
                }
                if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
                    contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
                }
                if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
                    contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
                }
                if (output.headers["x-amz-abort-rule-id"] !== undefined) {
                    contents.AbortRuleId = output.headers["x-amz-abort-rule-id"];
                }
                if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
                    contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
                }
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["Bucket"] !== undefined) {
                    contents.Bucket = data["Bucket"];
                }
                if (data["Key"] !== undefined) {
                    contents.Key = data["Key"];
                }
                if (data["UploadId"] !== undefined) {
                    contents.UploadId = data["UploadId"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlCreateMultipartUploadCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketCorsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketCorsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketEncryptionCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketEncryptionCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketLifecycleCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketLifecycleCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketPolicyCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketPolicyCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketReplicationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketReplicationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketTaggingCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketTaggingCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketWebsiteCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteBucketWebsiteCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteObjectCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteObjectCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    DeleteMarker: undefined,
                    RequestCharged: undefined,
                    VersionId: undefined,
                };
                if (output.headers["x-amz-delete-marker"] !== undefined) {
                    contents.DeleteMarker = output.headers["x-amz-delete-marker"] === "true";
                }
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                if (output.headers["x-amz-version-id"] !== undefined) {
                    contents.VersionId = output.headers["x-amz-version-id"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteObjectCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteObjectsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteObjectsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Deleted: undefined,
                    Errors: undefined,
                    RequestCharged: undefined,
                };
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.Deleted === "") {
                    contents.Deleted = [];
                }
                if (data["Deleted"] !== undefined) {
                    contents.Deleted = deserializeAws_restXmlDeletedObjects((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Deleted"]), context);
                }
                if (data.Error === "") {
                    contents.Errors = [];
                }
                if (data["Error"] !== undefined) {
                    contents.Errors = deserializeAws_restXmlErrors((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Error"]), context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteObjectsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeleteObjectTaggingCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    VersionId: undefined,
                };
                if (output.headers["x-amz-version-id"] !== undefined) {
                    contents.VersionId = output.headers["x-amz-version-id"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeleteObjectTaggingCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlDeletePublicAccessBlockCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 204 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlDeletePublicAccessBlockCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Status: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["Status"] !== undefined) {
                    contents.Status = data["Status"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketAclCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketAclCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Grants: undefined,
                    Owner: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.AccessControlList === "") {
                    contents.Grants = [];
                }
                if (data["AccessControlList"] !== undefined && data["AccessControlList"]["Grant"] !== undefined) {
                    contents.Grants = deserializeAws_restXmlGrants((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["AccessControlList"]["Grant"]), context);
                }
                if (data["Owner"] !== undefined) {
                    contents.Owner = deserializeAws_restXmlOwner(data["Owner"], context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketAclCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    AnalyticsConfiguration: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketCorsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketCorsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    CORSRules: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.CORSRule === "") {
                    contents.CORSRules = [];
                }
                if (data["CORSRule"] !== undefined) {
                    contents.CORSRules = deserializeAws_restXmlCORSRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CORSRule"]), context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketCorsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketEncryptionCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    ServerSideEncryptionConfiguration: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketEncryptionCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    InventoryConfiguration: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Rules: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.Rule === "") {
                    contents.Rules = [];
                }
                if (data["Rule"] !== undefined) {
                    contents.Rules = deserializeAws_restXmlLifecycleRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Rule"]), context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketLocationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketLocationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    LocationConstraint: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["LocationConstraint"] !== undefined) {
                    contents.LocationConstraint = data["LocationConstraint"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketLocationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketLoggingCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    LoggingEnabled: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["LoggingEnabled"] !== undefined) {
                    contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data["LoggingEnabled"], context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketLoggingCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    MetricsConfiguration: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    LambdaFunctionConfigurations: undefined,
                    QueueConfigurations: undefined,
                    TopicConfigurations: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.CloudFunctionConfiguration === "") {
                    contents.LambdaFunctionConfigurations = [];
                }
                if (data["CloudFunctionConfiguration"] !== undefined) {
                    contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CloudFunctionConfiguration"]), context);
                }
                if (data.QueueConfiguration === "") {
                    contents.QueueConfigurations = [];
                }
                if (data["QueueConfiguration"] !== undefined) {
                    contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["QueueConfiguration"]), context);
                }
                if (data.TopicConfiguration === "") {
                    contents.TopicConfigurations = [];
                }
                if (data["TopicConfiguration"] !== undefined) {
                    contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["TopicConfiguration"]), context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    OwnershipControls: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketPolicyCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Policy: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["Policy"] !== undefined) {
                    contents.Policy = data["Policy"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketPolicyCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketPolicyStatusCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    PolicyStatus: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketPolicyStatusCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketReplicationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    ReplicationConfiguration: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketReplicationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketRequestPaymentCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Payer: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["Payer"] !== undefined) {
                    contents.Payer = data["Payer"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketRequestPaymentCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketTaggingCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    TagSet: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.TagSet === "") {
                    contents.TagSet = [];
                }
                if (data["TagSet"] !== undefined && data["TagSet"]["Tag"] !== undefined) {
                    contents.TagSet = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["TagSet"]["Tag"]), context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketTaggingCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketVersioningCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    MFADelete: undefined,
                    Status: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["MfaDelete"] !== undefined) {
                    contents.MFADelete = data["MfaDelete"];
                }
                if (data["Status"] !== undefined) {
                    contents.Status = data["Status"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketVersioningCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetBucketWebsiteCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    ErrorDocument: undefined,
                    IndexDocument: undefined,
                    RedirectAllRequestsTo: undefined,
                    RoutingRules: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["ErrorDocument"] !== undefined) {
                    contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data["ErrorDocument"], context);
                }
                if (data["IndexDocument"] !== undefined) {
                    contents.IndexDocument = deserializeAws_restXmlIndexDocument(data["IndexDocument"], context);
                }
                if (data["RedirectAllRequestsTo"] !== undefined) {
                    contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data["RedirectAllRequestsTo"], context);
                }
                if (data.RoutingRules === "") {
                    contents.RoutingRules = [];
                }
                if (data["RoutingRules"] !== undefined && data["RoutingRules"]["RoutingRule"] !== undefined) {
                    contents.RoutingRules = deserializeAws_restXmlRoutingRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["RoutingRules"]["RoutingRule"]), context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetBucketWebsiteCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetObjectCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2 /*return*/, deserializeAws_restXmlGetObjectCommandError(output, context)];
        }
        contents = {
            $metadata: deserializeMetadata(output),
            AcceptRanges: undefined,
            Body: undefined,
            CacheControl: undefined,
            ContentDisposition: undefined,
            ContentEncoding: undefined,
            ContentLanguage: undefined,
            ContentLength: undefined,
            ContentRange: undefined,
            ContentType: undefined,
            DeleteMarker: undefined,
            ETag: undefined,
            Expiration: undefined,
            Expires: undefined,
            LastModified: undefined,
            Metadata: undefined,
            MissingMeta: undefined,
            ObjectLockLegalHoldStatus: undefined,
            ObjectLockMode: undefined,
            ObjectLockRetainUntilDate: undefined,
            PartsCount: undefined,
            ReplicationStatus: undefined,
            RequestCharged: undefined,
            Restore: undefined,
            SSECustomerAlgorithm: undefined,
            SSECustomerKeyMD5: undefined,
            SSEKMSKeyId: undefined,
            ServerSideEncryption: undefined,
            StorageClass: undefined,
            TagCount: undefined,
            VersionId: undefined,
            WebsiteRedirectLocation: undefined,
        };
        if (output.headers["x-amz-object-lock-mode"] !== undefined) {
            contents.ObjectLockMode = output.headers["x-amz-object-lock-mode"];
        }
        if (output.headers["content-language"] !== undefined) {
            contents.ContentLanguage = output.headers["content-language"];
        }
        if (output.headers["content-disposition"] !== undefined) {
            contents.ContentDisposition = output.headers["content-disposition"];
        }
        if (output.headers["cache-control"] !== undefined) {
            contents.CacheControl = output.headers["cache-control"];
        }
        if (output.headers["content-type"] !== undefined) {
            contents.ContentType = output.headers["content-type"];
        }
        if (output.headers["content-range"] !== undefined) {
            contents.ContentRange = output.headers["content-range"];
        }
        if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
            contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
        }
        if (output.headers["content-length"] !== undefined) {
            contents.ContentLength = parseInt(output.headers["content-length"], 10);
        }
        if (output.headers["x-amz-object-lock-retain-until-date"] !== undefined) {
            contents.ObjectLockRetainUntilDate = new Date(output.headers["x-amz-object-lock-retain-until-date"]);
        }
        if (output.headers["x-amz-object-lock-legal-hold"] !== undefined) {
            contents.ObjectLockLegalHoldStatus = output.headers["x-amz-object-lock-legal-hold"];
        }
        if (output.headers["x-amz-delete-marker"] !== undefined) {
            contents.DeleteMarker = output.headers["x-amz-delete-marker"] === "true";
        }
        if (output.headers["x-amz-storage-class"] !== undefined) {
            contents.StorageClass = output.headers["x-amz-storage-class"];
        }
        if (output.headers["content-encoding"] !== undefined) {
            contents.ContentEncoding = output.headers["content-encoding"];
        }
        if (output.headers["x-amz-restore"] !== undefined) {
            contents.Restore = output.headers["x-amz-restore"];
        }
        if (output.headers["x-amz-website-redirect-location"] !== undefined) {
            contents.WebsiteRedirectLocation = output.headers["x-amz-website-redirect-location"];
        }
        if (output.headers["x-amz-server-side-encryption"] !== undefined) {
            contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
        }
        if (output.headers["x-amz-mp-parts-count"] !== undefined) {
            contents.PartsCount = parseInt(output.headers["x-amz-mp-parts-count"], 10);
        }
        if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
            contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
        }
        if (output.headers["accept-ranges"] !== undefined) {
            contents.AcceptRanges = output.headers["accept-ranges"];
        }
        if (output.headers["x-amz-version-id"] !== undefined) {
            contents.VersionId = output.headers["x-amz-version-id"];
        }
        if (output.headers["expires"] !== undefined) {
            contents.Expires = new Date(output.headers["expires"]);
        }
        if (output.headers["x-amz-expiration"] !== undefined) {
            contents.Expiration = output.headers["x-amz-expiration"];
        }
        if (output.headers["x-amz-missing-meta"] !== undefined) {
            contents.MissingMeta = parseInt(output.headers["x-amz-missing-meta"], 10);
        }
        if (output.headers["x-amz-replication-status"] !== undefined) {
            contents.ReplicationStatus = output.headers["x-amz-replication-status"];
        }
        if (output.headers["x-amz-tagging-count"] !== undefined) {
            contents.TagCount = parseInt(output.headers["x-amz-tagging-count"], 10);
        }
        if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
            contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
        }
        if (output.headers["last-modified"] !== undefined) {
            contents.LastModified = new Date(output.headers["last-modified"]);
        }
        if (output.headers["etag"] !== undefined) {
            contents.ETag = output.headers["etag"];
        }
        if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
        }
        Object.keys(output.headers).forEach(function (header) {
            if (contents.Metadata === undefined) {
                contents.Metadata = {};
            }
            if (header.startsWith("x-amz-meta-")) {
                contents.Metadata[header.substring(11)] = output.headers[header];
            }
        });
        data = output.body;
        contents.Body = data;
        return [2 /*return*/, Promise.resolve(contents)];
    });
}); };
var deserializeAws_restXmlGetObjectCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "NoSuchKey": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#NoSuchKey": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetObjectAclCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetObjectAclCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Grants: undefined,
                    Owner: undefined,
                    RequestCharged: undefined,
                };
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.AccessControlList === "") {
                    contents.Grants = [];
                }
                if (data["AccessControlList"] !== undefined && data["AccessControlList"]["Grant"] !== undefined) {
                    contents.Grants = deserializeAws_restXmlGrants((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["AccessControlList"]["Grant"]), context);
                }
                if (data["Owner"] !== undefined) {
                    contents.Owner = deserializeAws_restXmlOwner(data["Owner"], context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetObjectAclCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "NoSuchKey": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#NoSuchKey": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetObjectLegalHoldCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    LegalHold: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetObjectLegalHoldCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetObjectLockConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    ObjectLockConfiguration: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetObjectLockConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetObjectRetentionCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Retention: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetObjectRetentionCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetObjectTaggingCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    TagSet: undefined,
                    VersionId: undefined,
                };
                if (output.headers["x-amz-version-id"] !== undefined) {
                    contents.VersionId = output.headers["x-amz-version-id"];
                }
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.TagSet === "") {
                    contents.TagSet = [];
                }
                if (data["TagSet"] !== undefined && data["TagSet"]["Tag"] !== undefined) {
                    contents.TagSet = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["TagSet"]["Tag"]), context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetObjectTaggingCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetObjectTorrentCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2 /*return*/, deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];
        }
        contents = {
            $metadata: deserializeMetadata(output),
            Body: undefined,
            RequestCharged: undefined,
        };
        if (output.headers["x-amz-request-charged"] !== undefined) {
            contents.RequestCharged = output.headers["x-amz-request-charged"];
        }
        data = output.body;
        contents.Body = data;
        return [2 /*return*/, Promise.resolve(contents)];
    });
}); };
var deserializeAws_restXmlGetObjectTorrentCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlGetPublicAccessBlockCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    PublicAccessBlockConfiguration: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlGetPublicAccessBlockCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlHeadBucketCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlHeadBucketCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlHeadBucketCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "NoSuchBucket": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#NoSuchBucket": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlHeadObjectCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlHeadObjectCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    AcceptRanges: undefined,
                    CacheControl: undefined,
                    ContentDisposition: undefined,
                    ContentEncoding: undefined,
                    ContentLanguage: undefined,
                    ContentLength: undefined,
                    ContentType: undefined,
                    DeleteMarker: undefined,
                    ETag: undefined,
                    Expiration: undefined,
                    Expires: undefined,
                    LastModified: undefined,
                    Metadata: undefined,
                    MissingMeta: undefined,
                    ObjectLockLegalHoldStatus: undefined,
                    ObjectLockMode: undefined,
                    ObjectLockRetainUntilDate: undefined,
                    PartsCount: undefined,
                    ReplicationStatus: undefined,
                    RequestCharged: undefined,
                    Restore: undefined,
                    SSECustomerAlgorithm: undefined,
                    SSECustomerKeyMD5: undefined,
                    SSEKMSKeyId: undefined,
                    ServerSideEncryption: undefined,
                    StorageClass: undefined,
                    VersionId: undefined,
                    WebsiteRedirectLocation: undefined,
                };
                if (output.headers["cache-control"] !== undefined) {
                    contents.CacheControl = output.headers["cache-control"];
                }
                if (output.headers["content-length"] !== undefined) {
                    contents.ContentLength = parseInt(output.headers["content-length"], 10);
                }
                if (output.headers["x-amz-object-lock-retain-until-date"] !== undefined) {
                    contents.ObjectLockRetainUntilDate = new Date(output.headers["x-amz-object-lock-retain-until-date"]);
                }
                if (output.headers["content-type"] !== undefined) {
                    contents.ContentType = output.headers["content-type"];
                }
                if (output.headers["etag"] !== undefined) {
                    contents.ETag = output.headers["etag"];
                }
                if (output.headers["content-disposition"] !== undefined) {
                    contents.ContentDisposition = output.headers["content-disposition"];
                }
                if (output.headers["content-language"] !== undefined) {
                    contents.ContentLanguage = output.headers["content-language"];
                }
                if (output.headers["x-amz-expiration"] !== undefined) {
                    contents.Expiration = output.headers["x-amz-expiration"];
                }
                if (output.headers["expires"] !== undefined) {
                    contents.Expires = new Date(output.headers["expires"]);
                }
                if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
                    contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
                }
                if (output.headers["x-amz-replication-status"] !== undefined) {
                    contents.ReplicationStatus = output.headers["x-amz-replication-status"];
                }
                if (output.headers["x-amz-object-lock-legal-hold"] !== undefined) {
                    contents.ObjectLockLegalHoldStatus = output.headers["x-amz-object-lock-legal-hold"];
                }
                if (output.headers["x-amz-website-redirect-location"] !== undefined) {
                    contents.WebsiteRedirectLocation = output.headers["x-amz-website-redirect-location"];
                }
                if (output.headers["x-amz-server-side-encryption"] !== undefined) {
                    contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
                }
                if (output.headers["x-amz-version-id"] !== undefined) {
                    contents.VersionId = output.headers["x-amz-version-id"];
                }
                if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
                    contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
                }
                if (output.headers["x-amz-mp-parts-count"] !== undefined) {
                    contents.PartsCount = parseInt(output.headers["x-amz-mp-parts-count"], 10);
                }
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                if (output.headers["last-modified"] !== undefined) {
                    contents.LastModified = new Date(output.headers["last-modified"]);
                }
                if (output.headers["x-amz-missing-meta"] !== undefined) {
                    contents.MissingMeta = parseInt(output.headers["x-amz-missing-meta"], 10);
                }
                if (output.headers["x-amz-restore"] !== undefined) {
                    contents.Restore = output.headers["x-amz-restore"];
                }
                if (output.headers["content-encoding"] !== undefined) {
                    contents.ContentEncoding = output.headers["content-encoding"];
                }
                if (output.headers["x-amz-storage-class"] !== undefined) {
                    contents.StorageClass = output.headers["x-amz-storage-class"];
                }
                if (output.headers["x-amz-delete-marker"] !== undefined) {
                    contents.DeleteMarker = output.headers["x-amz-delete-marker"] === "true";
                }
                if (output.headers["x-amz-object-lock-mode"] !== undefined) {
                    contents.ObjectLockMode = output.headers["x-amz-object-lock-mode"];
                }
                if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
                    contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
                }
                if (output.headers["accept-ranges"] !== undefined) {
                    contents.AcceptRanges = output.headers["accept-ranges"];
                }
                Object.keys(output.headers).forEach(function (header) {
                    if (contents.Metadata === undefined) {
                        contents.Metadata = {};
                    }
                    if (header.startsWith("x-amz-meta-")) {
                        contents.Metadata[header.substring(11)] = output.headers[header];
                    }
                });
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlHeadObjectCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "NoSuchKey": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#NoSuchKey": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    AnalyticsConfigurationList: undefined,
                    ContinuationToken: undefined,
                    IsTruncated: undefined,
                    NextContinuationToken: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.AnalyticsConfiguration === "") {
                    contents.AnalyticsConfigurationList = [];
                }
                if (data["AnalyticsConfiguration"] !== undefined) {
                    contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["AnalyticsConfiguration"]), context);
                }
                if (data["ContinuationToken"] !== undefined) {
                    contents.ContinuationToken = data["ContinuationToken"];
                }
                if (data["IsTruncated"] !== undefined) {
                    contents.IsTruncated = data["IsTruncated"] == "true";
                }
                if (data["NextContinuationToken"] !== undefined) {
                    contents.NextContinuationToken = data["NextContinuationToken"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    ContinuationToken: undefined,
                    InventoryConfigurationList: undefined,
                    IsTruncated: undefined,
                    NextContinuationToken: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["ContinuationToken"] !== undefined) {
                    contents.ContinuationToken = data["ContinuationToken"];
                }
                if (data.InventoryConfiguration === "") {
                    contents.InventoryConfigurationList = [];
                }
                if (data["InventoryConfiguration"] !== undefined) {
                    contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["InventoryConfiguration"]), context);
                }
                if (data["IsTruncated"] !== undefined) {
                    contents.IsTruncated = data["IsTruncated"] == "true";
                }
                if (data["NextContinuationToken"] !== undefined) {
                    contents.NextContinuationToken = data["NextContinuationToken"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    ContinuationToken: undefined,
                    IsTruncated: undefined,
                    MetricsConfigurationList: undefined,
                    NextContinuationToken: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["ContinuationToken"] !== undefined) {
                    contents.ContinuationToken = data["ContinuationToken"];
                }
                if (data["IsTruncated"] !== undefined) {
                    contents.IsTruncated = data["IsTruncated"] == "true";
                }
                if (data.MetricsConfiguration === "") {
                    contents.MetricsConfigurationList = [];
                }
                if (data["MetricsConfiguration"] !== undefined) {
                    contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["MetricsConfiguration"]), context);
                }
                if (data["NextContinuationToken"] !== undefined) {
                    contents.NextContinuationToken = data["NextContinuationToken"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlListBucketsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlListBucketsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Buckets: undefined,
                    Owner: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.Buckets === "") {
                    contents.Buckets = [];
                }
                if (data["Buckets"] !== undefined && data["Buckets"]["Bucket"] !== undefined) {
                    contents.Buckets = deserializeAws_restXmlBuckets((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Buckets"]["Bucket"]), context);
                }
                if (data["Owner"] !== undefined) {
                    contents.Owner = deserializeAws_restXmlOwner(data["Owner"], context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlListBucketsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlListMultipartUploadsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    Bucket: undefined,
                    CommonPrefixes: undefined,
                    Delimiter: undefined,
                    EncodingType: undefined,
                    IsTruncated: undefined,
                    KeyMarker: undefined,
                    MaxUploads: undefined,
                    NextKeyMarker: undefined,
                    NextUploadIdMarker: undefined,
                    Prefix: undefined,
                    UploadIdMarker: undefined,
                    Uploads: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["Bucket"] !== undefined) {
                    contents.Bucket = data["Bucket"];
                }
                if (data.CommonPrefixes === "") {
                    contents.CommonPrefixes = [];
                }
                if (data["CommonPrefixes"] !== undefined) {
                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CommonPrefixes"]), context);
                }
                if (data["Delimiter"] !== undefined) {
                    contents.Delimiter = data["Delimiter"];
                }
                if (data["EncodingType"] !== undefined) {
                    contents.EncodingType = data["EncodingType"];
                }
                if (data["IsTruncated"] !== undefined) {
                    contents.IsTruncated = data["IsTruncated"] == "true";
                }
                if (data["KeyMarker"] !== undefined) {
                    contents.KeyMarker = data["KeyMarker"];
                }
                if (data["MaxUploads"] !== undefined) {
                    contents.MaxUploads = parseInt(data["MaxUploads"]);
                }
                if (data["NextKeyMarker"] !== undefined) {
                    contents.NextKeyMarker = data["NextKeyMarker"];
                }
                if (data["NextUploadIdMarker"] !== undefined) {
                    contents.NextUploadIdMarker = data["NextUploadIdMarker"];
                }
                if (data["Prefix"] !== undefined) {
                    contents.Prefix = data["Prefix"];
                }
                if (data["UploadIdMarker"] !== undefined) {
                    contents.UploadIdMarker = data["UploadIdMarker"];
                }
                if (data.Upload === "") {
                    contents.Uploads = [];
                }
                if (data["Upload"] !== undefined) {
                    contents.Uploads = deserializeAws_restXmlMultipartUploadList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Upload"]), context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlListMultipartUploadsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlListObjectsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlListObjectsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    CommonPrefixes: undefined,
                    Contents: undefined,
                    Delimiter: undefined,
                    EncodingType: undefined,
                    IsTruncated: undefined,
                    Marker: undefined,
                    MaxKeys: undefined,
                    Name: undefined,
                    NextMarker: undefined,
                    Prefix: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.CommonPrefixes === "") {
                    contents.CommonPrefixes = [];
                }
                if (data["CommonPrefixes"] !== undefined) {
                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CommonPrefixes"]), context);
                }
                if (data.Contents === "") {
                    contents.Contents = [];
                }
                if (data["Contents"] !== undefined) {
                    contents.Contents = deserializeAws_restXmlObjectList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Contents"]), context);
                }
                if (data["Delimiter"] !== undefined) {
                    contents.Delimiter = data["Delimiter"];
                }
                if (data["EncodingType"] !== undefined) {
                    contents.EncodingType = data["EncodingType"];
                }
                if (data["IsTruncated"] !== undefined) {
                    contents.IsTruncated = data["IsTruncated"] == "true";
                }
                if (data["Marker"] !== undefined) {
                    contents.Marker = data["Marker"];
                }
                if (data["MaxKeys"] !== undefined) {
                    contents.MaxKeys = parseInt(data["MaxKeys"]);
                }
                if (data["Name"] !== undefined) {
                    contents.Name = data["Name"];
                }
                if (data["NextMarker"] !== undefined) {
                    contents.NextMarker = data["NextMarker"];
                }
                if (data["Prefix"] !== undefined) {
                    contents.Prefix = data["Prefix"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlListObjectsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "NoSuchBucket": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#NoSuchBucket": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlListObjectsV2Command = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlListObjectsV2CommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    CommonPrefixes: undefined,
                    Contents: undefined,
                    ContinuationToken: undefined,
                    Delimiter: undefined,
                    EncodingType: undefined,
                    IsTruncated: undefined,
                    KeyCount: undefined,
                    MaxKeys: undefined,
                    Name: undefined,
                    NextContinuationToken: undefined,
                    Prefix: undefined,
                    StartAfter: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.CommonPrefixes === "") {
                    contents.CommonPrefixes = [];
                }
                if (data["CommonPrefixes"] !== undefined) {
                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CommonPrefixes"]), context);
                }
                if (data.Contents === "") {
                    contents.Contents = [];
                }
                if (data["Contents"] !== undefined) {
                    contents.Contents = deserializeAws_restXmlObjectList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Contents"]), context);
                }
                if (data["ContinuationToken"] !== undefined) {
                    contents.ContinuationToken = data["ContinuationToken"];
                }
                if (data["Delimiter"] !== undefined) {
                    contents.Delimiter = data["Delimiter"];
                }
                if (data["EncodingType"] !== undefined) {
                    contents.EncodingType = data["EncodingType"];
                }
                if (data["IsTruncated"] !== undefined) {
                    contents.IsTruncated = data["IsTruncated"] == "true";
                }
                if (data["KeyCount"] !== undefined) {
                    contents.KeyCount = parseInt(data["KeyCount"]);
                }
                if (data["MaxKeys"] !== undefined) {
                    contents.MaxKeys = parseInt(data["MaxKeys"]);
                }
                if (data["Name"] !== undefined) {
                    contents.Name = data["Name"];
                }
                if (data["NextContinuationToken"] !== undefined) {
                    contents.NextContinuationToken = data["NextContinuationToken"];
                }
                if (data["Prefix"] !== undefined) {
                    contents.Prefix = data["Prefix"];
                }
                if (data["StartAfter"] !== undefined) {
                    contents.StartAfter = data["StartAfter"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlListObjectsV2CommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "NoSuchBucket": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#NoSuchBucket": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlListObjectVersionsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlListObjectVersionsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    CommonPrefixes: undefined,
                    DeleteMarkers: undefined,
                    Delimiter: undefined,
                    EncodingType: undefined,
                    IsTruncated: undefined,
                    KeyMarker: undefined,
                    MaxKeys: undefined,
                    Name: undefined,
                    NextKeyMarker: undefined,
                    NextVersionIdMarker: undefined,
                    Prefix: undefined,
                    VersionIdMarker: undefined,
                    Versions: undefined,
                };
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data.CommonPrefixes === "") {
                    contents.CommonPrefixes = [];
                }
                if (data["CommonPrefixes"] !== undefined) {
                    contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["CommonPrefixes"]), context);
                }
                if (data.DeleteMarker === "") {
                    contents.DeleteMarkers = [];
                }
                if (data["DeleteMarker"] !== undefined) {
                    contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["DeleteMarker"]), context);
                }
                if (data["Delimiter"] !== undefined) {
                    contents.Delimiter = data["Delimiter"];
                }
                if (data["EncodingType"] !== undefined) {
                    contents.EncodingType = data["EncodingType"];
                }
                if (data["IsTruncated"] !== undefined) {
                    contents.IsTruncated = data["IsTruncated"] == "true";
                }
                if (data["KeyMarker"] !== undefined) {
                    contents.KeyMarker = data["KeyMarker"];
                }
                if (data["MaxKeys"] !== undefined) {
                    contents.MaxKeys = parseInt(data["MaxKeys"]);
                }
                if (data["Name"] !== undefined) {
                    contents.Name = data["Name"];
                }
                if (data["NextKeyMarker"] !== undefined) {
                    contents.NextKeyMarker = data["NextKeyMarker"];
                }
                if (data["NextVersionIdMarker"] !== undefined) {
                    contents.NextVersionIdMarker = data["NextVersionIdMarker"];
                }
                if (data["Prefix"] !== undefined) {
                    contents.Prefix = data["Prefix"];
                }
                if (data["VersionIdMarker"] !== undefined) {
                    contents.VersionIdMarker = data["VersionIdMarker"];
                }
                if (data.Version === "") {
                    contents.Versions = [];
                }
                if (data["Version"] !== undefined) {
                    contents.Versions = deserializeAws_restXmlObjectVersionList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Version"]), context);
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlListObjectVersionsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlListPartsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlListPartsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    AbortDate: undefined,
                    AbortRuleId: undefined,
                    Bucket: undefined,
                    Initiator: undefined,
                    IsTruncated: undefined,
                    Key: undefined,
                    MaxParts: undefined,
                    NextPartNumberMarker: undefined,
                    Owner: undefined,
                    PartNumberMarker: undefined,
                    Parts: undefined,
                    RequestCharged: undefined,
                    StorageClass: undefined,
                    UploadId: undefined,
                };
                if (output.headers["x-amz-abort-rule-id"] !== undefined) {
                    contents.AbortRuleId = output.headers["x-amz-abort-rule-id"];
                }
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                if (output.headers["x-amz-abort-date"] !== undefined) {
                    contents.AbortDate = new Date(output.headers["x-amz-abort-date"]);
                }
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                if (data["Bucket"] !== undefined) {
                    contents.Bucket = data["Bucket"];
                }
                if (data["Initiator"] !== undefined) {
                    contents.Initiator = deserializeAws_restXmlInitiator(data["Initiator"], context);
                }
                if (data["IsTruncated"] !== undefined) {
                    contents.IsTruncated = data["IsTruncated"] == "true";
                }
                if (data["Key"] !== undefined) {
                    contents.Key = data["Key"];
                }
                if (data["MaxParts"] !== undefined) {
                    contents.MaxParts = parseInt(data["MaxParts"]);
                }
                if (data["NextPartNumberMarker"] !== undefined) {
                    contents.NextPartNumberMarker = parseInt(data["NextPartNumberMarker"]);
                }
                if (data["Owner"] !== undefined) {
                    contents.Owner = deserializeAws_restXmlOwner(data["Owner"], context);
                }
                if (data["PartNumberMarker"] !== undefined) {
                    contents.PartNumberMarker = parseInt(data["PartNumberMarker"]);
                }
                if (data.Part === "") {
                    contents.Parts = [];
                }
                if (data["Part"] !== undefined) {
                    contents.Parts = deserializeAws_restXmlParts((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(data["Part"]), context);
                }
                if (data["StorageClass"] !== undefined) {
                    contents.StorageClass = data["StorageClass"];
                }
                if (data["UploadId"] !== undefined) {
                    contents.UploadId = data["UploadId"];
                }
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlListPartsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketAclCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketAclCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketAclCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketCorsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketCorsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketCorsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketEncryptionCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketEncryptionCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketLoggingCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketLoggingCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketPolicyCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketPolicyCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketReplicationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketReplicationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketRequestPaymentCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketRequestPaymentCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketTaggingCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketTaggingCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketVersioningCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketVersioningCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutBucketWebsiteCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutBucketWebsiteCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutObjectCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutObjectCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    ETag: undefined,
                    Expiration: undefined,
                    RequestCharged: undefined,
                    SSECustomerAlgorithm: undefined,
                    SSECustomerKeyMD5: undefined,
                    SSEKMSEncryptionContext: undefined,
                    SSEKMSKeyId: undefined,
                    ServerSideEncryption: undefined,
                    VersionId: undefined,
                };
                if (output.headers["x-amz-server-side-encryption-context"] !== undefined) {
                    contents.SSEKMSEncryptionContext = output.headers["x-amz-server-side-encryption-context"];
                }
                if (output.headers["x-amz-expiration"] !== undefined) {
                    contents.Expiration = output.headers["x-amz-expiration"];
                }
                if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
                    contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
                }
                if (output.headers["etag"] !== undefined) {
                    contents.ETag = output.headers["etag"];
                }
                if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
                    contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
                }
                if (output.headers["x-amz-version-id"] !== undefined) {
                    contents.VersionId = output.headers["x-amz-version-id"];
                }
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
                    contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
                }
                if (output.headers["x-amz-server-side-encryption"] !== undefined) {
                    contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutObjectCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutObjectAclCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutObjectAclCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    RequestCharged: undefined,
                };
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutObjectAclCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "NoSuchKey": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#NoSuchKey": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutObjectLegalHoldCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    RequestCharged: undefined,
                };
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutObjectLegalHoldCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutObjectLockConfigurationCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    RequestCharged: undefined,
                };
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutObjectLockConfigurationCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutObjectRetentionCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    RequestCharged: undefined,
                };
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutObjectRetentionCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutObjectTaggingCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    VersionId: undefined,
                };
                if (output.headers["x-amz-version-id"] !== undefined) {
                    contents.VersionId = output.headers["x-amz-version-id"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutObjectTaggingCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlPutPublicAccessBlockCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                };
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlPutPublicAccessBlockCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlRestoreObjectCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlRestoreObjectCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    RequestCharged: undefined,
                    RestoreOutputPath: undefined,
                };
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                if (output.headers["x-amz-restore-output-path"] !== undefined) {
                    contents.RestoreOutputPath = output.headers["x-amz-restore-output-path"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlRestoreObjectCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;
    var _d;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_e) {
        switch (_e.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _d = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                _b = errorCode;
                switch (_b) {
                    case "ObjectAlreadyInActiveTierError": return [3 /*break*/, 2];
                    case "com.amazonaws.s3#ObjectAlreadyInActiveTierError": return [3 /*break*/, 2];
                }
                return [3 /*break*/, 4];
            case 2:
                _c = [{}];
                return [4 /*yield*/, deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];
            case 3:
                response = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, [tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _c.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);
                return [3 /*break*/, 5];
            case 4:
                parsedBody = parsedOutput.body;
                errorCode = parsedBody.code || parsedBody.Code || errorCode;
                response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                _e.label = 5;
            case 5:
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlSelectObjectContentCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        if (output.statusCode !== 200 && output.statusCode >= 300) {
            return [2 /*return*/, deserializeAws_restXmlSelectObjectContentCommandError(output, context)];
        }
        contents = {
            $metadata: deserializeMetadata(output),
            Payload: undefined,
        };
        data = context.eventStreamMarshaller.deserialize(output.body, function (event) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
            var eventName, eventHeaders, eventMessage, parsedEvent;
            var _a;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        eventName = Object.keys(event)[0];
                        eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {
                            accummulator[curr[0]] = curr[1].value;
                            return accummulator;
                        }, {});
                        eventMessage = {
                            headers: eventHeaders,
                            body: event[eventName].body,
                        };
                        parsedEvent = (_a = {},
                            _a[eventName] = eventMessage,
                            _a);
                        return [4 /*yield*/, deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];
                    case 1: return [2 /*return*/, _b.sent()];
                }
            });
        }); });
        contents.Payload = data;
        return [2 /*return*/, Promise.resolve(contents)];
    });
}); };
var deserializeAws_restXmlSelectObjectContentCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlUploadPartCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlUploadPartCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    ETag: undefined,
                    RequestCharged: undefined,
                    SSECustomerAlgorithm: undefined,
                    SSECustomerKeyMD5: undefined,
                    SSEKMSKeyId: undefined,
                    ServerSideEncryption: undefined,
                };
                if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
                    contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
                }
                if (output.headers["x-amz-server-side-encryption"] !== undefined) {
                    contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
                }
                if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
                    contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
                }
                if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
                    contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
                }
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                if (output.headers["etag"] !== undefined) {
                    contents.ETag = output.headers["etag"];
                }
                return [4 /*yield*/, collectBody(output.body, context)];
            case 1:
                _a.sent();
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlUploadPartCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlUploadPartCopyCommand = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (output.statusCode !== 200 && output.statusCode >= 300) {
                    return [2 /*return*/, deserializeAws_restXmlUploadPartCopyCommandError(output, context)];
                }
                contents = {
                    $metadata: deserializeMetadata(output),
                    CopyPartResult: undefined,
                    CopySourceVersionId: undefined,
                    RequestCharged: undefined,
                    SSECustomerAlgorithm: undefined,
                    SSECustomerKeyMD5: undefined,
                    SSEKMSKeyId: undefined,
                    ServerSideEncryption: undefined,
                };
                if (output.headers["x-amz-copy-source-version-id"] !== undefined) {
                    contents.CopySourceVersionId = output.headers["x-amz-copy-source-version-id"];
                }
                if (output.headers["x-amz-server-side-encryption-customer-algorithm"] !== undefined) {
                    contents.SSECustomerAlgorithm = output.headers["x-amz-server-side-encryption-customer-algorithm"];
                }
                if (output.headers["x-amz-server-side-encryption-customer-key-md5"] !== undefined) {
                    contents.SSECustomerKeyMD5 = output.headers["x-amz-server-side-encryption-customer-key-md5"];
                }
                if (output.headers["x-amz-request-charged"] !== undefined) {
                    contents.RequestCharged = output.headers["x-amz-request-charged"];
                }
                if (output.headers["x-amz-server-side-encryption-aws-kms-key-id"] !== undefined) {
                    contents.SSEKMSKeyId = output.headers["x-amz-server-side-encryption-aws-kms-key-id"];
                }
                if (output.headers["x-amz-server-side-encryption"] !== undefined) {
                    contents.ServerSideEncryption = output.headers["x-amz-server-side-encryption"];
                }
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                data = _a.sent();
                contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);
                return [2 /*return*/, Promise.resolve(contents)];
        }
    });
}); };
var deserializeAws_restXmlUploadPartCopyCommandError = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var parsedOutput, _a, response, errorCode, parsedBody, message;
    var _b;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, output)];
                _b = {};
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                parsedOutput = tslib__WEBPACK_IMPORTED_MODULE_4__.__assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));
                errorCode = "UnknownError";
                errorCode = loadRestXmlErrorCode(output, parsedOutput.body);
                switch (errorCode) {
                    default:
                        parsedBody = parsedOutput.body;
                        errorCode = parsedBody.code || parsedBody.Code || errorCode;
                        response = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, parsedBody), { name: "" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: "client", $metadata: deserializeMetadata(output) });
                }
                message = response.message || response.Message || errorCode;
                response.message = message;
                delete response.Message;
                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];
        }
    });
}); };
var deserializeAws_restXmlSelectObjectContentEventStream_event = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var _a, _b, _c, _d, _e;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_f) {
        switch (_f.label) {
            case 0:
                if (!(output["Cont"] !== undefined)) return [3 /*break*/, 2];
                _a = {};
                return [4 /*yield*/, deserializeAws_restXmlContinuationEvent_event(output["Cont"], context)];
            case 1: return [2 /*return*/, (_a.Cont = _f.sent(),
                    _a)];
            case 2:
                if (!(output["Progress"] !== undefined)) return [3 /*break*/, 4];
                _b = {};
                return [4 /*yield*/, deserializeAws_restXmlProgressEvent_event(output["Progress"], context)];
            case 3: return [2 /*return*/, (_b.Progress = _f.sent(),
                    _b)];
            case 4:
                if (!(output["Stats"] !== undefined)) return [3 /*break*/, 6];
                _c = {};
                return [4 /*yield*/, deserializeAws_restXmlStatsEvent_event(output["Stats"], context)];
            case 5: return [2 /*return*/, (_c.Stats = _f.sent(),
                    _c)];
            case 6:
                if (!(output["End"] !== undefined)) return [3 /*break*/, 8];
                _d = {};
                return [4 /*yield*/, deserializeAws_restXmlEndEvent_event(output["End"], context)];
            case 7: return [2 /*return*/, (_d.End = _f.sent(),
                    _d)];
            case 8:
                if (!(output["Records"] !== undefined)) return [3 /*break*/, 10];
                _e = {};
                return [4 /*yield*/, deserializeAws_restXmlRecordsEvent_event(output["Records"], context)];
            case 9: return [2 /*return*/, (_e.Records = _f.sent(),
                    _e)];
            case 10: return [2 /*return*/, { $unknown: output }];
        }
    });
}); };
var deserializeAws_restXmlContinuationEvent_event = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {};
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_restXmlEndEvent_event = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {};
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_restXmlProgressEvent_event = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, _a;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_b) {
        switch (_b.label) {
            case 0:
                contents = {};
                _a = contents;
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                _a.Details = _b.sent();
                return [2 /*return*/, contents];
        }
    });
}); };
var deserializeAws_restXmlRecordsEvent_event = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {};
        contents.Payload = output.body;
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_restXmlStatsEvent_event = function (output, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, _a;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_b) {
        switch (_b.label) {
            case 0:
                contents = {};
                _a = contents;
                return [4 /*yield*/, parseBody(output.body, context)];
            case 1:
                _a.Details = _b.sent();
                return [2 /*return*/, contents];
        }
    });
}); };
var deserializeAws_restXmlBucketAlreadyExistsResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {
            name: "BucketAlreadyExists",
            $fault: "client",
            $metadata: deserializeMetadata(parsedOutput),
        };
        data = parsedOutput.body;
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {
            name: "BucketAlreadyOwnedByYou",
            $fault: "client",
            $metadata: deserializeMetadata(parsedOutput),
        };
        data = parsedOutput.body;
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_restXmlNoSuchBucketResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {
            name: "NoSuchBucket",
            $fault: "client",
            $metadata: deserializeMetadata(parsedOutput),
        };
        data = parsedOutput.body;
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_restXmlNoSuchKeyResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {
            name: "NoSuchKey",
            $fault: "client",
            $metadata: deserializeMetadata(parsedOutput),
        };
        data = parsedOutput.body;
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_restXmlNoSuchUploadResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {
            name: "NoSuchUpload",
            $fault: "client",
            $metadata: deserializeMetadata(parsedOutput),
        };
        data = parsedOutput.body;
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {
            name: "ObjectAlreadyInActiveTierError",
            $fault: "client",
            $metadata: deserializeMetadata(parsedOutput),
        };
        data = parsedOutput.body;
        return [2 /*return*/, contents];
    });
}); };
var deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function (parsedOutput, context) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var contents, data;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_a) {
        contents = {
            name: "ObjectNotInActiveTierError",
            $fault: "client",
            $metadata: deserializeMetadata(parsedOutput),
        };
        data = parsedOutput.body;
        return [2 /*return*/, contents];
    });
}); };
var serializeAws_restXmlAbortIncompleteMultipartUpload = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AbortIncompleteMultipartUpload");
    if (input.DaysAfterInitiation !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DaysAfterInitiation")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.DaysAfterInitiation)))
            .withName("DaysAfterInitiation");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlAccelerateConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccelerateConfiguration");
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketAccelerateStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlAccessControlPolicy = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccessControlPolicy");
    if (input.Grants !== undefined) {
        var nodes = serializeAws_restXmlGrants(input.Grants, context);
        var containerNode_1 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccessControlList");
        nodes.map(function (node) {
            containerNode_1.addChildNode(node);
        });
        bodyNode.addChildNode(containerNode_1);
    }
    if (input.Owner !== undefined) {
        var node = serializeAws_restXmlOwner(input.Owner, context).withName("Owner");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlAccessControlTranslation = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccessControlTranslation");
    if (input.Owner !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OwnerOverride").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Owner)).withName("Owner");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlAllowedHeaders = function (input, context) {
    return input.map(function (entry) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AllowedHeader").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
        return node.withName("member");
    });
};
var serializeAws_restXmlAllowedMethods = function (input, context) {
    return input.map(function (entry) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AllowedMethod").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
        return node.withName("member");
    });
};
var serializeAws_restXmlAllowedOrigins = function (input, context) {
    return input.map(function (entry) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AllowedOrigin").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
        return node.withName("member");
    });
};
var serializeAws_restXmlAnalyticsAndOperator = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsAndOperator");
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.Tags !== undefined) {
        var nodes = serializeAws_restXmlTagSet(input.Tags, context);
        nodes.map(function (node) {
            node = node.withName("Tag");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlAnalyticsConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsConfiguration");
    if (input.StorageClassAnalysis !== undefined) {
        var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName("StorageClassAnalysis");
        bodyNode.addChildNode(node);
    }
    if (input.Filter !== undefined) {
        var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName("Filter");
        bodyNode.addChildNode(node);
    }
    if (input.Id !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlAnalyticsExportDestination = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsExportDestination");
    if (input.S3BucketDestination !== undefined) {
        var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName("S3BucketDestination");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlAnalyticsFilter = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsFilter");
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.Tag !== undefined) {
        var node = serializeAws_restXmlTag(input.Tag, context).withName("Tag");
        bodyNode.addChildNode(node);
    }
    if (input.And !== undefined) {
        var node = serializeAws_restXmlAnalyticsAndOperator(input.And, context).withName("And");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlAnalyticsS3BucketDestination = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsS3BucketDestination");
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.BucketAccountId !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccountId")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.BucketAccountId))
            .withName("BucketAccountId");
        bodyNode.addChildNode(node);
    }
    if (input.Bucket !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Bucket)).withName("Bucket");
        bodyNode.addChildNode(node);
    }
    if (input.Format !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AnalyticsS3ExportFileFormat")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Format))
            .withName("Format");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlBucketLifecycleConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketLifecycleConfiguration");
    if (input.Rules !== undefined) {
        var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);
        nodes.map(function (node) {
            node = node.withName("Rule");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlBucketLoggingStatus = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketLoggingStatus");
    if (input.LoggingEnabled !== undefined) {
        var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName("LoggingEnabled");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlCompletedMultipartUpload = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CompletedMultipartUpload");
    if (input.Parts !== undefined) {
        var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);
        nodes.map(function (node) {
            node = node.withName("Part");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlCompletedPart = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CompletedPart");
    if (input.ETag !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ETag").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ETag)).withName("ETag");
        bodyNode.addChildNode(node);
    }
    if (input.PartNumber !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("PartNumber")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.PartNumber)))
            .withName("PartNumber");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlCompletedPartList = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlCompletedPart(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlCondition = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Condition");
    if (input.KeyPrefixEquals !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("KeyPrefixEquals")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KeyPrefixEquals))
            .withName("KeyPrefixEquals");
        bodyNode.addChildNode(node);
    }
    if (input.HttpErrorCodeReturnedEquals !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("HttpErrorCodeReturnedEquals")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.HttpErrorCodeReturnedEquals))
            .withName("HttpErrorCodeReturnedEquals");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlCORSConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CORSConfiguration");
    if (input.CORSRules !== undefined) {
        var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);
        nodes.map(function (node) {
            node = node.withName("CORSRule");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlCORSRule = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CORSRule");
    if (input.AllowedHeaders !== undefined) {
        var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);
        nodes.map(function (node) {
            node = node.withName("AllowedHeader");
            bodyNode.addChildNode(node);
        });
    }
    if (input.AllowedOrigins !== undefined) {
        var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);
        nodes.map(function (node) {
            node = node.withName("AllowedOrigin");
            bodyNode.addChildNode(node);
        });
    }
    if (input.MaxAgeSeconds !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MaxAgeSeconds")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.MaxAgeSeconds)))
            .withName("MaxAgeSeconds");
        bodyNode.addChildNode(node);
    }
    if (input.ExposeHeaders !== undefined) {
        var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);
        nodes.map(function (node) {
            node = node.withName("ExposeHeader");
            bodyNode.addChildNode(node);
        });
    }
    if (input.AllowedMethods !== undefined) {
        var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);
        nodes.map(function (node) {
            node = node.withName("AllowedMethod");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlCORSRules = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlCORSRule(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlCreateBucketConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CreateBucketConfiguration");
    if (input.LocationConstraint !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketLocationConstraint")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.LocationConstraint))
            .withName("LocationConstraint");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlCSVInput = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CSVInput");
    if (input.FieldDelimiter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FieldDelimiter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.FieldDelimiter))
            .withName("FieldDelimiter");
        bodyNode.addChildNode(node);
    }
    if (input.AllowQuotedRecordDelimiter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AllowQuotedRecordDelimiter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.AllowQuotedRecordDelimiter)))
            .withName("AllowQuotedRecordDelimiter");
        bodyNode.addChildNode(node);
    }
    if (input.FileHeaderInfo !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FileHeaderInfo")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.FileHeaderInfo))
            .withName("FileHeaderInfo");
        bodyNode.addChildNode(node);
    }
    if (input.QuoteCharacter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteCharacter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteCharacter))
            .withName("QuoteCharacter");
        bodyNode.addChildNode(node);
    }
    if (input.QuoteEscapeCharacter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteEscapeCharacter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteEscapeCharacter))
            .withName("QuoteEscapeCharacter");
        bodyNode.addChildNode(node);
    }
    if (input.RecordDelimiter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RecordDelimiter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.RecordDelimiter))
            .withName("RecordDelimiter");
        bodyNode.addChildNode(node);
    }
    if (input.Comments !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Comments").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Comments)).withName("Comments");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlCSVOutput = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CSVOutput");
    if (input.FieldDelimiter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FieldDelimiter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.FieldDelimiter))
            .withName("FieldDelimiter");
        bodyNode.addChildNode(node);
    }
    if (input.QuoteFields !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteFields").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteFields)).withName("QuoteFields");
        bodyNode.addChildNode(node);
    }
    if (input.QuoteCharacter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteCharacter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteCharacter))
            .withName("QuoteCharacter");
        bodyNode.addChildNode(node);
    }
    if (input.RecordDelimiter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RecordDelimiter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.RecordDelimiter))
            .withName("RecordDelimiter");
        bodyNode.addChildNode(node);
    }
    if (input.QuoteEscapeCharacter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QuoteEscapeCharacter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QuoteEscapeCharacter))
            .withName("QuoteEscapeCharacter");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlDefaultRetention = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DefaultRetention");
    if (input.Days !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Days))).withName("Days");
        bodyNode.addChildNode(node);
    }
    if (input.Mode !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockRetentionMode").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Mode)).withName("Mode");
        bodyNode.addChildNode(node);
    }
    if (input.Years !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Years").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Years))).withName("Years");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlDelete = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Delete");
    if (input.Objects !== undefined) {
        var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);
        nodes.map(function (node) {
            node = node.withName("Object");
            bodyNode.addChildNode(node);
        });
    }
    if (input.Quiet !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Quiet").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Quiet))).withName("Quiet");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlDeleteMarkerReplication = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DeleteMarkerReplication");
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DeleteMarkerReplicationStatus")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status))
            .withName("Status");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlDestination = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Destination");
    if (input.EncryptionConfiguration !== undefined) {
        var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName("EncryptionConfiguration");
        bodyNode.addChildNode(node);
    }
    if (input.Bucket !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Bucket)).withName("Bucket");
        bodyNode.addChildNode(node);
    }
    if (input.Account !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccountId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Account)).withName("Account");
        bodyNode.addChildNode(node);
    }
    if (input.StorageClass !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClass").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.StorageClass)).withName("StorageClass");
        bodyNode.addChildNode(node);
    }
    if (input.Metrics !== undefined) {
        var node = serializeAws_restXmlMetrics(input.Metrics, context).withName("Metrics");
        bodyNode.addChildNode(node);
    }
    if (input.AccessControlTranslation !== undefined) {
        var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName("AccessControlTranslation");
        bodyNode.addChildNode(node);
    }
    if (input.ReplicationTime !== undefined) {
        var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName("ReplicationTime");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlEncryption = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Encryption");
    if (input.KMSKeyId !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSEKMSKeyId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KMSKeyId)).withName("KMSKeyId");
        bodyNode.addChildNode(node);
    }
    if (input.KMSContext !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("KMSContext").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KMSContext)).withName("KMSContext");
        bodyNode.addChildNode(node);
    }
    if (input.EncryptionType !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryption")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.EncryptionType))
            .withName("EncryptionType");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlEncryptionConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("EncryptionConfiguration");
    if (input.ReplicaKmsKeyID !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicaKmsKeyID")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ReplicaKmsKeyID))
            .withName("ReplicaKmsKeyID");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlErrorDocument = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ErrorDocument");
    if (input.Key !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectKey").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Key)).withName("Key");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlEventList = function (input, context) {
    return input.map(function (entry) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Event").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
        return node.withName("member");
    });
};
var serializeAws_restXmlExistingObjectReplication = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExistingObjectReplication");
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExistingObjectReplicationStatus")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status))
            .withName("Status");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlExposeHeaders = function (input, context) {
    return input.map(function (entry) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExposeHeader").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
        return node.withName("member");
    });
};
var serializeAws_restXmlFilterRule = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FilterRule");
    if (input.Name !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FilterRuleName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Name)).withName("Name");
        bodyNode.addChildNode(node);
    }
    if (input.Value !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("FilterRuleValue").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Value)).withName("Value");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlFilterRuleList = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlFilterRule(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlGlacierJobParameters = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("GlacierJobParameters");
    if (input.Tier !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Tier").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Tier)).withName("Tier");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlGrant = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Grant");
    if (input.Grantee !== undefined) {
        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName("Grantee");
        bodyNode.addChildNode(node);
    }
    if (input.Permission !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Permission").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Permission)).withName("Permission");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlGrantee = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Grantee");
    if (input.EmailAddress !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("EmailAddress").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.EmailAddress)).withName("EmailAddress");
        bodyNode.addChildNode(node);
    }
    if (input.DisplayName !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DisplayName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.DisplayName)).withName("DisplayName");
        bodyNode.addChildNode(node);
    }
    if (input.URI !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("URI").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.URI)).withName("URI");
        bodyNode.addChildNode(node);
    }
    if (input.ID !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ID").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ID)).withName("ID");
        bodyNode.addChildNode(node);
    }
    if (input.Type !== undefined) {
        bodyNode.addAttribute("xsi:type", input.Type);
    }
    return bodyNode;
};
var serializeAws_restXmlGrants = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlGrant(entry, context);
        return node.withName("Grant");
    });
};
var serializeAws_restXmlIndexDocument = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IndexDocument");
    if (input.Suffix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Suffix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Suffix)).withName("Suffix");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlInputSerialization = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InputSerialization");
    if (input.JSON !== undefined) {
        var node = serializeAws_restXmlJSONInput(input.JSON, context).withName("JSON");
        bodyNode.addChildNode(node);
    }
    if (input.CompressionType !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("CompressionType")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.CompressionType))
            .withName("CompressionType");
        bodyNode.addChildNode(node);
    }
    if (input.Parquet !== undefined) {
        var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName("Parquet");
        bodyNode.addChildNode(node);
    }
    if (input.CSV !== undefined) {
        var node = serializeAws_restXmlCSVInput(input.CSV, context).withName("CSV");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlInventoryConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryConfiguration");
    if (input.IncludedObjectVersions !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryIncludedObjectVersions")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.IncludedObjectVersions))
            .withName("IncludedObjectVersions");
        bodyNode.addChildNode(node);
    }
    if (input.IsEnabled !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("IsEnabled").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.IsEnabled))).withName("IsEnabled");
        bodyNode.addChildNode(node);
    }
    if (input.Schedule !== undefined) {
        var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName("Schedule");
        bodyNode.addChildNode(node);
    }
    if (input.Filter !== undefined) {
        var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName("Filter");
        bodyNode.addChildNode(node);
    }
    if (input.OptionalFields !== undefined) {
        var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);
        var containerNode_2 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OptionalFields");
        nodes.map(function (node) {
            containerNode_2.addChildNode(node);
        });
        bodyNode.addChildNode(containerNode_2);
    }
    if (input.Destination !== undefined) {
        var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName("Destination");
        bodyNode.addChildNode(node);
    }
    if (input.Id !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlInventoryDestination = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryDestination");
    if (input.S3BucketDestination !== undefined) {
        var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName("S3BucketDestination");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlInventoryEncryption = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryEncryption");
    if (input.SSEKMS !== undefined) {
        var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName("SSE-KMS");
        bodyNode.addChildNode(node);
    }
    if (input.SSES3 !== undefined) {
        var node = serializeAws_restXmlSSES3(input.SSES3, context).withName("SSE-S3");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlInventoryFilter = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryFilter");
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlInventoryOptionalFields = function (input, context) {
    return input.map(function (entry) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryOptionalField").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(entry));
        return node.withName("Field");
    });
};
var serializeAws_restXmlInventoryS3BucketDestination = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryS3BucketDestination");
    if (input.Format !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryFormat").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Format)).withName("Format");
        bodyNode.addChildNode(node);
    }
    if (input.Encryption !== undefined) {
        var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName("Encryption");
        bodyNode.addChildNode(node);
    }
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.Bucket !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Bucket)).withName("Bucket");
        bodyNode.addChildNode(node);
    }
    if (input.AccountId !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccountId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.AccountId)).withName("AccountId");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlInventorySchedule = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventorySchedule");
    if (input.Frequency !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("InventoryFrequency").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Frequency)).withName("Frequency");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlJSONInput = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("JSONInput");
    if (input.Type !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("JSONType").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Type)).withName("Type");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlJSONOutput = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("JSONOutput");
    if (input.RecordDelimiter !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RecordDelimiter")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.RecordDelimiter))
            .withName("RecordDelimiter");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlLambdaFunctionConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LambdaFunctionConfiguration");
    if (input.Events !== undefined) {
        var nodes = serializeAws_restXmlEventList(input.Events, context);
        nodes.map(function (node) {
            node = node.withName("Event");
            bodyNode.addChildNode(node);
        });
    }
    if (input.Filter !== undefined) {
        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName("Filter");
        bodyNode.addChildNode(node);
    }
    if (input.LambdaFunctionArn !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LambdaFunctionArn")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.LambdaFunctionArn))
            .withName("CloudFunction");
        bodyNode.addChildNode(node);
    }
    if (input.Id !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlLambdaFunctionConfigurationList = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlLifecycleExpiration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LifecycleExpiration");
    if (input.Days !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Days))).withName("Days");
        bodyNode.addChildNode(node);
    }
    if (input.ExpiredObjectDeleteMarker !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExpiredObjectDeleteMarker")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.ExpiredObjectDeleteMarker)))
            .withName("ExpiredObjectDeleteMarker");
        bodyNode.addChildNode(node);
    }
    if (input.Date !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Date")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Date.toISOString().split(".")[0] + "Z"))
            .withName("Date");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlLifecycleRule = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LifecycleRule");
    if (input.NoncurrentVersionTransitions !== undefined) {
        var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);
        nodes.map(function (node) {
            node = node.withName("NoncurrentVersionTransition");
            bodyNode.addChildNode(node);
        });
    }
    if (input.Expiration !== undefined) {
        var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName("Expiration");
        bodyNode.addChildNode(node);
    }
    if (input.ID !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ID").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ID)).withName("ID");
        bodyNode.addChildNode(node);
    }
    if (input.Transitions !== undefined) {
        var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);
        nodes.map(function (node) {
            node = node.withName("Transition");
            bodyNode.addChildNode(node);
        });
    }
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.NoncurrentVersionExpiration !== undefined) {
        var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName("NoncurrentVersionExpiration");
        bodyNode.addChildNode(node);
    }
    if (input.AbortIncompleteMultipartUpload !== undefined) {
        var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName("AbortIncompleteMultipartUpload");
        bodyNode.addChildNode(node);
    }
    if (input.Filter !== undefined) {
        var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName("Filter");
        bodyNode.addChildNode(node);
    }
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExpirationStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlLifecycleRuleAndOperator = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LifecycleRuleAndOperator");
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.Tags !== undefined) {
        var nodes = serializeAws_restXmlTagSet(input.Tags, context);
        nodes.map(function (node) {
            node = node.withName("Tag");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlLifecycleRuleFilter = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LifecycleRuleFilter");
    if (input.And !== undefined) {
        var node = serializeAws_restXmlLifecycleRuleAndOperator(input.And, context).withName("And");
        bodyNode.addChildNode(node);
    }
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.Tag !== undefined) {
        var node = serializeAws_restXmlTag(input.Tag, context).withName("Tag");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlLifecycleRules = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlLifecycleRule(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlLoggingEnabled = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LoggingEnabled");
    if (input.TargetGrants !== undefined) {
        var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);
        var containerNode_3 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TargetGrants");
        nodes.map(function (node) {
            containerNode_3.addChildNode(node);
        });
        bodyNode.addChildNode(containerNode_3);
    }
    if (input.TargetBucket !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TargetBucket").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.TargetBucket)).withName("TargetBucket");
        bodyNode.addChildNode(node);
    }
    if (input.TargetPrefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TargetPrefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.TargetPrefix)).withName("TargetPrefix");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlMetadataEntry = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetadataEntry");
    if (input.Value !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetadataValue").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Value)).withName("Value");
        bodyNode.addChildNode(node);
    }
    if (input.Name !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetadataKey").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Name)).withName("Name");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlMetrics = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Metrics");
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
        bodyNode.addChildNode(node);
    }
    if (input.EventThreshold !== undefined) {
        var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName("EventThreshold");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlMetricsAndOperator = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsAndOperator");
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.Tags !== undefined) {
        var nodes = serializeAws_restXmlTagSet(input.Tags, context);
        nodes.map(function (node) {
            node = node.withName("Tag");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlMetricsConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsConfiguration");
    if (input.Id !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
        bodyNode.addChildNode(node);
    }
    if (input.Filter !== undefined) {
        var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName("Filter");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlMetricsFilter = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MetricsFilter");
    if (input.And !== undefined) {
        var node = serializeAws_restXmlMetricsAndOperator(input.And, context).withName("And");
        bodyNode.addChildNode(node);
    }
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.Tag !== undefined) {
        var node = serializeAws_restXmlTag(input.Tag, context).withName("Tag");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlNoncurrentVersionExpiration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NoncurrentVersionExpiration");
    if (input.NoncurrentDays !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.NoncurrentDays)))
            .withName("NoncurrentDays");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlNoncurrentVersionTransition = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NoncurrentVersionTransition");
    if (input.StorageClass !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TransitionStorageClass")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.StorageClass))
            .withName("StorageClass");
        bodyNode.addChildNode(node);
    }
    if (input.NoncurrentDays !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.NoncurrentDays)))
            .withName("NoncurrentDays");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlNoncurrentVersionTransitionList = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlNotificationConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationConfiguration");
    if (input.TopicConfigurations !== undefined) {
        var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);
        nodes.map(function (node) {
            node = node.withName("TopicConfiguration");
            bodyNode.addChildNode(node);
        });
    }
    if (input.QueueConfigurations !== undefined) {
        var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);
        nodes.map(function (node) {
            node = node.withName("QueueConfiguration");
            bodyNode.addChildNode(node);
        });
    }
    if (input.LambdaFunctionConfigurations !== undefined) {
        var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);
        nodes.map(function (node) {
            node = node.withName("CloudFunctionConfiguration");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlNotificationConfigurationFilter = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationConfigurationFilter");
    if (input.Key !== undefined) {
        var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName("S3Key");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlObjectIdentifier = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectIdentifier");
    if (input.Key !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectKey").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Key)).withName("Key");
        bodyNode.addChildNode(node);
    }
    if (input.VersionId !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectVersionId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.VersionId)).withName("VersionId");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlObjectIdentifierList = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlObjectIdentifier(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlObjectLockConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockConfiguration");
    if (input.ObjectLockEnabled !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockEnabled")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ObjectLockEnabled))
            .withName("ObjectLockEnabled");
        bodyNode.addChildNode(node);
    }
    if (input.Rule !== undefined) {
        var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName("Rule");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlObjectLockLegalHold = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockLegalHold");
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockLegalHoldStatus")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status))
            .withName("Status");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlObjectLockRetention = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockRetention");
    if (input.Mode !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockRetentionMode").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Mode)).withName("Mode");
        bodyNode.addChildNode(node);
    }
    if (input.RetainUntilDate !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Date")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.RetainUntilDate.toISOString().split(".")[0] + "Z"))
            .withName("RetainUntilDate");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlObjectLockRule = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectLockRule");
    if (input.DefaultRetention !== undefined) {
        var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName("DefaultRetention");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlOutputLocation = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OutputLocation");
    if (input.S3 !== undefined) {
        var node = serializeAws_restXmlS3Location(input.S3, context).withName("S3");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlOutputSerialization = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OutputSerialization");
    if (input.JSON !== undefined) {
        var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName("JSON");
        bodyNode.addChildNode(node);
    }
    if (input.CSV !== undefined) {
        var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName("CSV");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlOwner = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Owner");
    if (input.DisplayName !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("DisplayName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.DisplayName)).withName("DisplayName");
        bodyNode.addChildNode(node);
    }
    if (input.ID !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ID").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ID)).withName("ID");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlOwnershipControls = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OwnershipControls");
    if (input.Rules !== undefined) {
        var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);
        nodes.map(function (node) {
            node = node.withName("Rule");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlOwnershipControlsRule = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("OwnershipControlsRule");
    if (input.ObjectOwnership !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectOwnership")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ObjectOwnership))
            .withName("ObjectOwnership");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlOwnershipControlsRules = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlOwnershipControlsRule(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlParquetInput = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ParquetInput");
    return bodyNode;
};
var serializeAws_restXmlPublicAccessBlockConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("PublicAccessBlockConfiguration");
    if (input.BlockPublicPolicy !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Setting")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.BlockPublicPolicy)))
            .withName("BlockPublicPolicy");
        bodyNode.addChildNode(node);
    }
    if (input.BlockPublicAcls !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Setting")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.BlockPublicAcls)))
            .withName("BlockPublicAcls");
        bodyNode.addChildNode(node);
    }
    if (input.RestrictPublicBuckets !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Setting")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.RestrictPublicBuckets)))
            .withName("RestrictPublicBuckets");
        bodyNode.addChildNode(node);
    }
    if (input.IgnorePublicAcls !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Setting")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.IgnorePublicAcls)))
            .withName("IgnorePublicAcls");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlQueueConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QueueConfiguration");
    if (input.Events !== undefined) {
        var nodes = serializeAws_restXmlEventList(input.Events, context);
        nodes.map(function (node) {
            node = node.withName("Event");
            bodyNode.addChildNode(node);
        });
    }
    if (input.Id !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
        bodyNode.addChildNode(node);
    }
    if (input.Filter !== undefined) {
        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName("Filter");
        bodyNode.addChildNode(node);
    }
    if (input.QueueArn !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("QueueArn").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.QueueArn)).withName("Queue");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlQueueConfigurationList = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlQueueConfiguration(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlRedirect = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Redirect");
    if (input.HttpRedirectCode !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("HttpRedirectCode")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.HttpRedirectCode))
            .withName("HttpRedirectCode");
        bodyNode.addChildNode(node);
    }
    if (input.ReplaceKeyPrefixWith !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplaceKeyPrefixWith")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ReplaceKeyPrefixWith))
            .withName("ReplaceKeyPrefixWith");
        bodyNode.addChildNode(node);
    }
    if (input.Protocol !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Protocol").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Protocol)).withName("Protocol");
        bodyNode.addChildNode(node);
    }
    if (input.HostName !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("HostName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.HostName)).withName("HostName");
        bodyNode.addChildNode(node);
    }
    if (input.ReplaceKeyWith !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplaceKeyWith")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ReplaceKeyWith))
            .withName("ReplaceKeyWith");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlRedirectAllRequestsTo = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RedirectAllRequestsTo");
    if (input.Protocol !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Protocol").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Protocol)).withName("Protocol");
        bodyNode.addChildNode(node);
    }
    if (input.HostName !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("HostName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.HostName)).withName("HostName");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlReplicationConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationConfiguration");
    if (input.Role !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Role").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Role)).withName("Role");
        bodyNode.addChildNode(node);
    }
    if (input.Rules !== undefined) {
        var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);
        nodes.map(function (node) {
            node = node.withName("Rule");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlReplicationRule = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationRule");
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.ID !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ID").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ID)).withName("ID");
        bodyNode.addChildNode(node);
    }
    if (input.SourceSelectionCriteria !== undefined) {
        var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName("SourceSelectionCriteria");
        bodyNode.addChildNode(node);
    }
    if (input.DeleteMarkerReplication !== undefined) {
        var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName("DeleteMarkerReplication");
        bodyNode.addChildNode(node);
    }
    if (input.Filter !== undefined) {
        var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName("Filter");
        bodyNode.addChildNode(node);
    }
    if (input.Priority !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Priority").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Priority))).withName("Priority");
        bodyNode.addChildNode(node);
    }
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationRuleStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
        bodyNode.addChildNode(node);
    }
    if (input.ExistingObjectReplication !== undefined) {
        var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName("ExistingObjectReplication");
        bodyNode.addChildNode(node);
    }
    if (input.Destination !== undefined) {
        var node = serializeAws_restXmlDestination(input.Destination, context).withName("Destination");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlReplicationRuleAndOperator = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationRuleAndOperator");
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.Tags !== undefined) {
        var nodes = serializeAws_restXmlTagSet(input.Tags, context);
        nodes.map(function (node) {
            node = node.withName("Tag");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlReplicationRuleFilter = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationRuleFilter");
    if (input.Tag !== undefined) {
        var node = serializeAws_restXmlTag(input.Tag, context).withName("Tag");
        bodyNode.addChildNode(node);
    }
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Prefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.And !== undefined) {
        var node = serializeAws_restXmlReplicationRuleAndOperator(input.And, context).withName("And");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlReplicationRules = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlReplicationRule(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlReplicationTime = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationTime");
    if (input.Time !== undefined) {
        var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName("Time");
        bodyNode.addChildNode(node);
    }
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationTimeStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlReplicationTimeValue = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ReplicationTimeValue");
    if (input.Minutes !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Minutes").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Minutes))).withName("Minutes");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlRequestPaymentConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RequestPaymentConfiguration");
    if (input.Payer !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Payer").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Payer)).withName("Payer");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlRequestProgress = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RequestProgress");
    if (input.Enabled !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("EnableRequestProgress")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Enabled)))
            .withName("Enabled");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlRestoreRequest = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RestoreRequest");
    if (input.GlacierJobParameters !== undefined) {
        var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName("GlacierJobParameters");
        bodyNode.addChildNode(node);
    }
    if (input.Days !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Days))).withName("Days");
        bodyNode.addChildNode(node);
    }
    if (input.OutputLocation !== undefined) {
        var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName("OutputLocation");
        bodyNode.addChildNode(node);
    }
    if (input.SelectParameters !== undefined) {
        var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName("SelectParameters");
        bodyNode.addChildNode(node);
    }
    if (input.Tier !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Tier").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Tier)).withName("Tier");
        bodyNode.addChildNode(node);
    }
    if (input.Description !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Description").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Description)).withName("Description");
        bodyNode.addChildNode(node);
    }
    if (input.Type !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RestoreRequestType").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Type)).withName("Type");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlRoutingRule = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RoutingRule");
    if (input.Redirect !== undefined) {
        var node = serializeAws_restXmlRedirect(input.Redirect, context).withName("Redirect");
        bodyNode.addChildNode(node);
    }
    if (input.Condition !== undefined) {
        var node = serializeAws_restXmlCondition(input.Condition, context).withName("Condition");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlRoutingRules = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlRoutingRule(entry, context);
        return node.withName("RoutingRule");
    });
};
var serializeAws_restXmlS3KeyFilter = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("S3KeyFilter");
    if (input.FilterRules !== undefined) {
        var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);
        nodes.map(function (node) {
            node = node.withName("FilterRule");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlS3Location = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("S3Location");
    if (input.BucketName !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketName").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.BucketName)).withName("BucketName");
        bodyNode.addChildNode(node);
    }
    if (input.StorageClass !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClass").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.StorageClass)).withName("StorageClass");
        bodyNode.addChildNode(node);
    }
    if (input.CannedACL !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectCannedACL").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.CannedACL)).withName("CannedACL");
        bodyNode.addChildNode(node);
    }
    if (input.UserMetadata !== undefined) {
        var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);
        var containerNode_4 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("UserMetadata");
        nodes.map(function (node) {
            containerNode_4.addChildNode(node);
        });
        bodyNode.addChildNode(containerNode_4);
    }
    if (input.Prefix !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("LocationPrefix").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Prefix)).withName("Prefix");
        bodyNode.addChildNode(node);
    }
    if (input.Tagging !== undefined) {
        var node = serializeAws_restXmlTagging(input.Tagging, context).withName("Tagging");
        bodyNode.addChildNode(node);
    }
    if (input.Encryption !== undefined) {
        var node = serializeAws_restXmlEncryption(input.Encryption, context).withName("Encryption");
        bodyNode.addChildNode(node);
    }
    if (input.AccessControlList !== undefined) {
        var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);
        var containerNode_5 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("AccessControlList");
        nodes.map(function (node) {
            containerNode_5.addChildNode(node);
        });
        bodyNode.addChildNode(containerNode_5);
    }
    return bodyNode;
};
var serializeAws_restXmlScanRange = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ScanRange");
    if (input.End !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("End").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.End))).withName("End");
        bodyNode.addChildNode(node);
    }
    if (input.Start !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Start").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Start))).withName("Start");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlSelectParameters = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SelectParameters");
    if (input.ExpressionType !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ExpressionType")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.ExpressionType))
            .withName("ExpressionType");
        bodyNode.addChildNode(node);
    }
    if (input.OutputSerialization !== undefined) {
        var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName("OutputSerialization");
        bodyNode.addChildNode(node);
    }
    if (input.Expression !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Expression").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Expression)).withName("Expression");
        bodyNode.addChildNode(node);
    }
    if (input.InputSerialization !== undefined) {
        var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName("InputSerialization");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlServerSideEncryptionByDefault = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryptionByDefault");
    if (input.SSEAlgorithm !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryption")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.SSEAlgorithm))
            .withName("SSEAlgorithm");
        bodyNode.addChildNode(node);
    }
    if (input.KMSMasterKeyID !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSEKMSKeyId")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KMSMasterKeyID))
            .withName("KMSMasterKeyID");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlServerSideEncryptionConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryptionConfiguration");
    if (input.Rules !== undefined) {
        var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);
        nodes.map(function (node) {
            node = node.withName("Rule");
            bodyNode.addChildNode(node);
        });
    }
    return bodyNode;
};
var serializeAws_restXmlServerSideEncryptionRule = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ServerSideEncryptionRule");
    if (input.ApplyServerSideEncryptionByDefault !== undefined) {
        var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName("ApplyServerSideEncryptionByDefault");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlServerSideEncryptionRules = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlSourceSelectionCriteria = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SourceSelectionCriteria");
    if (input.SseKmsEncryptedObjects !== undefined) {
        var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName("SseKmsEncryptedObjects");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlSSEKMS = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSE-KMS");
    if (input.KeyId !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSEKMSKeyId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.KeyId)).withName("KeyId");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlSseKmsEncryptedObjects = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SseKmsEncryptedObjects");
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SseKmsEncryptedObjectsStatus")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status))
            .withName("Status");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlSSES3 = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("SSE-S3");
    return bodyNode;
};
var serializeAws_restXmlStorageClassAnalysis = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClassAnalysis");
    if (input.DataExport !== undefined) {
        var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName("DataExport");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlStorageClassAnalysisDataExport = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClassAnalysisDataExport");
    if (input.OutputSchemaVersion !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("StorageClassAnalysisSchemaVersion")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.OutputSchemaVersion))
            .withName("OutputSchemaVersion");
        bodyNode.addChildNode(node);
    }
    if (input.Destination !== undefined) {
        var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName("Destination");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlTag = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Tag");
    if (input.Value !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Value").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Value)).withName("Value");
        bodyNode.addChildNode(node);
    }
    if (input.Key !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("ObjectKey").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Key)).withName("Key");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlTagging = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Tagging");
    if (input.TagSet !== undefined) {
        var nodes = serializeAws_restXmlTagSet(input.TagSet, context);
        var containerNode_6 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TagSet");
        nodes.map(function (node) {
            containerNode_6.addChildNode(node);
        });
        bodyNode.addChildNode(containerNode_6);
    }
    return bodyNode;
};
var serializeAws_restXmlTagSet = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlTag(entry, context);
        return node.withName("Tag");
    });
};
var serializeAws_restXmlTargetGrant = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TargetGrant");
    if (input.Grantee !== undefined) {
        var node = serializeAws_restXmlGrantee(input.Grantee, context).withName("Grantee");
        bodyNode.addChildNode(node);
    }
    if (input.Permission !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketLogsPermission")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Permission))
            .withName("Permission");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlTargetGrants = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlTargetGrant(entry, context);
        return node.withName("Grant");
    });
};
var serializeAws_restXmlTopicConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TopicConfiguration");
    if (input.Events !== undefined) {
        var nodes = serializeAws_restXmlEventList(input.Events, context);
        nodes.map(function (node) {
            node = node.withName("Event");
            bodyNode.addChildNode(node);
        });
    }
    if (input.Filter !== undefined) {
        var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName("Filter");
        bodyNode.addChildNode(node);
    }
    if (input.TopicArn !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TopicArn").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.TopicArn)).withName("Topic");
        bodyNode.addChildNode(node);
    }
    if (input.Id !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("NotificationId").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Id)).withName("Id");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlTopicConfigurationList = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlTopicConfiguration(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlTransition = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Transition");
    if (input.Days !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Days").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(String(input.Days))).withName("Days");
        bodyNode.addChildNode(node);
    }
    if (input.Date !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("Date")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Date.toISOString().split(".")[0] + "Z"))
            .withName("Date");
        bodyNode.addChildNode(node);
    }
    if (input.StorageClass !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("TransitionStorageClass")
            .addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.StorageClass))
            .withName("StorageClass");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlTransitionList = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlTransition(entry, context);
        return node.withName("member");
    });
};
var serializeAws_restXmlUserMetadata = function (input, context) {
    return input.map(function (entry) {
        var node = serializeAws_restXmlMetadataEntry(entry, context);
        return node.withName("MetadataEntry");
    });
};
var serializeAws_restXmlVersioningConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("VersioningConfiguration");
    if (input.Status !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("BucketVersioningStatus").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.Status)).withName("Status");
        bodyNode.addChildNode(node);
    }
    if (input.MFADelete !== undefined) {
        var node = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("MFADelete").addChildNode(new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlText(input.MFADelete)).withName("MfaDelete");
        bodyNode.addChildNode(node);
    }
    return bodyNode;
};
var serializeAws_restXmlWebsiteConfiguration = function (input, context) {
    var bodyNode = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("WebsiteConfiguration");
    if (input.ErrorDocument !== undefined) {
        var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName("ErrorDocument");
        bodyNode.addChildNode(node);
    }
    if (input.RedirectAllRequestsTo !== undefined) {
        var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName("RedirectAllRequestsTo");
        bodyNode.addChildNode(node);
    }
    if (input.IndexDocument !== undefined) {
        var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName("IndexDocument");
        bodyNode.addChildNode(node);
    }
    if (input.RoutingRules !== undefined) {
        var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);
        var containerNode_7 = new _aws_sdk_xml_builder__WEBPACK_IMPORTED_MODULE_2__.XmlNode("RoutingRules");
        nodes.map(function (node) {
            containerNode_7.addChildNode(node);
        });
        bodyNode.addChildNode(containerNode_7);
    }
    return bodyNode;
};
var deserializeAws_restXmlAbortIncompleteMultipartUpload = function (output, context) {
    var contents = {
        DaysAfterInitiation: undefined,
    };
    if (output["DaysAfterInitiation"] !== undefined) {
        contents.DaysAfterInitiation = parseInt(output["DaysAfterInitiation"]);
    }
    return contents;
};
var deserializeAws_restXmlAccessControlTranslation = function (output, context) {
    var contents = {
        Owner: undefined,
    };
    if (output["Owner"] !== undefined) {
        contents.Owner = output["Owner"];
    }
    return contents;
};
var deserializeAws_restXmlAllowedHeaders = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_restXmlAllowedMethods = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_restXmlAllowedOrigins = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_restXmlAnalyticsAndOperator = function (output, context) {
    var contents = {
        Prefix: undefined,
        Tags: undefined,
    };
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output.Tag === "") {
        contents.Tags = [];
    }
    if (output["Tag"] !== undefined) {
        contents.Tags = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tag"]), context);
    }
    return contents;
};
var deserializeAws_restXmlAnalyticsConfiguration = function (output, context) {
    var contents = {
        StorageClassAnalysis: undefined,
        Filter: undefined,
        Id: undefined,
    };
    if (output["StorageClassAnalysis"] !== undefined) {
        contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output["StorageClassAnalysis"], context);
    }
    if (output["Filter"] !== undefined) {
        contents.Filter = deserializeAws_restXmlAnalyticsFilter(output["Filter"], context);
    }
    if (output["Id"] !== undefined) {
        contents.Id = output["Id"];
    }
    return contents;
};
var deserializeAws_restXmlAnalyticsConfigurationList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlAnalyticsConfiguration(entry, context); });
};
var deserializeAws_restXmlAnalyticsExportDestination = function (output, context) {
    var contents = {
        S3BucketDestination: undefined,
    };
    if (output["S3BucketDestination"] !== undefined) {
        contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output["S3BucketDestination"], context);
    }
    return contents;
};
var deserializeAws_restXmlAnalyticsFilter = function (output, context) {
    var contents = {
        Prefix: undefined,
        Tag: undefined,
        And: undefined,
    };
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output["Tag"] !== undefined) {
        contents.Tag = deserializeAws_restXmlTag(output["Tag"], context);
    }
    if (output["And"] !== undefined) {
        contents.And = deserializeAws_restXmlAnalyticsAndOperator(output["And"], context);
    }
    return contents;
};
var deserializeAws_restXmlAnalyticsS3BucketDestination = function (output, context) {
    var contents = {
        Prefix: undefined,
        BucketAccountId: undefined,
        Bucket: undefined,
        Format: undefined,
    };
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output["BucketAccountId"] !== undefined) {
        contents.BucketAccountId = output["BucketAccountId"];
    }
    if (output["Bucket"] !== undefined) {
        contents.Bucket = output["Bucket"];
    }
    if (output["Format"] !== undefined) {
        contents.Format = output["Format"];
    }
    return contents;
};
var deserializeAws_restXmlBucket = function (output, context) {
    var contents = {
        CreationDate: undefined,
        Name: undefined,
    };
    if (output["CreationDate"] !== undefined) {
        contents.CreationDate = new Date(output["CreationDate"]);
    }
    if (output["Name"] !== undefined) {
        contents.Name = output["Name"];
    }
    return contents;
};
var deserializeAws_restXmlBuckets = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlBucket(entry, context); });
};
var deserializeAws_restXmlCommonPrefix = function (output, context) {
    var contents = {
        Prefix: undefined,
    };
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    return contents;
};
var deserializeAws_restXmlCommonPrefixList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlCommonPrefix(entry, context); });
};
var deserializeAws_restXmlCondition = function (output, context) {
    var contents = {
        KeyPrefixEquals: undefined,
        HttpErrorCodeReturnedEquals: undefined,
    };
    if (output["KeyPrefixEquals"] !== undefined) {
        contents.KeyPrefixEquals = output["KeyPrefixEquals"];
    }
    if (output["HttpErrorCodeReturnedEquals"] !== undefined) {
        contents.HttpErrorCodeReturnedEquals = output["HttpErrorCodeReturnedEquals"];
    }
    return contents;
};
var deserializeAws_restXmlCopyObjectResult = function (output, context) {
    var contents = {
        ETag: undefined,
        LastModified: undefined,
    };
    if (output["ETag"] !== undefined) {
        contents.ETag = output["ETag"];
    }
    if (output["LastModified"] !== undefined) {
        contents.LastModified = new Date(output["LastModified"]);
    }
    return contents;
};
var deserializeAws_restXmlCopyPartResult = function (output, context) {
    var contents = {
        ETag: undefined,
        LastModified: undefined,
    };
    if (output["ETag"] !== undefined) {
        contents.ETag = output["ETag"];
    }
    if (output["LastModified"] !== undefined) {
        contents.LastModified = new Date(output["LastModified"]);
    }
    return contents;
};
var deserializeAws_restXmlCORSRule = function (output, context) {
    var contents = {
        AllowedHeaders: undefined,
        AllowedOrigins: undefined,
        MaxAgeSeconds: undefined,
        ExposeHeaders: undefined,
        AllowedMethods: undefined,
    };
    if (output.AllowedHeader === "") {
        contents.AllowedHeaders = [];
    }
    if (output["AllowedHeader"] !== undefined) {
        contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["AllowedHeader"]), context);
    }
    if (output.AllowedOrigin === "") {
        contents.AllowedOrigins = [];
    }
    if (output["AllowedOrigin"] !== undefined) {
        contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["AllowedOrigin"]), context);
    }
    if (output["MaxAgeSeconds"] !== undefined) {
        contents.MaxAgeSeconds = parseInt(output["MaxAgeSeconds"]);
    }
    if (output.ExposeHeader === "") {
        contents.ExposeHeaders = [];
    }
    if (output["ExposeHeader"] !== undefined) {
        contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["ExposeHeader"]), context);
    }
    if (output.AllowedMethod === "") {
        contents.AllowedMethods = [];
    }
    if (output["AllowedMethod"] !== undefined) {
        contents.AllowedMethods = deserializeAws_restXmlAllowedMethods((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["AllowedMethod"]), context);
    }
    return contents;
};
var deserializeAws_restXmlCORSRules = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlCORSRule(entry, context); });
};
var deserializeAws_restXmlDefaultRetention = function (output, context) {
    var contents = {
        Days: undefined,
        Mode: undefined,
        Years: undefined,
    };
    if (output["Days"] !== undefined) {
        contents.Days = parseInt(output["Days"]);
    }
    if (output["Mode"] !== undefined) {
        contents.Mode = output["Mode"];
    }
    if (output["Years"] !== undefined) {
        contents.Years = parseInt(output["Years"]);
    }
    return contents;
};
var deserializeAws_restXmlDeletedObject = function (output, context) {
    var contents = {
        DeleteMarker: undefined,
        Key: undefined,
        VersionId: undefined,
        DeleteMarkerVersionId: undefined,
    };
    if (output["DeleteMarker"] !== undefined) {
        contents.DeleteMarker = output["DeleteMarker"] == "true";
    }
    if (output["Key"] !== undefined) {
        contents.Key = output["Key"];
    }
    if (output["VersionId"] !== undefined) {
        contents.VersionId = output["VersionId"];
    }
    if (output["DeleteMarkerVersionId"] !== undefined) {
        contents.DeleteMarkerVersionId = output["DeleteMarkerVersionId"];
    }
    return contents;
};
var deserializeAws_restXmlDeletedObjects = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlDeletedObject(entry, context); });
};
var deserializeAws_restXmlDeleteMarkerEntry = function (output, context) {
    var contents = {
        VersionId: undefined,
        LastModified: undefined,
        Key: undefined,
        IsLatest: undefined,
        Owner: undefined,
    };
    if (output["VersionId"] !== undefined) {
        contents.VersionId = output["VersionId"];
    }
    if (output["LastModified"] !== undefined) {
        contents.LastModified = new Date(output["LastModified"]);
    }
    if (output["Key"] !== undefined) {
        contents.Key = output["Key"];
    }
    if (output["IsLatest"] !== undefined) {
        contents.IsLatest = output["IsLatest"] == "true";
    }
    if (output["Owner"] !== undefined) {
        contents.Owner = deserializeAws_restXmlOwner(output["Owner"], context);
    }
    return contents;
};
var deserializeAws_restXmlDeleteMarkerReplication = function (output, context) {
    var contents = {
        Status: undefined,
    };
    if (output["Status"] !== undefined) {
        contents.Status = output["Status"];
    }
    return contents;
};
var deserializeAws_restXmlDeleteMarkers = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlDeleteMarkerEntry(entry, context); });
};
var deserializeAws_restXmlDestination = function (output, context) {
    var contents = {
        EncryptionConfiguration: undefined,
        Bucket: undefined,
        Account: undefined,
        StorageClass: undefined,
        Metrics: undefined,
        AccessControlTranslation: undefined,
        ReplicationTime: undefined,
    };
    if (output["EncryptionConfiguration"] !== undefined) {
        contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output["EncryptionConfiguration"], context);
    }
    if (output["Bucket"] !== undefined) {
        contents.Bucket = output["Bucket"];
    }
    if (output["Account"] !== undefined) {
        contents.Account = output["Account"];
    }
    if (output["StorageClass"] !== undefined) {
        contents.StorageClass = output["StorageClass"];
    }
    if (output["Metrics"] !== undefined) {
        contents.Metrics = deserializeAws_restXmlMetrics(output["Metrics"], context);
    }
    if (output["AccessControlTranslation"] !== undefined) {
        contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output["AccessControlTranslation"], context);
    }
    if (output["ReplicationTime"] !== undefined) {
        contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output["ReplicationTime"], context);
    }
    return contents;
};
var deserializeAws_restXmlEncryptionConfiguration = function (output, context) {
    var contents = {
        ReplicaKmsKeyID: undefined,
    };
    if (output["ReplicaKmsKeyID"] !== undefined) {
        contents.ReplicaKmsKeyID = output["ReplicaKmsKeyID"];
    }
    return contents;
};
var deserializeAws_restXml_Error = function (output, context) {
    var contents = {
        Message: undefined,
        Code: undefined,
        Key: undefined,
        VersionId: undefined,
    };
    if (output["Message"] !== undefined) {
        contents.Message = output["Message"];
    }
    if (output["Code"] !== undefined) {
        contents.Code = output["Code"];
    }
    if (output["Key"] !== undefined) {
        contents.Key = output["Key"];
    }
    if (output["VersionId"] !== undefined) {
        contents.VersionId = output["VersionId"];
    }
    return contents;
};
var deserializeAws_restXmlErrorDocument = function (output, context) {
    var contents = {
        Key: undefined,
    };
    if (output["Key"] !== undefined) {
        contents.Key = output["Key"];
    }
    return contents;
};
var deserializeAws_restXmlErrors = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXml_Error(entry, context); });
};
var deserializeAws_restXmlEventList = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_restXmlExistingObjectReplication = function (output, context) {
    var contents = {
        Status: undefined,
    };
    if (output["Status"] !== undefined) {
        contents.Status = output["Status"];
    }
    return contents;
};
var deserializeAws_restXmlExposeHeaders = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_restXmlFilterRule = function (output, context) {
    var contents = {
        Name: undefined,
        Value: undefined,
    };
    if (output["Name"] !== undefined) {
        contents.Name = output["Name"];
    }
    if (output["Value"] !== undefined) {
        contents.Value = output["Value"];
    }
    return contents;
};
var deserializeAws_restXmlFilterRuleList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlFilterRule(entry, context); });
};
var deserializeAws_restXmlGrant = function (output, context) {
    var contents = {
        Grantee: undefined,
        Permission: undefined,
    };
    if (output["Grantee"] !== undefined) {
        contents.Grantee = deserializeAws_restXmlGrantee(output["Grantee"], context);
    }
    if (output["Permission"] !== undefined) {
        contents.Permission = output["Permission"];
    }
    return contents;
};
var deserializeAws_restXmlGrantee = function (output, context) {
    var contents = {
        EmailAddress: undefined,
        DisplayName: undefined,
        URI: undefined,
        ID: undefined,
        Type: undefined,
    };
    if (output["EmailAddress"] !== undefined) {
        contents.EmailAddress = output["EmailAddress"];
    }
    if (output["DisplayName"] !== undefined) {
        contents.DisplayName = output["DisplayName"];
    }
    if (output["URI"] !== undefined) {
        contents.URI = output["URI"];
    }
    if (output["ID"] !== undefined) {
        contents.ID = output["ID"];
    }
    if (output["xsi:type"] !== undefined) {
        contents.Type = output["xsi:type"];
    }
    return contents;
};
var deserializeAws_restXmlGrants = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlGrant(entry, context); });
};
var deserializeAws_restXmlIndexDocument = function (output, context) {
    var contents = {
        Suffix: undefined,
    };
    if (output["Suffix"] !== undefined) {
        contents.Suffix = output["Suffix"];
    }
    return contents;
};
var deserializeAws_restXmlInitiator = function (output, context) {
    var contents = {
        ID: undefined,
        DisplayName: undefined,
    };
    if (output["ID"] !== undefined) {
        contents.ID = output["ID"];
    }
    if (output["DisplayName"] !== undefined) {
        contents.DisplayName = output["DisplayName"];
    }
    return contents;
};
var deserializeAws_restXmlInventoryConfiguration = function (output, context) {
    var contents = {
        IncludedObjectVersions: undefined,
        IsEnabled: undefined,
        Schedule: undefined,
        Filter: undefined,
        OptionalFields: undefined,
        Destination: undefined,
        Id: undefined,
    };
    if (output["IncludedObjectVersions"] !== undefined) {
        contents.IncludedObjectVersions = output["IncludedObjectVersions"];
    }
    if (output["IsEnabled"] !== undefined) {
        contents.IsEnabled = output["IsEnabled"] == "true";
    }
    if (output["Schedule"] !== undefined) {
        contents.Schedule = deserializeAws_restXmlInventorySchedule(output["Schedule"], context);
    }
    if (output["Filter"] !== undefined) {
        contents.Filter = deserializeAws_restXmlInventoryFilter(output["Filter"], context);
    }
    if (output.OptionalFields === "") {
        contents.OptionalFields = [];
    }
    if (output["OptionalFields"] !== undefined && output["OptionalFields"]["Field"] !== undefined) {
        contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["OptionalFields"]["Field"]), context);
    }
    if (output["Destination"] !== undefined) {
        contents.Destination = deserializeAws_restXmlInventoryDestination(output["Destination"], context);
    }
    if (output["Id"] !== undefined) {
        contents.Id = output["Id"];
    }
    return contents;
};
var deserializeAws_restXmlInventoryConfigurationList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlInventoryConfiguration(entry, context); });
};
var deserializeAws_restXmlInventoryDestination = function (output, context) {
    var contents = {
        S3BucketDestination: undefined,
    };
    if (output["S3BucketDestination"] !== undefined) {
        contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output["S3BucketDestination"], context);
    }
    return contents;
};
var deserializeAws_restXmlInventoryEncryption = function (output, context) {
    var contents = {
        SSEKMS: undefined,
        SSES3: undefined,
    };
    if (output["SSE-KMS"] !== undefined) {
        contents.SSEKMS = deserializeAws_restXmlSSEKMS(output["SSE-KMS"], context);
    }
    if (output["SSE-S3"] !== undefined) {
        contents.SSES3 = deserializeAws_restXmlSSES3(output["SSE-S3"], context);
    }
    return contents;
};
var deserializeAws_restXmlInventoryFilter = function (output, context) {
    var contents = {
        Prefix: undefined,
    };
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    return contents;
};
var deserializeAws_restXmlInventoryOptionalFields = function (output, context) {
    return (output || []).map(function (entry) { return entry; });
};
var deserializeAws_restXmlInventoryS3BucketDestination = function (output, context) {
    var contents = {
        Format: undefined,
        Encryption: undefined,
        Prefix: undefined,
        Bucket: undefined,
        AccountId: undefined,
    };
    if (output["Format"] !== undefined) {
        contents.Format = output["Format"];
    }
    if (output["Encryption"] !== undefined) {
        contents.Encryption = deserializeAws_restXmlInventoryEncryption(output["Encryption"], context);
    }
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output["Bucket"] !== undefined) {
        contents.Bucket = output["Bucket"];
    }
    if (output["AccountId"] !== undefined) {
        contents.AccountId = output["AccountId"];
    }
    return contents;
};
var deserializeAws_restXmlInventorySchedule = function (output, context) {
    var contents = {
        Frequency: undefined,
    };
    if (output["Frequency"] !== undefined) {
        contents.Frequency = output["Frequency"];
    }
    return contents;
};
var deserializeAws_restXmlLambdaFunctionConfiguration = function (output, context) {
    var contents = {
        Events: undefined,
        Filter: undefined,
        LambdaFunctionArn: undefined,
        Id: undefined,
    };
    if (output.Event === "") {
        contents.Events = [];
    }
    if (output["Event"] !== undefined) {
        contents.Events = deserializeAws_restXmlEventList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Event"]), context);
    }
    if (output["Filter"] !== undefined) {
        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output["Filter"], context);
    }
    if (output["CloudFunction"] !== undefined) {
        contents.LambdaFunctionArn = output["CloudFunction"];
    }
    if (output["Id"] !== undefined) {
        contents.Id = output["Id"];
    }
    return contents;
};
var deserializeAws_restXmlLambdaFunctionConfigurationList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context); });
};
var deserializeAws_restXmlLifecycleExpiration = function (output, context) {
    var contents = {
        Days: undefined,
        ExpiredObjectDeleteMarker: undefined,
        Date: undefined,
    };
    if (output["Days"] !== undefined) {
        contents.Days = parseInt(output["Days"]);
    }
    if (output["ExpiredObjectDeleteMarker"] !== undefined) {
        contents.ExpiredObjectDeleteMarker = output["ExpiredObjectDeleteMarker"] == "true";
    }
    if (output["Date"] !== undefined) {
        contents.Date = new Date(output["Date"]);
    }
    return contents;
};
var deserializeAws_restXmlLifecycleRule = function (output, context) {
    var contents = {
        NoncurrentVersionTransitions: undefined,
        Expiration: undefined,
        ID: undefined,
        Transitions: undefined,
        Prefix: undefined,
        NoncurrentVersionExpiration: undefined,
        AbortIncompleteMultipartUpload: undefined,
        Filter: undefined,
        Status: undefined,
    };
    if (output.NoncurrentVersionTransition === "") {
        contents.NoncurrentVersionTransitions = [];
    }
    if (output["NoncurrentVersionTransition"] !== undefined) {
        contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["NoncurrentVersionTransition"]), context);
    }
    if (output["Expiration"] !== undefined) {
        contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output["Expiration"], context);
    }
    if (output["ID"] !== undefined) {
        contents.ID = output["ID"];
    }
    if (output.Transition === "") {
        contents.Transitions = [];
    }
    if (output["Transition"] !== undefined) {
        contents.Transitions = deserializeAws_restXmlTransitionList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Transition"]), context);
    }
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output["NoncurrentVersionExpiration"] !== undefined) {
        contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output["NoncurrentVersionExpiration"], context);
    }
    if (output["AbortIncompleteMultipartUpload"] !== undefined) {
        contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output["AbortIncompleteMultipartUpload"], context);
    }
    if (output["Filter"] !== undefined) {
        contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output["Filter"], context);
    }
    if (output["Status"] !== undefined) {
        contents.Status = output["Status"];
    }
    return contents;
};
var deserializeAws_restXmlLifecycleRuleAndOperator = function (output, context) {
    var contents = {
        Prefix: undefined,
        Tags: undefined,
    };
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output.Tag === "") {
        contents.Tags = [];
    }
    if (output["Tag"] !== undefined) {
        contents.Tags = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tag"]), context);
    }
    return contents;
};
var deserializeAws_restXmlLifecycleRuleFilter = function (output, context) {
    var contents = {
        And: undefined,
        Prefix: undefined,
        Tag: undefined,
    };
    if (output["And"] !== undefined) {
        contents.And = deserializeAws_restXmlLifecycleRuleAndOperator(output["And"], context);
    }
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output["Tag"] !== undefined) {
        contents.Tag = deserializeAws_restXmlTag(output["Tag"], context);
    }
    return contents;
};
var deserializeAws_restXmlLifecycleRules = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlLifecycleRule(entry, context); });
};
var deserializeAws_restXmlLoggingEnabled = function (output, context) {
    var contents = {
        TargetGrants: undefined,
        TargetBucket: undefined,
        TargetPrefix: undefined,
    };
    if (output.TargetGrants === "") {
        contents.TargetGrants = [];
    }
    if (output["TargetGrants"] !== undefined && output["TargetGrants"]["Grant"] !== undefined) {
        contents.TargetGrants = deserializeAws_restXmlTargetGrants((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["TargetGrants"]["Grant"]), context);
    }
    if (output["TargetBucket"] !== undefined) {
        contents.TargetBucket = output["TargetBucket"];
    }
    if (output["TargetPrefix"] !== undefined) {
        contents.TargetPrefix = output["TargetPrefix"];
    }
    return contents;
};
var deserializeAws_restXmlMetrics = function (output, context) {
    var contents = {
        Status: undefined,
        EventThreshold: undefined,
    };
    if (output["Status"] !== undefined) {
        contents.Status = output["Status"];
    }
    if (output["EventThreshold"] !== undefined) {
        contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output["EventThreshold"], context);
    }
    return contents;
};
var deserializeAws_restXmlMetricsAndOperator = function (output, context) {
    var contents = {
        Prefix: undefined,
        Tags: undefined,
    };
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output.Tag === "") {
        contents.Tags = [];
    }
    if (output["Tag"] !== undefined) {
        contents.Tags = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tag"]), context);
    }
    return contents;
};
var deserializeAws_restXmlMetricsConfiguration = function (output, context) {
    var contents = {
        Id: undefined,
        Filter: undefined,
    };
    if (output["Id"] !== undefined) {
        contents.Id = output["Id"];
    }
    if (output["Filter"] !== undefined) {
        contents.Filter = deserializeAws_restXmlMetricsFilter(output["Filter"], context);
    }
    return contents;
};
var deserializeAws_restXmlMetricsConfigurationList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlMetricsConfiguration(entry, context); });
};
var deserializeAws_restXmlMetricsFilter = function (output, context) {
    var contents = {
        And: undefined,
        Prefix: undefined,
        Tag: undefined,
    };
    if (output["And"] !== undefined) {
        contents.And = deserializeAws_restXmlMetricsAndOperator(output["And"], context);
    }
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output["Tag"] !== undefined) {
        contents.Tag = deserializeAws_restXmlTag(output["Tag"], context);
    }
    return contents;
};
var deserializeAws_restXmlMultipartUpload = function (output, context) {
    var contents = {
        Initiator: undefined,
        UploadId: undefined,
        Key: undefined,
        Owner: undefined,
        StorageClass: undefined,
        Initiated: undefined,
    };
    if (output["Initiator"] !== undefined) {
        contents.Initiator = deserializeAws_restXmlInitiator(output["Initiator"], context);
    }
    if (output["UploadId"] !== undefined) {
        contents.UploadId = output["UploadId"];
    }
    if (output["Key"] !== undefined) {
        contents.Key = output["Key"];
    }
    if (output["Owner"] !== undefined) {
        contents.Owner = deserializeAws_restXmlOwner(output["Owner"], context);
    }
    if (output["StorageClass"] !== undefined) {
        contents.StorageClass = output["StorageClass"];
    }
    if (output["Initiated"] !== undefined) {
        contents.Initiated = new Date(output["Initiated"]);
    }
    return contents;
};
var deserializeAws_restXmlMultipartUploadList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlMultipartUpload(entry, context); });
};
var deserializeAws_restXmlNoncurrentVersionExpiration = function (output, context) {
    var contents = {
        NoncurrentDays: undefined,
    };
    if (output["NoncurrentDays"] !== undefined) {
        contents.NoncurrentDays = parseInt(output["NoncurrentDays"]);
    }
    return contents;
};
var deserializeAws_restXmlNoncurrentVersionTransition = function (output, context) {
    var contents = {
        StorageClass: undefined,
        NoncurrentDays: undefined,
    };
    if (output["StorageClass"] !== undefined) {
        contents.StorageClass = output["StorageClass"];
    }
    if (output["NoncurrentDays"] !== undefined) {
        contents.NoncurrentDays = parseInt(output["NoncurrentDays"]);
    }
    return contents;
};
var deserializeAws_restXmlNoncurrentVersionTransitionList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlNoncurrentVersionTransition(entry, context); });
};
var deserializeAws_restXmlNotificationConfigurationFilter = function (output, context) {
    var contents = {
        Key: undefined,
    };
    if (output["S3Key"] !== undefined) {
        contents.Key = deserializeAws_restXmlS3KeyFilter(output["S3Key"], context);
    }
    return contents;
};
var deserializeAws_restXml_Object = function (output, context) {
    var contents = {
        Size: undefined,
        ETag: undefined,
        Owner: undefined,
        StorageClass: undefined,
        Key: undefined,
        LastModified: undefined,
    };
    if (output["Size"] !== undefined) {
        contents.Size = parseInt(output["Size"]);
    }
    if (output["ETag"] !== undefined) {
        contents.ETag = output["ETag"];
    }
    if (output["Owner"] !== undefined) {
        contents.Owner = deserializeAws_restXmlOwner(output["Owner"], context);
    }
    if (output["StorageClass"] !== undefined) {
        contents.StorageClass = output["StorageClass"];
    }
    if (output["Key"] !== undefined) {
        contents.Key = output["Key"];
    }
    if (output["LastModified"] !== undefined) {
        contents.LastModified = new Date(output["LastModified"]);
    }
    return contents;
};
var deserializeAws_restXmlObjectList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXml_Object(entry, context); });
};
var deserializeAws_restXmlObjectLockConfiguration = function (output, context) {
    var contents = {
        ObjectLockEnabled: undefined,
        Rule: undefined,
    };
    if (output["ObjectLockEnabled"] !== undefined) {
        contents.ObjectLockEnabled = output["ObjectLockEnabled"];
    }
    if (output["Rule"] !== undefined) {
        contents.Rule = deserializeAws_restXmlObjectLockRule(output["Rule"], context);
    }
    return contents;
};
var deserializeAws_restXmlObjectLockLegalHold = function (output, context) {
    var contents = {
        Status: undefined,
    };
    if (output["Status"] !== undefined) {
        contents.Status = output["Status"];
    }
    return contents;
};
var deserializeAws_restXmlObjectLockRetention = function (output, context) {
    var contents = {
        Mode: undefined,
        RetainUntilDate: undefined,
    };
    if (output["Mode"] !== undefined) {
        contents.Mode = output["Mode"];
    }
    if (output["RetainUntilDate"] !== undefined) {
        contents.RetainUntilDate = new Date(output["RetainUntilDate"]);
    }
    return contents;
};
var deserializeAws_restXmlObjectLockRule = function (output, context) {
    var contents = {
        DefaultRetention: undefined,
    };
    if (output["DefaultRetention"] !== undefined) {
        contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output["DefaultRetention"], context);
    }
    return contents;
};
var deserializeAws_restXmlObjectVersion = function (output, context) {
    var contents = {
        Size: undefined,
        Key: undefined,
        StorageClass: undefined,
        Owner: undefined,
        IsLatest: undefined,
        ETag: undefined,
        LastModified: undefined,
        VersionId: undefined,
    };
    if (output["Size"] !== undefined) {
        contents.Size = parseInt(output["Size"]);
    }
    if (output["Key"] !== undefined) {
        contents.Key = output["Key"];
    }
    if (output["StorageClass"] !== undefined) {
        contents.StorageClass = output["StorageClass"];
    }
    if (output["Owner"] !== undefined) {
        contents.Owner = deserializeAws_restXmlOwner(output["Owner"], context);
    }
    if (output["IsLatest"] !== undefined) {
        contents.IsLatest = output["IsLatest"] == "true";
    }
    if (output["ETag"] !== undefined) {
        contents.ETag = output["ETag"];
    }
    if (output["LastModified"] !== undefined) {
        contents.LastModified = new Date(output["LastModified"]);
    }
    if (output["VersionId"] !== undefined) {
        contents.VersionId = output["VersionId"];
    }
    return contents;
};
var deserializeAws_restXmlObjectVersionList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlObjectVersion(entry, context); });
};
var deserializeAws_restXmlOwner = function (output, context) {
    var contents = {
        DisplayName: undefined,
        ID: undefined,
    };
    if (output["DisplayName"] !== undefined) {
        contents.DisplayName = output["DisplayName"];
    }
    if (output["ID"] !== undefined) {
        contents.ID = output["ID"];
    }
    return contents;
};
var deserializeAws_restXmlOwnershipControls = function (output, context) {
    var contents = {
        Rules: undefined,
    };
    if (output.Rule === "") {
        contents.Rules = [];
    }
    if (output["Rule"] !== undefined) {
        contents.Rules = deserializeAws_restXmlOwnershipControlsRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Rule"]), context);
    }
    return contents;
};
var deserializeAws_restXmlOwnershipControlsRule = function (output, context) {
    var contents = {
        ObjectOwnership: undefined,
    };
    if (output["ObjectOwnership"] !== undefined) {
        contents.ObjectOwnership = output["ObjectOwnership"];
    }
    return contents;
};
var deserializeAws_restXmlOwnershipControlsRules = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlOwnershipControlsRule(entry, context); });
};
var deserializeAws_restXmlPart = function (output, context) {
    var contents = {
        Size: undefined,
        LastModified: undefined,
        PartNumber: undefined,
        ETag: undefined,
    };
    if (output["Size"] !== undefined) {
        contents.Size = parseInt(output["Size"]);
    }
    if (output["LastModified"] !== undefined) {
        contents.LastModified = new Date(output["LastModified"]);
    }
    if (output["PartNumber"] !== undefined) {
        contents.PartNumber = parseInt(output["PartNumber"]);
    }
    if (output["ETag"] !== undefined) {
        contents.ETag = output["ETag"];
    }
    return contents;
};
var deserializeAws_restXmlParts = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlPart(entry, context); });
};
var deserializeAws_restXmlPolicyStatus = function (output, context) {
    var contents = {
        IsPublic: undefined,
    };
    if (output["IsPublic"] !== undefined) {
        contents.IsPublic = output["IsPublic"] == "true";
    }
    return contents;
};
var deserializeAws_restXmlPublicAccessBlockConfiguration = function (output, context) {
    var contents = {
        BlockPublicPolicy: undefined,
        BlockPublicAcls: undefined,
        RestrictPublicBuckets: undefined,
        IgnorePublicAcls: undefined,
    };
    if (output["BlockPublicPolicy"] !== undefined) {
        contents.BlockPublicPolicy = output["BlockPublicPolicy"] == "true";
    }
    if (output["BlockPublicAcls"] !== undefined) {
        contents.BlockPublicAcls = output["BlockPublicAcls"] == "true";
    }
    if (output["RestrictPublicBuckets"] !== undefined) {
        contents.RestrictPublicBuckets = output["RestrictPublicBuckets"] == "true";
    }
    if (output["IgnorePublicAcls"] !== undefined) {
        contents.IgnorePublicAcls = output["IgnorePublicAcls"] == "true";
    }
    return contents;
};
var deserializeAws_restXmlQueueConfiguration = function (output, context) {
    var contents = {
        Events: undefined,
        Id: undefined,
        Filter: undefined,
        QueueArn: undefined,
    };
    if (output.Event === "") {
        contents.Events = [];
    }
    if (output["Event"] !== undefined) {
        contents.Events = deserializeAws_restXmlEventList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Event"]), context);
    }
    if (output["Id"] !== undefined) {
        contents.Id = output["Id"];
    }
    if (output["Filter"] !== undefined) {
        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output["Filter"], context);
    }
    if (output["Queue"] !== undefined) {
        contents.QueueArn = output["Queue"];
    }
    return contents;
};
var deserializeAws_restXmlQueueConfigurationList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlQueueConfiguration(entry, context); });
};
var deserializeAws_restXmlRedirect = function (output, context) {
    var contents = {
        HttpRedirectCode: undefined,
        ReplaceKeyPrefixWith: undefined,
        Protocol: undefined,
        HostName: undefined,
        ReplaceKeyWith: undefined,
    };
    if (output["HttpRedirectCode"] !== undefined) {
        contents.HttpRedirectCode = output["HttpRedirectCode"];
    }
    if (output["ReplaceKeyPrefixWith"] !== undefined) {
        contents.ReplaceKeyPrefixWith = output["ReplaceKeyPrefixWith"];
    }
    if (output["Protocol"] !== undefined) {
        contents.Protocol = output["Protocol"];
    }
    if (output["HostName"] !== undefined) {
        contents.HostName = output["HostName"];
    }
    if (output["ReplaceKeyWith"] !== undefined) {
        contents.ReplaceKeyWith = output["ReplaceKeyWith"];
    }
    return contents;
};
var deserializeAws_restXmlRedirectAllRequestsTo = function (output, context) {
    var contents = {
        Protocol: undefined,
        HostName: undefined,
    };
    if (output["Protocol"] !== undefined) {
        contents.Protocol = output["Protocol"];
    }
    if (output["HostName"] !== undefined) {
        contents.HostName = output["HostName"];
    }
    return contents;
};
var deserializeAws_restXmlReplicationConfiguration = function (output, context) {
    var contents = {
        Role: undefined,
        Rules: undefined,
    };
    if (output["Role"] !== undefined) {
        contents.Role = output["Role"];
    }
    if (output.Rule === "") {
        contents.Rules = [];
    }
    if (output["Rule"] !== undefined) {
        contents.Rules = deserializeAws_restXmlReplicationRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Rule"]), context);
    }
    return contents;
};
var deserializeAws_restXmlReplicationRule = function (output, context) {
    var contents = {
        Prefix: undefined,
        ID: undefined,
        SourceSelectionCriteria: undefined,
        DeleteMarkerReplication: undefined,
        Filter: undefined,
        Priority: undefined,
        Status: undefined,
        ExistingObjectReplication: undefined,
        Destination: undefined,
    };
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output["ID"] !== undefined) {
        contents.ID = output["ID"];
    }
    if (output["SourceSelectionCriteria"] !== undefined) {
        contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output["SourceSelectionCriteria"], context);
    }
    if (output["DeleteMarkerReplication"] !== undefined) {
        contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output["DeleteMarkerReplication"], context);
    }
    if (output["Filter"] !== undefined) {
        contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output["Filter"], context);
    }
    if (output["Priority"] !== undefined) {
        contents.Priority = parseInt(output["Priority"]);
    }
    if (output["Status"] !== undefined) {
        contents.Status = output["Status"];
    }
    if (output["ExistingObjectReplication"] !== undefined) {
        contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output["ExistingObjectReplication"], context);
    }
    if (output["Destination"] !== undefined) {
        contents.Destination = deserializeAws_restXmlDestination(output["Destination"], context);
    }
    return contents;
};
var deserializeAws_restXmlReplicationRuleAndOperator = function (output, context) {
    var contents = {
        Prefix: undefined,
        Tags: undefined,
    };
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output.Tag === "") {
        contents.Tags = [];
    }
    if (output["Tag"] !== undefined) {
        contents.Tags = deserializeAws_restXmlTagSet((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Tag"]), context);
    }
    return contents;
};
var deserializeAws_restXmlReplicationRuleFilter = function (output, context) {
    var contents = {
        Tag: undefined,
        Prefix: undefined,
        And: undefined,
    };
    if (output["Tag"] !== undefined) {
        contents.Tag = deserializeAws_restXmlTag(output["Tag"], context);
    }
    if (output["Prefix"] !== undefined) {
        contents.Prefix = output["Prefix"];
    }
    if (output["And"] !== undefined) {
        contents.And = deserializeAws_restXmlReplicationRuleAndOperator(output["And"], context);
    }
    return contents;
};
var deserializeAws_restXmlReplicationRules = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlReplicationRule(entry, context); });
};
var deserializeAws_restXmlReplicationTime = function (output, context) {
    var contents = {
        Time: undefined,
        Status: undefined,
    };
    if (output["Time"] !== undefined) {
        contents.Time = deserializeAws_restXmlReplicationTimeValue(output["Time"], context);
    }
    if (output["Status"] !== undefined) {
        contents.Status = output["Status"];
    }
    return contents;
};
var deserializeAws_restXmlReplicationTimeValue = function (output, context) {
    var contents = {
        Minutes: undefined,
    };
    if (output["Minutes"] !== undefined) {
        contents.Minutes = parseInt(output["Minutes"]);
    }
    return contents;
};
var deserializeAws_restXmlRoutingRule = function (output, context) {
    var contents = {
        Redirect: undefined,
        Condition: undefined,
    };
    if (output["Redirect"] !== undefined) {
        contents.Redirect = deserializeAws_restXmlRedirect(output["Redirect"], context);
    }
    if (output["Condition"] !== undefined) {
        contents.Condition = deserializeAws_restXmlCondition(output["Condition"], context);
    }
    return contents;
};
var deserializeAws_restXmlRoutingRules = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlRoutingRule(entry, context); });
};
var deserializeAws_restXmlS3KeyFilter = function (output, context) {
    var contents = {
        FilterRules: undefined,
    };
    if (output.FilterRule === "") {
        contents.FilterRules = [];
    }
    if (output["FilterRule"] !== undefined) {
        contents.FilterRules = deserializeAws_restXmlFilterRuleList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["FilterRule"]), context);
    }
    return contents;
};
var deserializeAws_restXmlServerSideEncryptionByDefault = function (output, context) {
    var contents = {
        SSEAlgorithm: undefined,
        KMSMasterKeyID: undefined,
    };
    if (output["SSEAlgorithm"] !== undefined) {
        contents.SSEAlgorithm = output["SSEAlgorithm"];
    }
    if (output["KMSMasterKeyID"] !== undefined) {
        contents.KMSMasterKeyID = output["KMSMasterKeyID"];
    }
    return contents;
};
var deserializeAws_restXmlServerSideEncryptionConfiguration = function (output, context) {
    var contents = {
        Rules: undefined,
    };
    if (output.Rule === "") {
        contents.Rules = [];
    }
    if (output["Rule"] !== undefined) {
        contents.Rules = deserializeAws_restXmlServerSideEncryptionRules((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Rule"]), context);
    }
    return contents;
};
var deserializeAws_restXmlServerSideEncryptionRule = function (output, context) {
    var contents = {
        ApplyServerSideEncryptionByDefault: undefined,
    };
    if (output["ApplyServerSideEncryptionByDefault"] !== undefined) {
        contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output["ApplyServerSideEncryptionByDefault"], context);
    }
    return contents;
};
var deserializeAws_restXmlServerSideEncryptionRules = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlServerSideEncryptionRule(entry, context); });
};
var deserializeAws_restXmlSourceSelectionCriteria = function (output, context) {
    var contents = {
        SseKmsEncryptedObjects: undefined,
    };
    if (output["SseKmsEncryptedObjects"] !== undefined) {
        contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output["SseKmsEncryptedObjects"], context);
    }
    return contents;
};
var deserializeAws_restXmlSSEKMS = function (output, context) {
    var contents = {
        KeyId: undefined,
    };
    if (output["KeyId"] !== undefined) {
        contents.KeyId = output["KeyId"];
    }
    return contents;
};
var deserializeAws_restXmlSseKmsEncryptedObjects = function (output, context) {
    var contents = {
        Status: undefined,
    };
    if (output["Status"] !== undefined) {
        contents.Status = output["Status"];
    }
    return contents;
};
var deserializeAws_restXmlSSES3 = function (output, context) {
    var contents = {};
    return contents;
};
var deserializeAws_restXmlStorageClassAnalysis = function (output, context) {
    var contents = {
        DataExport: undefined,
    };
    if (output["DataExport"] !== undefined) {
        contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output["DataExport"], context);
    }
    return contents;
};
var deserializeAws_restXmlStorageClassAnalysisDataExport = function (output, context) {
    var contents = {
        OutputSchemaVersion: undefined,
        Destination: undefined,
    };
    if (output["OutputSchemaVersion"] !== undefined) {
        contents.OutputSchemaVersion = output["OutputSchemaVersion"];
    }
    if (output["Destination"] !== undefined) {
        contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output["Destination"], context);
    }
    return contents;
};
var deserializeAws_restXmlTag = function (output, context) {
    var contents = {
        Value: undefined,
        Key: undefined,
    };
    if (output["Value"] !== undefined) {
        contents.Value = output["Value"];
    }
    if (output["Key"] !== undefined) {
        contents.Key = output["Key"];
    }
    return contents;
};
var deserializeAws_restXmlTagSet = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlTag(entry, context); });
};
var deserializeAws_restXmlTargetGrant = function (output, context) {
    var contents = {
        Grantee: undefined,
        Permission: undefined,
    };
    if (output["Grantee"] !== undefined) {
        contents.Grantee = deserializeAws_restXmlGrantee(output["Grantee"], context);
    }
    if (output["Permission"] !== undefined) {
        contents.Permission = output["Permission"];
    }
    return contents;
};
var deserializeAws_restXmlTargetGrants = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlTargetGrant(entry, context); });
};
var deserializeAws_restXmlTopicConfiguration = function (output, context) {
    var contents = {
        Events: undefined,
        Filter: undefined,
        TopicArn: undefined,
        Id: undefined,
    };
    if (output.Event === "") {
        contents.Events = [];
    }
    if (output["Event"] !== undefined) {
        contents.Events = deserializeAws_restXmlEventList((0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getArrayIfSingleItem)(output["Event"]), context);
    }
    if (output["Filter"] !== undefined) {
        contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output["Filter"], context);
    }
    if (output["Topic"] !== undefined) {
        contents.TopicArn = output["Topic"];
    }
    if (output["Id"] !== undefined) {
        contents.Id = output["Id"];
    }
    return contents;
};
var deserializeAws_restXmlTopicConfigurationList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlTopicConfiguration(entry, context); });
};
var deserializeAws_restXmlTransition = function (output, context) {
    var contents = {
        Days: undefined,
        Date: undefined,
        StorageClass: undefined,
    };
    if (output["Days"] !== undefined) {
        contents.Days = parseInt(output["Days"]);
    }
    if (output["Date"] !== undefined) {
        contents.Date = new Date(output["Date"]);
    }
    if (output["StorageClass"] !== undefined) {
        contents.StorageClass = output["StorageClass"];
    }
    return contents;
};
var deserializeAws_restXmlTransitionList = function (output, context) {
    return (output || []).map(function (entry) { return deserializeAws_restXmlTransition(entry, context); });
};
var deserializeMetadata = function (output) { return ({
    httpStatusCode: output.statusCode,
    httpHeaders: output.headers,
    requestId: output.headers["x-amzn-requestid"],
}); };
// Collect low-level response body stream to Uint8Array.
var collectBody = function (streamBody, context) {
    if (streamBody === void 0) { streamBody = new Uint8Array(); }
    if (streamBody instanceof Uint8Array) {
        return Promise.resolve(streamBody);
    }
    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());
};
// Encode Uint8Array data into string with utf-8.
var collectBodyString = function (streamBody, context) {
    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });
};
var isSerializableHeaderValue = function (value) {
    return value !== undefined &&
        value !== "" &&
        (!Object.getOwnPropertyNames(value).includes("length") || value.length != 0) &&
        (!Object.getOwnPropertyNames(value).includes("size") || value.size != 0);
};
var decodeEscapedXML = function (str) {
    return str
        .replace(/&amp;/g, "&")
        .replace(/&apos;/g, "'")
        .replace(/&quot;/g, '"')
        .replace(/&gt;/g, ">")
        .replace(/&lt;/g, "<");
};
var parseBody = function (streamBody, context) {
    return collectBodyString(streamBody, context).then(function (encoded) {
        if (encoded.length) {
            var parsedObj = (0,fast_xml_parser__WEBPACK_IMPORTED_MODULE_3__.parse)(encoded, {
                attributeNamePrefix: "",
                ignoreAttributes: false,
                parseNodeValue: false,
                tagValueProcessor: function (val, tagName) { return decodeEscapedXML(val); },
            });
            var textNodeName = "#text";
            var key = Object.keys(parsedObj)[0];
            var parsedObjToReturn = parsedObj[key];
            if (parsedObjToReturn[textNodeName]) {
                parsedObjToReturn[key] = parsedObjToReturn[textNodeName];
                delete parsedObjToReturn[textNodeName];
            }
            return (0,_aws_sdk_smithy_client__WEBPACK_IMPORTED_MODULE_1__.getValueFromTextNode)(parsedObjToReturn);
        }
        return {};
    });
};
var loadRestXmlErrorCode = function (output, data) {
    if (data.Code !== undefined) {
        return data.Code;
    }
    if (output.statusCode == 404) {
        return "NotFound";
    }
    return "";
};


/***/ }),

/***/ 11572:
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/runtimeConfig.browser.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClientDefaultValues": () => (/* binding */ ClientDefaultValues)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! tslib */ 42321);
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./package.json */ 46122);
/* harmony import */ var _aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-crypto/sha256-browser */ 48464);
/* harmony import */ var _aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _aws_sdk_eventstream_serde_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/eventstream-serde-browser */ 11911);
/* harmony import */ var _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aws-sdk/fetch-http-handler */ 16423);
/* harmony import */ var _aws_sdk_hash_blob_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aws-sdk/hash-blob-browser */ 22026);
/* harmony import */ var _aws_sdk_invalid_dependency__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aws-sdk/invalid-dependency */ 3015);
/* harmony import */ var _aws_sdk_md5_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aws-sdk/md5-js */ 20723);
/* harmony import */ var _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aws-sdk/middleware-retry */ 9485);
/* harmony import */ var _aws_sdk_url_parser_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aws-sdk/url-parser-browser */ 12195);
/* harmony import */ var _aws_sdk_util_base64_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aws-sdk/util-base64-browser */ 80149);
/* harmony import */ var _aws_sdk_util_body_length_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aws-sdk/util-body-length-browser */ 88920);
/* harmony import */ var _aws_sdk_util_user_agent_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aws-sdk/util-user-agent-browser */ 94190);
/* harmony import */ var _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aws-sdk/util-utf8-browser */ 89937);
/* harmony import */ var _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./runtimeConfig.shared */ 58023);















var ClientDefaultValues = (0,tslib__WEBPACK_IMPORTED_MODULE_12__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_12__.__assign)({}, _runtimeConfig_shared__WEBPACK_IMPORTED_MODULE_13__.ClientSharedValues), { runtime: "browser", base64Decoder: _aws_sdk_util_base64_browser__WEBPACK_IMPORTED_MODULE_8__.fromBase64, base64Encoder: _aws_sdk_util_base64_browser__WEBPACK_IMPORTED_MODULE_8__.toBase64, bodyLengthChecker: _aws_sdk_util_body_length_browser__WEBPACK_IMPORTED_MODULE_9__.calculateBodyLength, credentialDefaultProvider: (0,_aws_sdk_invalid_dependency__WEBPACK_IMPORTED_MODULE_4__.invalidFunction)("Credential is missing"), defaultUserAgent: (0,_aws_sdk_util_user_agent_browser__WEBPACK_IMPORTED_MODULE_10__.defaultUserAgent)(_package_json__WEBPACK_IMPORTED_MODULE_14__.name, _package_json__WEBPACK_IMPORTED_MODULE_14__.version), eventStreamSerdeProvider: _aws_sdk_eventstream_serde_browser__WEBPACK_IMPORTED_MODULE_1__.eventStreamSerdeProvider, maxAttempts: _aws_sdk_middleware_retry__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_MAX_ATTEMPTS, md5: _aws_sdk_md5_js__WEBPACK_IMPORTED_MODULE_5__.Md5, region: (0,_aws_sdk_invalid_dependency__WEBPACK_IMPORTED_MODULE_4__.invalidFunction)("Region is missing"), requestHandler: new _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_2__.FetchHttpHandler(), sha256: _aws_crypto_sha256_browser__WEBPACK_IMPORTED_MODULE_0__.Sha256, streamCollector: _aws_sdk_fetch_http_handler__WEBPACK_IMPORTED_MODULE_2__.streamCollector,
    streamHasher: _aws_sdk_hash_blob_browser__WEBPACK_IMPORTED_MODULE_3__.blobHasher, urlParser: _aws_sdk_url_parser_browser__WEBPACK_IMPORTED_MODULE_7__.parseUrl, utf8Decoder: _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_11__.fromUtf8, utf8Encoder: _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_11__.toUtf8 });


/***/ }),

/***/ 58023:
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/runtimeConfig.shared.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ClientSharedValues": () => (/* binding */ ClientSharedValues)
/* harmony export */ });
/* harmony import */ var _endpoints__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./endpoints */ 81084);

var ClientSharedValues = {
    apiVersion: "2006-03-01",
    disableHostPrefix: false,
    logger: {},
    regionInfoProvider: _endpoints__WEBPACK_IMPORTED_MODULE_0__.defaultRegionInfoProvider,
    signingEscapePath: false,
    signingName: "s3",
    useArnRegion: false,
};


/***/ }),

/***/ 89937:
/*!**********************************!*\
  !*** @aws-sdk/util-utf8-browser ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": () => (/* binding */ fromUtf8),
/* harmony export */   "toUtf8": () => (/* binding */ toUtf8)
/* harmony export */ });
/* harmony import */ var _pureJs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pureJs */ 91559);
/* harmony import */ var _whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./whatwgEncodingApi */ 74892);


var fromUtf8 = function (input) {
    return typeof TextEncoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.fromUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.fromUtf8)(input);
};
var toUtf8 = function (input) {
    return typeof TextDecoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.toUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.toUtf8)(input);
};


/***/ }),

/***/ 91559:
/*!****************!*\
  !*** ./pureJs ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": () => (/* binding */ fromUtf8),
/* harmony export */   "toUtf8": () => (/* binding */ toUtf8)
/* harmony export */ });
/**
 * Converts a JS string from its native UCS-2/UTF-16 representation into a
 * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.
 *
 * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google
 * Closure library, though updated to use typed arrays.
 */
var fromUtf8 = function (input) {
    var bytes = [];
    for (var i = 0, len = input.length; i < len; i++) {
        var value = input.charCodeAt(i);
        if (value < 0x80) {
            bytes.push(value);
        }
        else if (value < 0x800) {
            bytes.push((value >> 6) | 192, (value & 63) | 128);
        }
        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            var surrogatePair = 0x10000 + ((value & 1023) << 10) + (input.charCodeAt(++i) & 1023);
            bytes.push((surrogatePair >> 18) | 240, ((surrogatePair >> 12) & 63) | 128, ((surrogatePair >> 6) & 63) | 128, (surrogatePair & 63) | 128);
        }
        else {
            bytes.push((value >> 12) | 224, ((value >> 6) & 63) | 128, (value & 63) | 128);
        }
    }
    return Uint8Array.from(bytes);
};
/**
 * Converts a typed array of bytes containing UTF-8 data into a native JS
 * string.
 *
 * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the
 * Google Closure library, though updated to use typed arrays and to better
 * handle astral plane code points.
 */
var toUtf8 = function (input) {
    var decoded = "";
    for (var i = 0, len = input.length; i < len; i++) {
        var byte = input[i];
        if (byte < 0x80) {
            decoded += String.fromCharCode(byte);
        }
        else if (192 <= byte && byte < 224) {
            var nextByte = input[++i];
            decoded += String.fromCharCode(((byte & 31) << 6) | (nextByte & 63));
        }
        else if (240 <= byte && byte < 365) {
            var surrogatePair = [byte, input[++i], input[++i], input[++i]];
            var encoded = "%" + surrogatePair.map(function (byteValue) { return byteValue.toString(16); }).join("%");
            decoded += decodeURIComponent(encoded);
        }
        else {
            decoded += String.fromCharCode(((byte & 15) << 12) | ((input[++i] & 63) << 6) | (input[++i] & 63));
        }
    }
    return decoded;
};


/***/ }),

/***/ 74892:
/*!***************************!*\
  !*** ./whatwgEncodingApi ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": () => (/* binding */ fromUtf8),
/* harmony export */   "toUtf8": () => (/* binding */ toUtf8)
/* harmony export */ });
function fromUtf8(input) {
    return new TextEncoder().encode(input);
}
function toUtf8(input) {
    return new TextDecoder("utf-8").decode(input);
}


/***/ }),

/***/ 74860:
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/EventStreamMarshaller.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventStreamMarshaller": () => (/* binding */ EventStreamMarshaller)
/* harmony export */ });
/* harmony import */ var _aws_crypto_crc32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-crypto/crc32 */ 25926);
/* harmony import */ var _HeaderMarshaller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HeaderMarshaller */ 43455);
/* harmony import */ var _splitMessage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./splitMessage */ 89654);



/**
 * A marshaller that can convert binary-packed event stream messages into
 * JavaScript objects and back again into their binary format.
 */
var EventStreamMarshaller = /** @class */ (function () {
    function EventStreamMarshaller(toUtf8, fromUtf8) {
        this.headerMarshaller = new _HeaderMarshaller__WEBPACK_IMPORTED_MODULE_1__.HeaderMarshaller(toUtf8, fromUtf8);
    }
    /**
     * Convert a structured JavaScript object with tagged headers into a binary
     * event stream message.
     */
    EventStreamMarshaller.prototype.marshall = function (_a) {
        var rawHeaders = _a.headers, body = _a.body;
        var headers = this.headerMarshaller.format(rawHeaders);
        var length = headers.byteLength + body.byteLength + 16;
        var out = new Uint8Array(length);
        var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
        var checksum = new _aws_crypto_crc32__WEBPACK_IMPORTED_MODULE_0__.Crc32();
        // Format message
        view.setUint32(0, length, false);
        view.setUint32(4, headers.byteLength, false);
        view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);
        out.set(headers, 12);
        out.set(body, headers.byteLength + 12);
        // Write trailing message checksum
        view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);
        return out;
    };
    /**
     * Convert a binary event stream message into a JavaScript object with an
     * opaque, binary body and tagged, parsed headers.
     */
    EventStreamMarshaller.prototype.unmarshall = function (message) {
        var _a = (0,_splitMessage__WEBPACK_IMPORTED_MODULE_2__.splitMessage)(message), headers = _a.headers, body = _a.body;
        return { headers: this.headerMarshaller.parse(headers), body: body };
    };
    /**
     * Convert a structured JavaScript object with tagged headers into a binary
     * event stream message header.
     */
    EventStreamMarshaller.prototype.formatHeaders = function (rawHeaders) {
        return this.headerMarshaller.format(rawHeaders);
    };
    return EventStreamMarshaller;
}());



/***/ }),

/***/ 43455:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/HeaderMarshaller.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeaderMarshaller": () => (/* binding */ HeaderMarshaller)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 6389);
/* harmony import */ var _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-hex-encoding */ 57963);
/* harmony import */ var _Int64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Int64 */ 48364);



/**
 * @internal
 */
var HeaderMarshaller = /** @class */ (function () {
    function HeaderMarshaller(toUtf8, fromUtf8) {
        this.toUtf8 = toUtf8;
        this.fromUtf8 = fromUtf8;
    }
    HeaderMarshaller.prototype.format = function (headers) {
        var e_1, _a, e_2, _b;
        var chunks = [];
        try {
            for (var _c = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)(Object.keys(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var headerName = _d.value;
                var bytes = this.fromUtf8(headerName);
                chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var out = new Uint8Array(chunks.reduce(function (carry, bytes) { return carry + bytes.byteLength; }, 0));
        var position = 0;
        try {
            for (var chunks_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)(chunks), chunks_1_1 = chunks_1.next(); !chunks_1_1.done; chunks_1_1 = chunks_1.next()) {
                var chunk = chunks_1_1.value;
                out.set(chunk, position);
                position += chunk.byteLength;
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (chunks_1_1 && !chunks_1_1.done && (_b = chunks_1.return)) _b.call(chunks_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return out;
    };
    HeaderMarshaller.prototype.formatHeaderValue = function (header) {
        switch (header.type) {
            case "boolean":
                return Uint8Array.from([header.value ? 0 /* boolTrue */ : 1 /* boolFalse */]);
            case "byte":
                return Uint8Array.from([2 /* byte */, header.value]);
            case "short":
                var shortView = new DataView(new ArrayBuffer(3));
                shortView.setUint8(0, 3 /* short */);
                shortView.setInt16(1, header.value, false);
                return new Uint8Array(shortView.buffer);
            case "integer":
                var intView = new DataView(new ArrayBuffer(5));
                intView.setUint8(0, 4 /* integer */);
                intView.setInt32(1, header.value, false);
                return new Uint8Array(intView.buffer);
            case "long":
                var longBytes = new Uint8Array(9);
                longBytes[0] = 5 /* long */;
                longBytes.set(header.value.bytes, 1);
                return longBytes;
            case "binary":
                var binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));
                binView.setUint8(0, 6 /* byteArray */);
                binView.setUint16(1, header.value.byteLength, false);
                var binBytes = new Uint8Array(binView.buffer);
                binBytes.set(header.value, 3);
                return binBytes;
            case "string":
                var utf8Bytes = this.fromUtf8(header.value);
                var strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));
                strView.setUint8(0, 7 /* string */);
                strView.setUint16(1, utf8Bytes.byteLength, false);
                var strBytes = new Uint8Array(strView.buffer);
                strBytes.set(utf8Bytes, 3);
                return strBytes;
            case "timestamp":
                var tsBytes = new Uint8Array(9);
                tsBytes[0] = 8 /* timestamp */;
                tsBytes.set(_Int64__WEBPACK_IMPORTED_MODULE_1__.Int64.fromNumber(header.value.valueOf()).bytes, 1);
                return tsBytes;
            case "uuid":
                if (!UUID_PATTERN.test(header.value)) {
                    throw new Error("Invalid UUID received: " + header.value);
                }
                var uuidBytes = new Uint8Array(17);
                uuidBytes[0] = 9 /* uuid */;
                uuidBytes.set((0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.fromHex)(header.value.replace(/\-/g, "")), 1);
                return uuidBytes;
        }
    };
    HeaderMarshaller.prototype.parse = function (headers) {
        var out = {};
        var position = 0;
        while (position < headers.byteLength) {
            var nameLength = headers.getUint8(position++);
            var name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));
            position += nameLength;
            switch (headers.getUint8(position++)) {
                case 0 /* boolTrue */:
                    out[name] = {
                        type: BOOLEAN_TAG,
                        value: true,
                    };
                    break;
                case 1 /* boolFalse */:
                    out[name] = {
                        type: BOOLEAN_TAG,
                        value: false,
                    };
                    break;
                case 2 /* byte */:
                    out[name] = {
                        type: BYTE_TAG,
                        value: headers.getInt8(position++),
                    };
                    break;
                case 3 /* short */:
                    out[name] = {
                        type: SHORT_TAG,
                        value: headers.getInt16(position, false),
                    };
                    position += 2;
                    break;
                case 4 /* integer */:
                    out[name] = {
                        type: INT_TAG,
                        value: headers.getInt32(position, false),
                    };
                    position += 4;
                    break;
                case 5 /* long */:
                    out[name] = {
                        type: LONG_TAG,
                        value: new _Int64__WEBPACK_IMPORTED_MODULE_1__.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)),
                    };
                    position += 8;
                    break;
                case 6 /* byteArray */:
                    var binaryLength = headers.getUint16(position, false);
                    position += 2;
                    out[name] = {
                        type: BINARY_TAG,
                        value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength),
                    };
                    position += binaryLength;
                    break;
                case 7 /* string */:
                    var stringLength = headers.getUint16(position, false);
                    position += 2;
                    out[name] = {
                        type: STRING_TAG,
                        value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength)),
                    };
                    position += stringLength;
                    break;
                case 8 /* timestamp */:
                    out[name] = {
                        type: TIMESTAMP_TAG,
                        value: new Date(new _Int64__WEBPACK_IMPORTED_MODULE_1__.Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf()),
                    };
                    position += 8;
                    break;
                case 9 /* uuid */:
                    var uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);
                    position += 16;
                    out[name] = {
                        type: UUID_TAG,
                        value: (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(0, 4)) + "-" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(4, 6)) + "-" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(6, 8)) + "-" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(8, 10)) + "-" + (0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(uuidBytes.subarray(10)),
                    };
                    break;
                default:
                    throw new Error("Unrecognized header type tag");
            }
        }
        return out;
    };
    return HeaderMarshaller;
}());

var HEADER_VALUE_TYPE;
(function (HEADER_VALUE_TYPE) {
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolTrue"] = 0] = "boolTrue";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["boolFalse"] = 1] = "boolFalse";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byte"] = 2] = "byte";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["short"] = 3] = "short";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["integer"] = 4] = "integer";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["long"] = 5] = "long";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["byteArray"] = 6] = "byteArray";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["string"] = 7] = "string";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["timestamp"] = 8] = "timestamp";
    HEADER_VALUE_TYPE[HEADER_VALUE_TYPE["uuid"] = 9] = "uuid";
})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));
var BOOLEAN_TAG = "boolean";
var BYTE_TAG = "byte";
var SHORT_TAG = "short";
var INT_TAG = "integer";
var LONG_TAG = "long";
var BINARY_TAG = "binary";
var STRING_TAG = "string";
var TIMESTAMP_TAG = "timestamp";
var UUID_TAG = "uuid";
var UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;


/***/ }),

/***/ 48364:
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/Int64.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Int64": () => (/* binding */ Int64)
/* harmony export */ });
/* harmony import */ var _aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-hex-encoding */ 57963);

/**
 * A lossless representation of a signed, 64-bit integer. Instances of this
 * class may be used in arithmetic expressions as if they were numeric
 * primitives, but the binary representation will be preserved unchanged as the
 * `bytes` property of the object. The bytes should be encoded as big-endian,
 * two's complement integers.
 */
var Int64 = /** @class */ (function () {
    function Int64(bytes) {
        this.bytes = bytes;
        if (bytes.byteLength !== 8) {
            throw new Error("Int64 buffers must be exactly 8 bytes");
        }
    }
    Int64.fromNumber = function (number) {
        if (number > 9223372036854775807 || number < -9223372036854775808) {
            throw new Error(number + " is too large (or, if negative, too small) to represent as an Int64");
        }
        var bytes = new Uint8Array(8);
        for (var i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {
            bytes[i] = remaining;
        }
        if (number < 0) {
            negate(bytes);
        }
        return new Int64(bytes);
    };
    /**
     * Called implicitly by infix arithmetic operators.
     */
    Int64.prototype.valueOf = function () {
        var bytes = this.bytes.slice(0);
        var negative = bytes[0] & 128;
        if (negative) {
            negate(bytes);
        }
        return parseInt((0,_aws_sdk_util_hex_encoding__WEBPACK_IMPORTED_MODULE_0__.toHex)(bytes), 16) * (negative ? -1 : 1);
    };
    Int64.prototype.toString = function () {
        return String(this.valueOf());
    };
    return Int64;
}());

function negate(bytes) {
    for (var i = 0; i < 8; i++) {
        bytes[i] ^= 0xff;
    }
    for (var i = 7; i > -1; i--) {
        bytes[i]++;
        if (bytes[i] !== 0)
            break;
    }
}


/***/ }),

/***/ 8683:
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/Message.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);



/***/ }),

/***/ 87799:
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventStreamMarshaller": () => (/* reexport safe */ _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller),
/* harmony export */   "Int64": () => (/* reexport safe */ _Int64__WEBPACK_IMPORTED_MODULE_1__.Int64)
/* harmony export */ });
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventStreamMarshaller */ 74860);
/* harmony import */ var _Int64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Int64 */ 48364);
/* harmony import */ var _Message__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Message */ 8683);





/***/ }),

/***/ 89654:
/*!******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-marshaller/dist/es/splitMessage.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "splitMessage": () => (/* binding */ splitMessage)
/* harmony export */ });
/* harmony import */ var _aws_crypto_crc32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-crypto/crc32 */ 25926);

// All prelude components are unsigned, 32-bit integers
var PRELUDE_MEMBER_LENGTH = 4;
// The prelude consists of two components
var PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2;
// Checksums are always CRC32 hashes.
var CHECKSUM_LENGTH = 4;
// Messages must include a full prelude, a prelude checksum, and a message checksum
var MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;
/**
 * @internal
 */
function splitMessage(_a) {
    var byteLength = _a.byteLength, byteOffset = _a.byteOffset, buffer = _a.buffer;
    if (byteLength < MINIMUM_MESSAGE_LENGTH) {
        throw new Error("Provided message too short to accommodate event stream message overhead");
    }
    var view = new DataView(buffer, byteOffset, byteLength);
    var messageLength = view.getUint32(0, false);
    if (byteLength !== messageLength) {
        throw new Error("Reported message length does not match received message length");
    }
    var headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);
    var expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);
    var expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);
    var checksummer = new _aws_crypto_crc32__WEBPACK_IMPORTED_MODULE_0__.Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));
    if (expectedPreludeChecksum !== checksummer.digest()) {
        throw new Error("The prelude checksum specified in the message (" + expectedPreludeChecksum + ") does not match the calculated CRC32 checksum (" + checksummer.digest() + ")");
    }
    checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));
    if (expectedMessageChecksum !== checksummer.digest()) {
        throw new Error("The message checksum (" + checksummer.digest() + ") did not match the expected value of " + expectedMessageChecksum);
    }
    return {
        headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),
        body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH)),
    };
}


/***/ }),

/***/ 30400:
/*!******************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-browser/dist/es/EventStreamMarshaller.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventStreamMarshaller": () => (/* binding */ EventStreamMarshaller)
/* harmony export */ });
/* harmony import */ var _aws_sdk_eventstream_marshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/eventstream-marshaller */ 87799);
/* harmony import */ var _aws_sdk_eventstream_serde_universal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/eventstream-serde-universal */ 61916);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ 76799);



/**
 * Utility class used to serialize and deserialize event streams in
 * browsers and ReactNative.
 *
 * In browsers where ReadableStream API is available:
 * * deserialize from ReadableStream to an async iterable of output structure
 * * serialize from async iterable of input structure to ReadableStream
 * In ReactNative where only async iterable API is available:
 * * deserialize from async iterable of binaries to async iterable of output structure
 * * serialize from async iterable of input structure to async iterable of binaries
 *
 * We use ReadableStream API in browsers because of the consistency with other
 * streaming operations, where ReadableStream API is used to denote streaming data.
 * Whereas in ReactNative, ReadableStream API is not available, we use async iterable
 * for streaming data although it has lower throughput.
 */

var EventStreamMarshaller =
/** @class */
function () {
  function EventStreamMarshaller(_a) {
    var utf8Encoder = _a.utf8Encoder,
        utf8Decoder = _a.utf8Decoder;
    this.eventMarshaller = new _aws_sdk_eventstream_marshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller(utf8Encoder, utf8Decoder);
    this.universalMarshaller = new _aws_sdk_eventstream_serde_universal__WEBPACK_IMPORTED_MODULE_1__.EventStreamMarshaller({
      utf8Decoder: utf8Decoder,
      utf8Encoder: utf8Encoder
    });
  }

  EventStreamMarshaller.prototype.deserialize = function (body, deserializer) {
    var bodyIterable = isReadableStream(body) ? (0,_utils__WEBPACK_IMPORTED_MODULE_2__.readableStreamtoIterable)(body) : body;
    return this.universalMarshaller.deserialize(bodyIterable, deserializer);
  };
  /**
   * Generate a stream that serialize events into stream of binary chunks;
   *
   * Caveat is that streaming request payload doesn't work on browser with native
   * xhr or fetch handler currently because they don't support upload streaming.
   * reference:
   * * https://bugs.chromium.org/p/chromium/issues/detail?id=688906
   * * https://bugzilla.mozilla.org/show_bug.cgi?id=1387483
   *
   */


  EventStreamMarshaller.prototype.serialize = function (input, serializer) {
    var serialziedIterable = this.universalMarshaller.serialize(input, serializer);
    return typeof ReadableStream === "function" ? (0,_utils__WEBPACK_IMPORTED_MODULE_2__.iterableToReadableStream)(serialziedIterable) : serialziedIterable;
  };

  return EventStreamMarshaller;
}();



var isReadableStream = function (body) {
  return typeof ReadableStream === "function" && body instanceof ReadableStream;
};

/***/ }),

/***/ 11911:
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-browser/dist/es/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eventStreamSerdeProvider": () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_0__.eventStreamSerdeProvider),
/* harmony export */   "EventStreamMarshaller": () => (/* reexport safe */ _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_1__.EventStreamMarshaller),
/* harmony export */   "iterableToReadableStream": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.iterableToReadableStream),
/* harmony export */   "readableStreamtoIterable": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_2__.readableStreamtoIterable)
/* harmony export */ });
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider */ 16162);
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EventStreamMarshaller */ 30400);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ 76799);





/***/ }),

/***/ 16162:
/*!*****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-browser/dist/es/provider.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eventStreamSerdeProvider": () => (/* binding */ eventStreamSerdeProvider)
/* harmony export */ });
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventStreamMarshaller */ 30400);

/** browser event stream serde utils provider */
var eventStreamSerdeProvider = function (options) { return new _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller(options); };


/***/ }),

/***/ 76799:
/*!**************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-browser/dist/es/utils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "readableStreamtoIterable": () => (/* binding */ readableStreamtoIterable),
/* harmony export */   "iterableToReadableStream": () => (/* binding */ iterableToReadableStream)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 54648);

/**
 * A util function converting ReadableStream into an async iterable.
 * Reference: https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate
 */

var readableStreamtoIterable = function (readableStream) {
  var _a;

  return _a = {}, _a[Symbol.asyncIterator] = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__asyncGenerator)(this, arguments, function () {
      var reader, _a, done, value;

      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {
        switch (_b.label) {
          case 0:
            reader = readableStream.getReader();
            _b.label = 1;

          case 1:
            _b.trys.push([1,, 9, 10]);

            _b.label = 2;

          case 2:
            if (false) {}
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(reader.read())];

          case 3:
            _a = _b.sent(), done = _a.done, value = _a.value;
            if (!done) return [3
            /*break*/
            , 5];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(void 0)];

          case 4:
            return [2
            /*return*/
            , _b.sent()];

          case 5:
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(value)];

          case 6:
            return [4
            /*yield*/
            , _b.sent()];

          case 7:
            _b.sent();

            return [3
            /*break*/
            , 2];

          case 8:
            return [3
            /*break*/
            , 10];

          case 9:
            reader.releaseLock();
            return [7
            /*endfinally*/
            ];

          case 10:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, _a;
};
/**
 * A util function converting async iterable to a ReadableStream.
 */

var iterableToReadableStream = function (asyncIterable) {
  var iterator = asyncIterable[Symbol.asyncIterator]();
  return new ReadableStream({
    pull: function (controller) {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
        var _a, done, value;

        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {
          switch (_b.label) {
            case 0:
              return [4
              /*yield*/
              , iterator.next()];

            case 1:
              _a = _b.sent(), done = _a.done, value = _a.value;

              if (done) {
                return [2
                /*return*/
                , controller.close()];
              }

              controller.enqueue(value);
              return [2
              /*return*/
              ];
          }
        });
      });
    }
  });
};

/***/ }),

/***/ 85586:
/*!***************************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-config-resolver/dist/es/EventStreamSerdeConfig.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resolveEventStreamSerdeConfig": () => (/* binding */ resolveEventStreamSerdeConfig)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 48583);

var resolveEventStreamSerdeConfig = function (input) { return ((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, input), { eventStreamMarshaller: input.eventStreamSerdeProvider(input) })); };


/***/ }),

/***/ 66021:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-config-resolver/dist/es/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resolveEventStreamSerdeConfig": () => (/* reexport safe */ _EventStreamSerdeConfig__WEBPACK_IMPORTED_MODULE_0__.resolveEventStreamSerdeConfig)
/* harmony export */ });
/* harmony import */ var _EventStreamSerdeConfig__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventStreamSerdeConfig */ 85586);



/***/ }),

/***/ 60998:
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/EventStreamMarshaller.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EventStreamMarshaller": () => (/* binding */ EventStreamMarshaller)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 38461);
/* harmony import */ var _aws_sdk_eventstream_marshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/eventstream-marshaller */ 87799);
/* harmony import */ var _getChunkedStream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getChunkedStream */ 89797);
/* harmony import */ var _getUnmarshalledStream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getUnmarshalledStream */ 65167);





var EventStreamMarshaller =
/** @class */
function () {
  function EventStreamMarshaller(_a) {
    var utf8Encoder = _a.utf8Encoder,
        utf8Decoder = _a.utf8Decoder;
    this.eventMarshaller = new _aws_sdk_eventstream_marshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller(utf8Encoder, utf8Decoder);
    this.utfEncoder = utf8Encoder;
  }

  EventStreamMarshaller.prototype.deserialize = function (body, deserializer) {
    var chunkedStream = (0,_getChunkedStream__WEBPACK_IMPORTED_MODULE_1__.getChunkedStream)(body);
    var unmarshalledStream = (0,_getUnmarshalledStream__WEBPACK_IMPORTED_MODULE_2__.getUnmarshalledStream)(chunkedStream, {
      eventMarshaller: this.eventMarshaller,
      deserializer: deserializer,
      toUtf8: this.utfEncoder
    });
    return unmarshalledStream;
  };

  EventStreamMarshaller.prototype.serialize = function (input, serializer) {
    var _a; // eslint-disable-next-line @typescript-eslint/no-this-alias


    var self = this;

    var serializedIterator = function () {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncGenerator)(this, arguments, function () {
        var input_1, input_1_1, chunk, payloadBuf, e_1_1;

        var e_1, _a;

        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_b) {
          switch (_b.label) {
            case 0:
              _b.trys.push([0, 7, 8, 13]);

              input_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__asyncValues)(input);
              _b.label = 1;

            case 1:
              return [4
              /*yield*/
              , (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(input_1.next())];

            case 2:
              if (!(input_1_1 = _b.sent(), !input_1_1.done)) return [3
              /*break*/
              , 6];
              chunk = input_1_1.value;
              payloadBuf = self.eventMarshaller.marshall(serializer(chunk));
              return [4
              /*yield*/
              , (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(payloadBuf)];

            case 3:
              return [4
              /*yield*/
              , _b.sent()];

            case 4:
              _b.sent();

              _b.label = 5;

            case 5:
              return [3
              /*break*/
              , 1];

            case 6:
              return [3
              /*break*/
              , 13];

            case 7:
              e_1_1 = _b.sent();
              e_1 = {
                error: e_1_1
              };
              return [3
              /*break*/
              , 13];

            case 8:
              _b.trys.push([8,, 11, 12]);

              if (!(input_1_1 && !input_1_1.done && (_a = input_1.return))) return [3
              /*break*/
              , 10];
              return [4
              /*yield*/
              , (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(_a.call(input_1))];

            case 9:
              _b.sent();

              _b.label = 10;

            case 10:
              return [3
              /*break*/
              , 12];

            case 11:
              if (e_1) throw e_1.error;
              return [7
              /*endfinally*/
              ];

            case 12:
              return [7
              /*endfinally*/
              ];

            case 13:
              return [4
              /*yield*/
              , (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__await)(new Uint8Array(0))];

            case 14:
              // Ending frame
              return [4
              /*yield*/
              , _b.sent()];

            case 15:
              // Ending frame
              _b.sent();

              return [2
              /*return*/
              ];
          }
        });
      });
    };

    return _a = {}, _a[Symbol.asyncIterator] = serializedIterator, _a;
  };

  return EventStreamMarshaller;
}();



/***/ }),

/***/ 89797:
/*!***************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/getChunkedStream.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getChunkedStream": () => (/* binding */ getChunkedStream)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 38461);

function getChunkedStream(source) {
  var _a;

  var currentMessageTotalLength = 0;
  var currentMessagePendingLength = 0;
  var currentMessage = null;
  var messageLengthBuffer = null;

  var allocateMessage = function (size) {
    if (typeof size !== "number") {
      throw new Error("Attempted to allocate an event message where size was not a number: " + size);
    }

    currentMessageTotalLength = size;
    currentMessagePendingLength = 4;
    currentMessage = new Uint8Array(size);
    var currentMessageView = new DataView(currentMessage.buffer);
    currentMessageView.setUint32(0, size, false); //set big-endian Uint32 to 0~3 bytes
  };

  var iterator = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__asyncGenerator)(this, arguments, function () {
      var sourceIterator, _a, value, done, chunkLength, currentOffset, bytesRemaining, numBytesForTotal, numBytesToWrite;

      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {
        switch (_b.label) {
          case 0:
            sourceIterator = source[Symbol.asyncIterator]();
            _b.label = 1;

          case 1:
            if (false) {}
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(sourceIterator.next())];

          case 2:
            _a = _b.sent(), value = _a.value, done = _a.done;
            if (!done) return [3
            /*break*/
            , 10];
            if (!!currentMessageTotalLength) return [3
            /*break*/
            , 4];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(void 0)];

          case 3:
            return [2
            /*return*/
            , _b.sent()];

          case 4:
            if (!(currentMessageTotalLength === currentMessagePendingLength)) return [3
            /*break*/
            , 7];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(currentMessage)];

          case 5:
            return [4
            /*yield*/
            , _b.sent()];

          case 6:
            _b.sent();

            return [3
            /*break*/
            , 8];

          case 7:
            throw new Error("Truncated event message received.");

          case 8:
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(void 0)];

          case 9:
            return [2
            /*return*/
            , _b.sent()];

          case 10:
            chunkLength = value.length;
            currentOffset = 0;
            _b.label = 11;

          case 11:
            if (!(currentOffset < chunkLength)) return [3
            /*break*/
            , 15]; // create new message if necessary

            if (!currentMessage) {
              bytesRemaining = chunkLength - currentOffset; // prevent edge case where total length spans 2 chunks

              if (!messageLengthBuffer) {
                messageLengthBuffer = new Uint8Array(4);
              }

              numBytesForTotal = Math.min(4 - currentMessagePendingLength, // remaining bytes to fill the messageLengthBuffer
              bytesRemaining // bytes left in chunk
              );
              messageLengthBuffer.set( // @ts-ignore error TS2532: Object is possibly 'undefined' for value
              value.slice(currentOffset, currentOffset + numBytesForTotal), currentMessagePendingLength);
              currentMessagePendingLength += numBytesForTotal;
              currentOffset += numBytesForTotal;

              if (currentMessagePendingLength < 4) {
                // not enough information to create the current message
                return [3
                /*break*/
                , 15];
              }

              allocateMessage(new DataView(messageLengthBuffer.buffer).getUint32(0, false));
              messageLengthBuffer = null;
            }

            numBytesToWrite = Math.min(currentMessageTotalLength - currentMessagePendingLength, // number of bytes left to complete message
            chunkLength - currentOffset // number of bytes left in the original chunk
            );
            currentMessage.set( // @ts-ignore error TS2532: Object is possibly 'undefined' for value
            value.slice(currentOffset, currentOffset + numBytesToWrite), currentMessagePendingLength);
            currentMessagePendingLength += numBytesToWrite;
            currentOffset += numBytesToWrite;
            if (!(currentMessageTotalLength && currentMessageTotalLength === currentMessagePendingLength)) return [3
            /*break*/
            , 14];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(currentMessage)];

          case 12:
            // push out the message
            return [4
            /*yield*/
            , _b.sent()];

          case 13:
            // push out the message
            _b.sent(); // cleanup


            currentMessage = null;
            currentMessageTotalLength = 0;
            currentMessagePendingLength = 0;
            _b.label = 14;

          case 14:
            return [3
            /*break*/
            , 11];

          case 15:
            return [3
            /*break*/
            , 1];

          case 16:
            return [2
            /*return*/
            ];
        }
      });
    });
  };

  return _a = {}, _a[Symbol.asyncIterator] = iterator, _a;
}

/***/ }),

/***/ 65167:
/*!********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/getUnmarshalledStream.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getUnmarshalledStream": () => (/* binding */ getUnmarshalledStream)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 38461);

function getUnmarshalledStream(source, options) {
  var _a;

  return _a = {}, _a[Symbol.asyncIterator] = function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__asyncGenerator)(this, arguments, function () {
      var source_1, source_1_1, chunk, message, messageType, unmodeledError, code, exception, deserializedException, error, event, deserialized, e_1_1;

      var _a, _b;

      var e_1, _c;

      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_d) {
        switch (_d.label) {
          case 0:
            _d.trys.push([0, 12, 13, 18]);

            source_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__asyncValues)(source);
            _d.label = 1;

          case 1:
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(source_1.next())];

          case 2:
            if (!(source_1_1 = _d.sent(), !source_1_1.done)) return [3
            /*break*/
            , 11];
            chunk = source_1_1.value;
            message = options.eventMarshaller.unmarshall(chunk);
            messageType = message.headers[":message-type"].value;
            if (!(messageType === "error")) return [3
            /*break*/
            , 3];
            unmodeledError = new Error(message.headers[":error-message"].value || "UnknownError");
            unmodeledError.name = message.headers[":error-code"].value;
            throw unmodeledError;

          case 3:
            if (!(messageType === "exception")) return [3
            /*break*/
            , 5];
            code = message.headers[":exception-type"].value;
            exception = (_a = {}, _a[code] = message, _a);
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(options.deserializer(exception))];

          case 4:
            deserializedException = _d.sent();

            if (deserializedException.$unknown) {
              error = new Error(options.toUtf8(message.body));
              error.name = code;
              throw error;
            }

            throw deserializedException[code];

          case 5:
            if (!(messageType === "event")) return [3
            /*break*/
            , 9];
            event = (_b = {}, _b[message.headers[":event-type"].value] = message, _b);
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(options.deserializer(event))];

          case 6:
            deserialized = _d.sent();
            if (deserialized.$unknown) return [3
            /*break*/
            , 10];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(deserialized)];

          case 7:
            return [4
            /*yield*/
            , _d.sent()];

          case 8:
            _d.sent();

            return [3
            /*break*/
            , 10];

          case 9:
            throw Error("Unrecognizable event type: " + message.headers[":event-type"].value);

          case 10:
            return [3
            /*break*/
            , 1];

          case 11:
            return [3
            /*break*/
            , 18];

          case 12:
            e_1_1 = _d.sent();
            e_1 = {
              error: e_1_1
            };
            return [3
            /*break*/
            , 18];

          case 13:
            _d.trys.push([13,, 16, 17]);

            if (!(source_1_1 && !source_1_1.done && (_c = source_1.return))) return [3
            /*break*/
            , 15];
            return [4
            /*yield*/
            , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__await)(_c.call(source_1))];

          case 14:
            _d.sent();

            _d.label = 15;

          case 15:
            return [3
            /*break*/
            , 17];

          case 16:
            if (e_1) throw e_1.error;
            return [7
            /*endfinally*/
            ];

          case 17:
            return [7
            /*endfinally*/
            ];

          case 18:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, _a;
}

/***/ }),

/***/ 61916:
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eventStreamSerdeProvider": () => (/* reexport safe */ _provider__WEBPACK_IMPORTED_MODULE_0__.eventStreamSerdeProvider),
/* harmony export */   "EventStreamMarshaller": () => (/* reexport safe */ _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_1__.EventStreamMarshaller)
/* harmony export */ });
/* harmony import */ var _provider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider */ 73316);
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EventStreamMarshaller */ 60998);




/***/ }),

/***/ 73316:
/*!*******************************************************************************!*\
  !*** ./node_modules/@aws-sdk/eventstream-serde-universal/dist/es/provider.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "eventStreamSerdeProvider": () => (/* binding */ eventStreamSerdeProvider)
/* harmony export */ });
/* harmony import */ var _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EventStreamMarshaller */ 60998);

/** NodeJS event stream utils provider */
var eventStreamSerdeProvider = function (options) { return new _EventStreamMarshaller__WEBPACK_IMPORTED_MODULE_0__.EventStreamMarshaller(options); };


/***/ }),

/***/ 22026:
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/hash-blob-browser/dist/es/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "blobHasher": () => (/* binding */ blobHasher)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 825);
/* harmony import */ var _aws_sdk_chunked_blob_reader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/chunked-blob-reader */ 18057);


var blobHasher = function blobHasher(hashCtor, blob) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {
        var hash;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    hash = new hashCtor();
                    return [4 /*yield*/, (0,_aws_sdk_chunked_blob_reader__WEBPACK_IMPORTED_MODULE_0__.blobReader)(blob, function (chunk) {
                            hash.update(chunk);
                        })];
                case 1:
                    _a.sent();
                    return [2 /*return*/, hash.digest()];
            }
        });
    });
};


/***/ }),

/***/ 74403:
/*!***********************************************************!*\
  !*** ./node_modules/@aws-sdk/md5-js/dist/es/constants.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BLOCK_SIZE": () => (/* binding */ BLOCK_SIZE),
/* harmony export */   "DIGEST_LENGTH": () => (/* binding */ DIGEST_LENGTH),
/* harmony export */   "INIT": () => (/* binding */ INIT)
/* harmony export */ });
/**
 * @internal
 */
var BLOCK_SIZE = 64;
/**
 * @internal
 */
var DIGEST_LENGTH = 16;
/**
 * @internal
 */
var INIT = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];


/***/ }),

/***/ 20723:
/*!*******************************************************!*\
  !*** ./node_modules/@aws-sdk/md5-js/dist/es/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Md5": () => (/* binding */ Md5)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 51029);
/* harmony import */ var _aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-utf8-browser */ 56917);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ 74403);



var Md5 = /** @class */ (function () {
    function Md5() {
        this.state = Uint32Array.from(_constants__WEBPACK_IMPORTED_MODULE_1__.INIT);
        this.buffer = new DataView(new ArrayBuffer(_constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE));
        this.bufferLength = 0;
        this.bytesHashed = 0;
        this.finished = false;
    }
    Md5.prototype.update = function (sourceData) {
        if (isEmptyData(sourceData)) {
            return;
        }
        else if (this.finished) {
            throw new Error("Attempted to update an already finished hash.");
        }
        var data = convertToBuffer(sourceData);
        var position = 0;
        var byteLength = data.byteLength;
        this.bytesHashed += byteLength;
        while (byteLength > 0) {
            this.buffer.setUint8(this.bufferLength++, data[position++]);
            byteLength--;
            if (this.bufferLength === _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE) {
                this.hashBuffer();
                this.bufferLength = 0;
            }
        }
    };
    Md5.prototype.digest = function () {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function () {
            var _a, buffer, undecoratedLength, bytesHashed, bitsHashed, i, i, out, i;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_b) {
                if (!this.finished) {
                    _a = this, buffer = _a.buffer, undecoratedLength = _a.bufferLength, bytesHashed = _a.bytesHashed;
                    bitsHashed = bytesHashed * 8;
                    buffer.setUint8(this.bufferLength++, 128);
                    // Ensure the final block has enough room for the hashed length
                    if (undecoratedLength % _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE >= _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE - 8) {
                        for (i = this.bufferLength; i < _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE; i++) {
                            buffer.setUint8(i, 0);
                        }
                        this.hashBuffer();
                        this.bufferLength = 0;
                    }
                    for (i = this.bufferLength; i < _constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE - 8; i++) {
                        buffer.setUint8(i, 0);
                    }
                    buffer.setUint32(_constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE - 8, bitsHashed >>> 0, true);
                    buffer.setUint32(_constants__WEBPACK_IMPORTED_MODULE_1__.BLOCK_SIZE - 4, Math.floor(bitsHashed / 0x100000000), true);
                    this.hashBuffer();
                    this.finished = true;
                }
                out = new DataView(new ArrayBuffer(_constants__WEBPACK_IMPORTED_MODULE_1__.DIGEST_LENGTH));
                for (i = 0; i < 4; i++) {
                    out.setUint32(i * 4, this.state[i], true);
                }
                return [2 /*return*/, new Uint8Array(out.buffer, out.byteOffset, out.byteLength)];
            });
        });
    };
    Md5.prototype.hashBuffer = function () {
        var _a = this, buffer = _a.buffer, state = _a.state;
        var a = state[0], b = state[1], c = state[2], d = state[3];
        a = ff(a, b, c, d, buffer.getUint32(0, true), 7, 0xd76aa478);
        d = ff(d, a, b, c, buffer.getUint32(4, true), 12, 0xe8c7b756);
        c = ff(c, d, a, b, buffer.getUint32(8, true), 17, 0x242070db);
        b = ff(b, c, d, a, buffer.getUint32(12, true), 22, 0xc1bdceee);
        a = ff(a, b, c, d, buffer.getUint32(16, true), 7, 0xf57c0faf);
        d = ff(d, a, b, c, buffer.getUint32(20, true), 12, 0x4787c62a);
        c = ff(c, d, a, b, buffer.getUint32(24, true), 17, 0xa8304613);
        b = ff(b, c, d, a, buffer.getUint32(28, true), 22, 0xfd469501);
        a = ff(a, b, c, d, buffer.getUint32(32, true), 7, 0x698098d8);
        d = ff(d, a, b, c, buffer.getUint32(36, true), 12, 0x8b44f7af);
        c = ff(c, d, a, b, buffer.getUint32(40, true), 17, 0xffff5bb1);
        b = ff(b, c, d, a, buffer.getUint32(44, true), 22, 0x895cd7be);
        a = ff(a, b, c, d, buffer.getUint32(48, true), 7, 0x6b901122);
        d = ff(d, a, b, c, buffer.getUint32(52, true), 12, 0xfd987193);
        c = ff(c, d, a, b, buffer.getUint32(56, true), 17, 0xa679438e);
        b = ff(b, c, d, a, buffer.getUint32(60, true), 22, 0x49b40821);
        a = gg(a, b, c, d, buffer.getUint32(4, true), 5, 0xf61e2562);
        d = gg(d, a, b, c, buffer.getUint32(24, true), 9, 0xc040b340);
        c = gg(c, d, a, b, buffer.getUint32(44, true), 14, 0x265e5a51);
        b = gg(b, c, d, a, buffer.getUint32(0, true), 20, 0xe9b6c7aa);
        a = gg(a, b, c, d, buffer.getUint32(20, true), 5, 0xd62f105d);
        d = gg(d, a, b, c, buffer.getUint32(40, true), 9, 0x02441453);
        c = gg(c, d, a, b, buffer.getUint32(60, true), 14, 0xd8a1e681);
        b = gg(b, c, d, a, buffer.getUint32(16, true), 20, 0xe7d3fbc8);
        a = gg(a, b, c, d, buffer.getUint32(36, true), 5, 0x21e1cde6);
        d = gg(d, a, b, c, buffer.getUint32(56, true), 9, 0xc33707d6);
        c = gg(c, d, a, b, buffer.getUint32(12, true), 14, 0xf4d50d87);
        b = gg(b, c, d, a, buffer.getUint32(32, true), 20, 0x455a14ed);
        a = gg(a, b, c, d, buffer.getUint32(52, true), 5, 0xa9e3e905);
        d = gg(d, a, b, c, buffer.getUint32(8, true), 9, 0xfcefa3f8);
        c = gg(c, d, a, b, buffer.getUint32(28, true), 14, 0x676f02d9);
        b = gg(b, c, d, a, buffer.getUint32(48, true), 20, 0x8d2a4c8a);
        a = hh(a, b, c, d, buffer.getUint32(20, true), 4, 0xfffa3942);
        d = hh(d, a, b, c, buffer.getUint32(32, true), 11, 0x8771f681);
        c = hh(c, d, a, b, buffer.getUint32(44, true), 16, 0x6d9d6122);
        b = hh(b, c, d, a, buffer.getUint32(56, true), 23, 0xfde5380c);
        a = hh(a, b, c, d, buffer.getUint32(4, true), 4, 0xa4beea44);
        d = hh(d, a, b, c, buffer.getUint32(16, true), 11, 0x4bdecfa9);
        c = hh(c, d, a, b, buffer.getUint32(28, true), 16, 0xf6bb4b60);
        b = hh(b, c, d, a, buffer.getUint32(40, true), 23, 0xbebfbc70);
        a = hh(a, b, c, d, buffer.getUint32(52, true), 4, 0x289b7ec6);
        d = hh(d, a, b, c, buffer.getUint32(0, true), 11, 0xeaa127fa);
        c = hh(c, d, a, b, buffer.getUint32(12, true), 16, 0xd4ef3085);
        b = hh(b, c, d, a, buffer.getUint32(24, true), 23, 0x04881d05);
        a = hh(a, b, c, d, buffer.getUint32(36, true), 4, 0xd9d4d039);
        d = hh(d, a, b, c, buffer.getUint32(48, true), 11, 0xe6db99e5);
        c = hh(c, d, a, b, buffer.getUint32(60, true), 16, 0x1fa27cf8);
        b = hh(b, c, d, a, buffer.getUint32(8, true), 23, 0xc4ac5665);
        a = ii(a, b, c, d, buffer.getUint32(0, true), 6, 0xf4292244);
        d = ii(d, a, b, c, buffer.getUint32(28, true), 10, 0x432aff97);
        c = ii(c, d, a, b, buffer.getUint32(56, true), 15, 0xab9423a7);
        b = ii(b, c, d, a, buffer.getUint32(20, true), 21, 0xfc93a039);
        a = ii(a, b, c, d, buffer.getUint32(48, true), 6, 0x655b59c3);
        d = ii(d, a, b, c, buffer.getUint32(12, true), 10, 0x8f0ccc92);
        c = ii(c, d, a, b, buffer.getUint32(40, true), 15, 0xffeff47d);
        b = ii(b, c, d, a, buffer.getUint32(4, true), 21, 0x85845dd1);
        a = ii(a, b, c, d, buffer.getUint32(32, true), 6, 0x6fa87e4f);
        d = ii(d, a, b, c, buffer.getUint32(60, true), 10, 0xfe2ce6e0);
        c = ii(c, d, a, b, buffer.getUint32(24, true), 15, 0xa3014314);
        b = ii(b, c, d, a, buffer.getUint32(52, true), 21, 0x4e0811a1);
        a = ii(a, b, c, d, buffer.getUint32(16, true), 6, 0xf7537e82);
        d = ii(d, a, b, c, buffer.getUint32(44, true), 10, 0xbd3af235);
        c = ii(c, d, a, b, buffer.getUint32(8, true), 15, 0x2ad7d2bb);
        b = ii(b, c, d, a, buffer.getUint32(36, true), 21, 0xeb86d391);
        state[0] = (a + state[0]) & 0xffffffff;
        state[1] = (b + state[1]) & 0xffffffff;
        state[2] = (c + state[2]) & 0xffffffff;
        state[3] = (d + state[3]) & 0xffffffff;
    };
    return Md5;
}());

function cmn(q, a, b, x, s, t) {
    a = (((a + q) & 0xffffffff) + ((x + t) & 0xffffffff)) & 0xffffffff;
    return (((a << s) | (a >>> (32 - s))) + b) & 0xffffffff;
}
function ff(a, b, c, d, x, s, t) {
    return cmn((b & c) | (~b & d), a, b, x, s, t);
}
function gg(a, b, c, d, x, s, t) {
    return cmn((b & d) | (c & ~d), a, b, x, s, t);
}
function hh(a, b, c, d, x, s, t) {
    return cmn(b ^ c ^ d, a, b, x, s, t);
}
function ii(a, b, c, d, x, s, t) {
    return cmn(c ^ (b | ~d), a, b, x, s, t);
}
function isEmptyData(data) {
    if (typeof data === "string") {
        return data.length === 0;
    }
    return data.byteLength === 0;
}
function convertToBuffer(data) {
    if (typeof data === "string") {
        return (0,_aws_sdk_util_utf8_browser__WEBPACK_IMPORTED_MODULE_0__.fromUtf8)(data);
    }
    if (ArrayBuffer.isView(data)) {
        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);
    }
    return new Uint8Array(data);
}


/***/ }),

/***/ 56917:
/*!**********************************!*\
  !*** @aws-sdk/util-utf8-browser ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": () => (/* binding */ fromUtf8),
/* harmony export */   "toUtf8": () => (/* binding */ toUtf8)
/* harmony export */ });
/* harmony import */ var _pureJs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pureJs */ 41953);
/* harmony import */ var _whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./whatwgEncodingApi */ 19791);


var fromUtf8 = function (input) {
    return typeof TextEncoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.fromUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.fromUtf8)(input);
};
var toUtf8 = function (input) {
    return typeof TextDecoder === "function" ? (0,_whatwgEncodingApi__WEBPACK_IMPORTED_MODULE_1__.toUtf8)(input) : (0,_pureJs__WEBPACK_IMPORTED_MODULE_0__.toUtf8)(input);
};


/***/ }),

/***/ 41953:
/*!****************!*\
  !*** ./pureJs ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": () => (/* binding */ fromUtf8),
/* harmony export */   "toUtf8": () => (/* binding */ toUtf8)
/* harmony export */ });
/**
 * Converts a JS string from its native UCS-2/UTF-16 representation into a
 * Uint8Array of the bytes used to represent the equivalent characters in UTF-8.
 *
 * Cribbed from the `goog.crypt.stringToUtf8ByteArray` function in the Google
 * Closure library, though updated to use typed arrays.
 */
var fromUtf8 = function (input) {
    var bytes = [];
    for (var i = 0, len = input.length; i < len; i++) {
        var value = input.charCodeAt(i);
        if (value < 0x80) {
            bytes.push(value);
        }
        else if (value < 0x800) {
            bytes.push((value >> 6) | 192, (value & 63) | 128);
        }
        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            var surrogatePair = 0x10000 + ((value & 1023) << 10) + (input.charCodeAt(++i) & 1023);
            bytes.push((surrogatePair >> 18) | 240, ((surrogatePair >> 12) & 63) | 128, ((surrogatePair >> 6) & 63) | 128, (surrogatePair & 63) | 128);
        }
        else {
            bytes.push((value >> 12) | 224, ((value >> 6) & 63) | 128, (value & 63) | 128);
        }
    }
    return Uint8Array.from(bytes);
};
/**
 * Converts a typed array of bytes containing UTF-8 data into a native JS
 * string.
 *
 * Partly cribbed from the `goog.crypt.utf8ByteArrayToString` function in the
 * Google Closure library, though updated to use typed arrays and to better
 * handle astral plane code points.
 */
var toUtf8 = function (input) {
    var decoded = "";
    for (var i = 0, len = input.length; i < len; i++) {
        var byte = input[i];
        if (byte < 0x80) {
            decoded += String.fromCharCode(byte);
        }
        else if (192 <= byte && byte < 224) {
            var nextByte = input[++i];
            decoded += String.fromCharCode(((byte & 31) << 6) | (nextByte & 63));
        }
        else if (240 <= byte && byte < 365) {
            var surrogatePair = [byte, input[++i], input[++i], input[++i]];
            var encoded = "%" + surrogatePair.map(function (byteValue) { return byteValue.toString(16); }).join("%");
            decoded += decodeURIComponent(encoded);
        }
        else {
            decoded += String.fromCharCode(((byte & 15) << 12) | ((input[++i] & 63) << 6) | (input[++i] & 63));
        }
    }
    return decoded;
};


/***/ }),

/***/ 19791:
/*!***************************!*\
  !*** ./whatwgEncodingApi ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromUtf8": () => (/* binding */ fromUtf8),
/* harmony export */   "toUtf8": () => (/* binding */ toUtf8)
/* harmony export */ });
function fromUtf8(input) {
    return new TextEncoder().encode(input);
}
function toUtf8(input) {
    return new TextDecoder("utf-8").decode(input);
}


/***/ }),

/***/ 87575:
/*!**********************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/bucketEndpointMiddleware.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bucketEndpointMiddleware": () => (/* binding */ bucketEndpointMiddleware),
/* harmony export */   "bucketEndpointMiddlewareOptions": () => (/* binding */ bucketEndpointMiddlewareOptions),
/* harmony export */   "getBucketEndpointPlugin": () => (/* binding */ getBucketEndpointPlugin)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 54984);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);
/* harmony import */ var _aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-arn-parser */ 33481);
/* harmony import */ var _bucketHostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bucketHostname */ 73414);
/* harmony import */ var _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bucketHostnameUtils */ 76924);





var bucketEndpointMiddleware = function (options) { return function (next, context) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(void 0, void 0, void 0, function () {
    var bucketName, replaceBucketInPath, request, bucketArn, clientRegion, _a, _b, partition, _c, signingRegion, useArnRegion, _d, hostname, bucketEndpoint, modifiedSigningRegion, signingService, _e, hostname, bucketEndpoint;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__generator)(this, function (_f) {
        switch (_f.label) {
            case 0:
                bucketName = args.input.Bucket;
                replaceBucketInPath = options.bucketEndpoint;
                request = args.request;
                if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request)) return [3 /*break*/, 7];
                if (!options.bucketEndpoint) return [3 /*break*/, 1];
                request.hostname = bucketName;
                return [3 /*break*/, 6];
            case 1:
                if (!(0,_aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_1__.validate)(bucketName)) return [3 /*break*/, 5];
                bucketArn = (0,_aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_1__.parse)(bucketName);
                _a = _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.getPseudoRegion;
                return [4 /*yield*/, options.region()];
            case 2:
                clientRegion = _a.apply(void 0, [_f.sent()]);
                return [4 /*yield*/, options.regionInfoProvider(clientRegion)];
            case 3:
                _b = (_f.sent()) || {}, partition = _b.partition, _c = _b.signingRegion, signingRegion = _c === void 0 ? clientRegion : _c;
                return [4 /*yield*/, options.useArnRegion()];
            case 4:
                useArnRegion = _f.sent();
                _d = (0,_bucketHostname__WEBPACK_IMPORTED_MODULE_2__.bucketHostname)({
                    bucketName: bucketArn,
                    baseHostname: request.hostname,
                    accelerateEndpoint: options.useAccelerateEndpoint,
                    dualstackEndpoint: options.useDualstackEndpoint,
                    pathStyleEndpoint: options.forcePathStyle,
                    tlsCompatible: request.protocol === "https:",
                    useArnRegion: useArnRegion,
                    clientPartition: partition,
                    clientSigningRegion: signingRegion,
                }), hostname = _d.hostname, bucketEndpoint = _d.bucketEndpoint, modifiedSigningRegion = _d.signingRegion, signingService = _d.signingService;
                // If the request needs to use a region or service name inferred from ARN that different from client region, we
                // need to set them in the handler context so the signer will use them
                if (modifiedSigningRegion && modifiedSigningRegion !== signingRegion) {
                    context["signing_region"] = modifiedSigningRegion;
                }
                if (signingService && signingService !== "s3") {
                    context["signing_service"] = signingService;
                }
                request.hostname = hostname;
                replaceBucketInPath = bucketEndpoint;
                return [3 /*break*/, 6];
            case 5:
                _e = (0,_bucketHostname__WEBPACK_IMPORTED_MODULE_2__.bucketHostname)({
                    bucketName: bucketName,
                    baseHostname: request.hostname,
                    accelerateEndpoint: options.useAccelerateEndpoint,
                    dualstackEndpoint: options.useDualstackEndpoint,
                    pathStyleEndpoint: options.forcePathStyle,
                    tlsCompatible: request.protocol === "https:",
                }), hostname = _e.hostname, bucketEndpoint = _e.bucketEndpoint;
                request.hostname = hostname;
                replaceBucketInPath = bucketEndpoint;
                _f.label = 6;
            case 6:
                if (replaceBucketInPath) {
                    request.path = request.path.replace(/^(\/)?[^\/]+/, "");
                    if (request.path === "") {
                        request.path = "/";
                    }
                }
                _f.label = 7;
            case 7: return [2 /*return*/, next((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, args), { request: request }))];
        }
    });
}); }; }; };
var bucketEndpointMiddlewareOptions = {
    tags: ["BUCKET_ENDPOINT"],
    name: "bucketEndpointMiddleware",
    relation: "before",
    toMiddleware: "hostHeaderMiddleware",
};
var getBucketEndpointPlugin = function (options) { return ({
    applyToStack: function (clientStack) {
        clientStack.addRelativeTo(bucketEndpointMiddleware(options), bucketEndpointMiddlewareOptions);
    },
}); };


/***/ }),

/***/ 73414:
/*!************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/bucketHostname.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bucketHostname": () => (/* binding */ bucketHostname)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 54984);
/* harmony import */ var _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bucketHostnameUtils */ 76924);


var bucketHostname = function (options) {
    var baseHostname = options.baseHostname;
    if (!_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.S3_HOSTNAME_PATTERN.test(baseHostname)) {
        return {
            bucketEndpoint: false,
            hostname: baseHostname,
        };
    }
    return (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.isBucketNameOptions)(options)
        ? // Construct endpoint when bucketName is a string referring to a bucket name
            getEndpointFromBucketName(options)
        : // Construct endpoint when bucketName is an ARN referring to an S3 resource like Access Point
            getEndpointFromArn(options);
};
var getEndpointFromArn = function (options) {
    // Infer client region and hostname suffix from hostname from endpoints.json, like `s3.us-west-2.amazonaws.com`
    var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)((0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.getSuffixForArnEndpoint)(options.baseHostname), 2), clientRegion = _a[0], hostnameSuffix = _a[1];
    var pathStyleEndpoint = options.pathStyleEndpoint, _b = options.dualstackEndpoint, dualstackEndpoint = _b === void 0 ? false : _b, _c = options.accelerateEndpoint, accelerateEndpoint = _c === void 0 ? false : _c, _d = options.tlsCompatible, tlsCompatible = _d === void 0 ? true : _d, useArnRegion = options.useArnRegion, bucketName = options.bucketName, _e = options.clientPartition, clientPartition = _e === void 0 ? "aws" : _e, _f = options.clientSigningRegion, clientSigningRegion = _f === void 0 ? clientRegion : _f;
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateArnEndpointOptions)({ pathStyleEndpoint: pathStyleEndpoint, accelerateEndpoint: accelerateEndpoint, tlsCompatible: tlsCompatible });
    // Validate and parse the ARN supplied as a bucket name
    var service = bucketName.service, partition = bucketName.partition, accountId = bucketName.accountId, region = bucketName.region, resource = bucketName.resource;
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateService)(service);
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validatePartition)(partition, { clientPartition: clientPartition });
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateAccountId)(accountId);
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateRegion)(region, { useArnRegion: useArnRegion, clientRegion: clientRegion, clientSigningRegion: clientSigningRegion });
    var _g = (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.getArnResources)(resource), accesspointName = _g.accesspointName, outpostId = _g.outpostId;
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateDNSHostLabel)(accesspointName + "-" + accountId, { tlsCompatible: tlsCompatible });
    var endpointRegion = useArnRegion ? region : clientRegion;
    var signingRegion = useArnRegion ? region : clientSigningRegion;
    if (outpostId) {
        // if this is an Outpost ARN
        (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateOutpostService)(service);
        (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateDNSHostLabel)(outpostId, { tlsCompatible: tlsCompatible });
        (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateNoDualstack)(dualstackEndpoint);
        (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateNoFIPS)(endpointRegion);
        return {
            bucketEndpoint: true,
            hostname: accesspointName + "-" + accountId + "." + outpostId + ".s3-outposts." + endpointRegion + "." + hostnameSuffix,
            signingRegion: signingRegion,
            signingService: "s3-outposts",
        };
    }
    // construct endpoint from Accesspoint ARN
    (0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.validateS3Service)(service);
    return {
        bucketEndpoint: true,
        hostname: accesspointName + "-" + accountId + ".s3-accesspoint" + (dualstackEndpoint ? ".dualstack" : "") + "." + endpointRegion + "." + hostnameSuffix,
        signingRegion: signingRegion,
    };
};
var getEndpointFromBucketName = function (_a) {
    var _b = _a.accelerateEndpoint, accelerateEndpoint = _b === void 0 ? false : _b, baseHostname = _a.baseHostname, bucketName = _a.bucketName, _c = _a.dualstackEndpoint, dualstackEndpoint = _c === void 0 ? false : _c, _d = _a.pathStyleEndpoint, pathStyleEndpoint = _d === void 0 ? false : _d, _e = _a.tlsCompatible, tlsCompatible = _e === void 0 ? true : _e;
    var _f = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)((0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.getSuffix)(baseHostname), 2), clientRegion = _f[0], hostnameSuffix = _f[1];
    if (pathStyleEndpoint || !(0,_bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.isDnsCompatibleBucketName)(bucketName) || (tlsCompatible && _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_0__.DOT_PATTERN.test(bucketName))) {
        return {
            bucketEndpoint: false,
            hostname: dualstackEndpoint ? "s3.dualstack." + clientRegion + "." + hostnameSuffix : baseHostname,
        };
    }
    if (accelerateEndpoint) {
        baseHostname = "s3-accelerate" + (dualstackEndpoint ? ".dualstack" : "") + "." + hostnameSuffix;
    }
    else if (dualstackEndpoint) {
        baseHostname = "s3.dualstack." + clientRegion + "." + hostnameSuffix;
    }
    return {
        bucketEndpoint: true,
        hostname: bucketName + "." + baseHostname,
    };
};


/***/ }),

/***/ 76924:
/*!*****************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/bucketHostnameUtils.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DOT_PATTERN": () => (/* binding */ DOT_PATTERN),
/* harmony export */   "S3_HOSTNAME_PATTERN": () => (/* binding */ S3_HOSTNAME_PATTERN),
/* harmony export */   "isBucketNameOptions": () => (/* binding */ isBucketNameOptions),
/* harmony export */   "getPseudoRegion": () => (/* binding */ getPseudoRegion),
/* harmony export */   "isDnsCompatibleBucketName": () => (/* binding */ isDnsCompatibleBucketName),
/* harmony export */   "getSuffix": () => (/* binding */ getSuffix),
/* harmony export */   "getSuffixForArnEndpoint": () => (/* binding */ getSuffixForArnEndpoint),
/* harmony export */   "validateArnEndpointOptions": () => (/* binding */ validateArnEndpointOptions),
/* harmony export */   "validateService": () => (/* binding */ validateService),
/* harmony export */   "validateS3Service": () => (/* binding */ validateS3Service),
/* harmony export */   "validateOutpostService": () => (/* binding */ validateOutpostService),
/* harmony export */   "validatePartition": () => (/* binding */ validatePartition),
/* harmony export */   "validateRegion": () => (/* binding */ validateRegion),
/* harmony export */   "validateAccountId": () => (/* binding */ validateAccountId),
/* harmony export */   "validateDNSHostLabel": () => (/* binding */ validateDNSHostLabel),
/* harmony export */   "getArnResources": () => (/* binding */ getArnResources),
/* harmony export */   "validateNoDualstack": () => (/* binding */ validateNoDualstack),
/* harmony export */   "validateNoFIPS": () => (/* binding */ validateNoFIPS)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 54984);

var DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/;
var IP_ADDRESS_PATTERN = /(\d+\.){3}\d+/;
var DOTS_PATTERN = /\.\./;
var DOT_PATTERN = /\./;
var S3_HOSTNAME_PATTERN = /^(.+\.)?s3[.-]([a-z0-9-]+)\./;
var S3_US_EAST_1_ALTNAME_PATTERN = /^s3(-external-1)?\.amazonaws\.com$/;
var AWS_PARTITION_SUFFIX = "amazonaws.com";
var isBucketNameOptions = function (options) { return typeof options.bucketName === "string"; };
/**
 * Get pseudo region from supplied region. For example, if supplied with `fips-us-west-2`, it returns `us-west-2`.
 * @internal
 */
var getPseudoRegion = function (region) { return (isFipsRegion(region) ? region.replace(/fips-|-fips/, "") : region); };
/**
 * Determines whether a given string is DNS compliant per the rules outlined by
 * S3. Length, capitaization, and leading dot restrictions are enforced by the
 * DOMAIN_PATTERN regular expression.
 * @internal
 *
 * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html
 */
var isDnsCompatibleBucketName = function (bucketName) {
    return DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);
};
var getRegionalSuffix = function (hostname) {
    var parts = hostname.match(S3_HOSTNAME_PATTERN);
    return [parts[2], hostname.replace(new RegExp("^" + parts[0]), "")];
};
var getSuffix = function (hostname) {
    return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname) ? ["us-east-1", AWS_PARTITION_SUFFIX] : getRegionalSuffix(hostname);
};
/**
 * Infer region and hostname suffix from a complete hostname
 * @internal
 * @param hostname - Hostname
 * @returns [Region, Hostname suffix]
 */
var getSuffixForArnEndpoint = function (hostname) {
    return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname)
        ? [hostname.replace("." + AWS_PARTITION_SUFFIX, ""), AWS_PARTITION_SUFFIX]
        : getRegionalSuffix(hostname);
};
var validateArnEndpointOptions = function (options) {
    if (options.pathStyleEndpoint) {
        throw new Error("Path-style S3 endpoint is not supported when bucket is an ARN");
    }
    if (options.accelerateEndpoint) {
        throw new Error("Accelerate endpoint is not supported when bucket is an ARN");
    }
    if (!options.tlsCompatible) {
        throw new Error("HTTPS is required when bucket is an ARN");
    }
};
var validateService = function (service) {
    if (service !== "s3" && service !== "s3-outposts") {
        throw new Error("Expect 's3' or 's3-outposts' in ARN service component");
    }
};
var validateS3Service = function (service) {
    if (service !== "s3") {
        throw new Error("Expect 's3' in Accesspoint ARN service component");
    }
};
var validateOutpostService = function (service) {
    if (service !== "s3-outposts") {
        throw new Error("Expect 's3-posts' in Outpost ARN service component");
    }
};
/**
 * Validate partition inferred from ARN is the same to `options.clientPartition`.
 * @internal
 */
var validatePartition = function (partition, options) {
    if (partition !== options.clientPartition) {
        throw new Error("Partition in ARN is incompatible, got \"" + partition + "\" but expected \"" + options.clientPartition + "\"");
    }
};
/**
 * validate region value inferred from ARN. If `options.useArnRegion` is set, it validates the region is not a FIPS
 * region. If `options.useArnRegion` is unset, it validates the region is equal to `options.clientRegion` or
 * `options.clientSigningRegion`.
 * @internal
 */
var validateRegion = function (region, options) {
    if (region === "") {
        throw new Error("ARN region is empty");
    }
    if (!options.useArnRegion &&
        !isEqualRegions(region, options.clientRegion) &&
        !isEqualRegions(region, options.clientSigningRegion)) {
        throw new Error("Region in ARN is incompatible, got " + region + " but expected " + options.clientRegion);
    }
    if (options.useArnRegion && isFipsRegion(region)) {
        throw new Error("Endpoint does not support FIPS region");
    }
};
var isFipsRegion = function (region) { return region.startsWith("fips-") || region.endsWith("-fips"); };
var isEqualRegions = function (regionA, regionB) {
    return regionA === regionB || getPseudoRegion(regionA) === regionB || regionA === getPseudoRegion(regionB);
};
/**
 * Validate an account ID
 * @internal
 */
var validateAccountId = function (accountId) {
    if (!/[0-9]{12}/.exec(accountId)) {
        throw new Error("Access point ARN accountID does not match regex '[0-9]{12}'");
    }
};
/**
 * Validate a host label according to https://tools.ietf.org/html/rfc3986#section-3.2.2
 * @internal
 */
var validateDNSHostLabel = function (label, options) {
    if (options === void 0) { options = { tlsCompatible: true }; }
    // reference: https://tools.ietf.org/html/rfc3986#section-3.2.2
    if (label.length >= 64 ||
        !/^[a-z0-9][a-z0-9.-]+[a-z0-9]$/.test(label) ||
        /(\d+\.){3}\d+/.test(label) ||
        /[.-]{2}/.test(label) ||
        ((options === null || options === void 0 ? void 0 : options.tlsCompatible) && DOT_PATTERN.test(label))) {
        throw new Error("Invalid DNS label " + label);
    }
};
/**
 * Validate and parse an Access Point ARN or Outposts ARN
 * @internal
 *
 * @param resource - The resource section of an ARN
 * @returns Access Point Name and optional Outpost ID.
 */
var getArnResources = function (resource) {
    var delimiter = resource.includes(":") ? ":" : "/";
    var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(resource.split(delimiter)), resourceType = _a[0], rest = _a.slice(1);
    if (resourceType === "accesspoint") {
        // Parse accesspoint ARN
        if (rest.length !== 1 || rest[0] === "") {
            throw new Error("Access Point ARN should have one resource accesspoint" + delimiter + "{accesspointname}");
        }
        return { accesspointName: rest[0] };
    }
    else if (resourceType === "outpost") {
        // Parse outpost ARN
        if (!rest[0] || rest[1] !== "accesspoint" || !rest[2] || rest.length !== 3) {
            throw new Error("Outpost ARN should have resource outpost" + delimiter + "{outpostId}" + delimiter + "accesspoint" + delimiter + "{accesspointName}");
        }
        var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(rest, 3), outpostId = _b[0], _ = _b[1], accesspointName = _b[2];
        return { outpostId: outpostId, accesspointName: accesspointName };
    }
    else {
        throw new Error("ARN resource should begin with 'accesspoint" + delimiter + "' or 'outpost" + delimiter + "'");
    }
};
/**
 * Throw if dual stack configuration is set to true.
 * @internal
 */
var validateNoDualstack = function (dualstackEndpoint) {
    if (dualstackEndpoint)
        throw new Error("Dualstack endpoint is not supported with Outpost");
};
/**
 * Validate region is not appended or prepended with a `fips-`
 * @internal
 */
var validateNoFIPS = function (region) {
    if (isFipsRegion(region !== null && region !== void 0 ? region : ""))
        throw new Error("FIPS region is not supported with Outpost, got " + region);
};


/***/ }),

/***/ 8552:
/*!************************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/configurations.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "resolveBucketEndpointConfig": () => (/* binding */ resolveBucketEndpointConfig),
/* harmony export */   "NODE_USE_ARN_REGION_ENV_NAME": () => (/* binding */ NODE_USE_ARN_REGION_ENV_NAME),
/* harmony export */   "NODE_USE_ARN_REGION_INI_NAME": () => (/* binding */ NODE_USE_ARN_REGION_INI_NAME),
/* harmony export */   "NODE_USE_ARN_REGION_CONFIG_OPTIONS": () => (/* binding */ NODE_USE_ARN_REGION_CONFIG_OPTIONS)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 54984);

function resolveBucketEndpointConfig(input) {
    var _a = input.bucketEndpoint, bucketEndpoint = _a === void 0 ? false : _a, _b = input.forcePathStyle, forcePathStyle = _b === void 0 ? false : _b, _c = input.useAccelerateEndpoint, useAccelerateEndpoint = _c === void 0 ? false : _c, _d = input.useDualstackEndpoint, useDualstackEndpoint = _d === void 0 ? false : _d, _e = input.useArnRegion, useArnRegion = _e === void 0 ? false : _e;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, input), { bucketEndpoint: bucketEndpoint,
        forcePathStyle: forcePathStyle,
        useAccelerateEndpoint: useAccelerateEndpoint,
        useDualstackEndpoint: useDualstackEndpoint, useArnRegion: typeof useArnRegion === "function" ? useArnRegion : function () { return Promise.resolve(useArnRegion); } });
}
var NODE_USE_ARN_REGION_ENV_NAME = "AWS_S3_USE_ARN_REGION";
var NODE_USE_ARN_REGION_INI_NAME = "s3_use_arn_region";
/**
 * Config to load useArnRegion from environment variables and shared INI files
 *
 * @api private
 */
var NODE_USE_ARN_REGION_CONFIG_OPTIONS = {
    environmentVariableSelector: function (env) {
        if (!Object.prototype.hasOwnProperty.call(env, NODE_USE_ARN_REGION_ENV_NAME))
            return undefined;
        if (env[NODE_USE_ARN_REGION_ENV_NAME] === "true")
            return true;
        if (env[NODE_USE_ARN_REGION_ENV_NAME] === "false")
            return false;
        throw new Error("Cannot load env " + NODE_USE_ARN_REGION_ENV_NAME + ". Expected \"true\" or \"false\", got " + env[NODE_USE_ARN_REGION_ENV_NAME] + ".");
    },
    configFileSelector: function (profile) {
        if (!Object.prototype.hasOwnProperty.call(profile, NODE_USE_ARN_REGION_INI_NAME))
            return undefined;
        if (profile[NODE_USE_ARN_REGION_INI_NAME] === "true")
            return true;
        if (profile[NODE_USE_ARN_REGION_INI_NAME] === "false")
            return false;
        throw new Error("Cannot load shared config entry " + NODE_USE_ARN_REGION_INI_NAME + ". Expected \"true\" or \"false\", got " + profile[NODE_USE_ARN_REGION_INI_NAME] + ".");
    },
    default: false,
};


/***/ }),

/***/ 58538:
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bucketEndpointMiddleware": () => (/* reexport safe */ _bucketEndpointMiddleware__WEBPACK_IMPORTED_MODULE_0__.bucketEndpointMiddleware),
/* harmony export */   "bucketEndpointMiddlewareOptions": () => (/* reexport safe */ _bucketEndpointMiddleware__WEBPACK_IMPORTED_MODULE_0__.bucketEndpointMiddlewareOptions),
/* harmony export */   "getBucketEndpointPlugin": () => (/* reexport safe */ _bucketEndpointMiddleware__WEBPACK_IMPORTED_MODULE_0__.getBucketEndpointPlugin),
/* harmony export */   "bucketHostname": () => (/* reexport safe */ _bucketHostname__WEBPACK_IMPORTED_MODULE_1__.bucketHostname),
/* harmony export */   "NODE_USE_ARN_REGION_CONFIG_OPTIONS": () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_ARN_REGION_CONFIG_OPTIONS),
/* harmony export */   "NODE_USE_ARN_REGION_ENV_NAME": () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_ARN_REGION_ENV_NAME),
/* harmony export */   "NODE_USE_ARN_REGION_INI_NAME": () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_2__.NODE_USE_ARN_REGION_INI_NAME),
/* harmony export */   "resolveBucketEndpointConfig": () => (/* reexport safe */ _configurations__WEBPACK_IMPORTED_MODULE_2__.resolveBucketEndpointConfig),
/* harmony export */   "getArnResources": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.getArnResources),
/* harmony export */   "getPseudoRegion": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.getPseudoRegion),
/* harmony export */   "getSuffixForArnEndpoint": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.getSuffixForArnEndpoint),
/* harmony export */   "validateOutpostService": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateOutpostService),
/* harmony export */   "validatePartition": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validatePartition),
/* harmony export */   "validateAccountId": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateAccountId),
/* harmony export */   "validateRegion": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateRegion),
/* harmony export */   "validateDNSHostLabel": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateDNSHostLabel),
/* harmony export */   "validateNoDualstack": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateNoDualstack),
/* harmony export */   "validateNoFIPS": () => (/* reexport safe */ _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__.validateNoFIPS)
/* harmony export */ });
/* harmony import */ var _bucketEndpointMiddleware__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bucketEndpointMiddleware */ 87575);
/* harmony import */ var _bucketHostname__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bucketHostname */ 73414);
/* harmony import */ var _configurations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./configurations */ 8552);
/* harmony import */ var _bucketHostnameUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bucketHostnameUtils */ 76924);






/***/ }),

/***/ 62608:
/*!***************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-expect-continue/dist/es/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addExpectContinueMiddleware": () => (/* binding */ addExpectContinueMiddleware),
/* harmony export */   "addExpectContinueMiddlewareOptions": () => (/* binding */ addExpectContinueMiddlewareOptions),
/* harmony export */   "getAddExpectContinuePlugin": () => (/* binding */ getAddExpectContinuePlugin)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 50803);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);


function addExpectContinueMiddleware(options) {
    var _this = this;
    return function (next) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(_this, void 0, void 0, function () {
        var request;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
            request = args.request;
            if (_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request) && request.body && options.runtime === "node") {
                request.headers = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, request.headers), { Expect: "100-continue" });
            }
            return [2 /*return*/, next((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args), { request: request }))];
        });
    }); }; };
}
var addExpectContinueMiddlewareOptions = {
    step: "build",
    tags: ["SET_EXPECT_HEADER", "EXPECT_HEADER"],
    name: "addExpectContinueMiddleware",
};
var getAddExpectContinuePlugin = function (options) { return ({
    applyToStack: function (clientStack) {
        clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);
    },
}); };


/***/ }),

/***/ 51862:
/*!******************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-sdk-s3/dist/es/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getValidateBucketNamePlugin": () => (/* reexport safe */ _validate_bucket_name__WEBPACK_IMPORTED_MODULE_0__.getValidateBucketNamePlugin),
/* harmony export */   "validateBucketNameMiddleware": () => (/* reexport safe */ _validate_bucket_name__WEBPACK_IMPORTED_MODULE_0__.validateBucketNameMiddleware),
/* harmony export */   "validateBucketNameMiddlewareOptions": () => (/* reexport safe */ _validate_bucket_name__WEBPACK_IMPORTED_MODULE_0__.validateBucketNameMiddlewareOptions),
/* harmony export */   "getUseRegionalEndpointPlugin": () => (/* reexport safe */ _use_regional_endpoint__WEBPACK_IMPORTED_MODULE_1__.getUseRegionalEndpointPlugin),
/* harmony export */   "useRegionalEndpointMiddleware": () => (/* reexport safe */ _use_regional_endpoint__WEBPACK_IMPORTED_MODULE_1__.useRegionalEndpointMiddleware),
/* harmony export */   "useRegionalEndpointMiddlewareOptions": () => (/* reexport safe */ _use_regional_endpoint__WEBPACK_IMPORTED_MODULE_1__.useRegionalEndpointMiddlewareOptions)
/* harmony export */ });
/* harmony import */ var _validate_bucket_name__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate-bucket-name */ 14293);
/* harmony import */ var _use_regional_endpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-regional-endpoint */ 87101);




/***/ }),

/***/ 87101:
/*!**********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-sdk-s3/dist/es/use-regional-endpoint.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useRegionalEndpointMiddleware": () => (/* binding */ useRegionalEndpointMiddleware),
/* harmony export */   "useRegionalEndpointMiddlewareOptions": () => (/* binding */ useRegionalEndpointMiddlewareOptions),
/* harmony export */   "getUseRegionalEndpointPlugin": () => (/* binding */ getUseRegionalEndpointPlugin)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 55185);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);


var useRegionalEndpointMiddleware = function (config) { return function (next) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(void 0, void 0, void 0, function () {
    var request, _a;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_b) {
        switch (_b.label) {
            case 0:
                request = args.request;
                if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request) || config.isCustomEndpoint)
                    return [2 /*return*/, next((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args))];
                if (!(request.hostname === "s3.amazonaws.com")) return [3 /*break*/, 1];
                request.hostname = "s3.us-east-1.amazonaws.com";
                return [3 /*break*/, 3];
            case 1:
                _a = "aws-global";
                return [4 /*yield*/, config.region()];
            case 2:
                if (_a === (_b.sent())) {
                    request.hostname = "s3.amazonaws.com";
                }
                _b.label = 3;
            case 3: return [2 /*return*/, next((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args))];
        }
    });
}); }; }; };
var useRegionalEndpointMiddlewareOptions = {
    step: "build",
    tags: ["USE_REGIONAL_ENDPOINT", "S3"],
    name: "useRegionalEndpointMiddleware",
};
var getUseRegionalEndpointPlugin = function (config) { return ({
    applyToStack: function (clientStack) {
        clientStack.add(useRegionalEndpointMiddleware(config), useRegionalEndpointMiddlewareOptions);
    },
}); };


/***/ }),

/***/ 14293:
/*!*********************************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-sdk-s3/dist/es/validate-bucket-name.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "validateBucketNameMiddleware": () => (/* binding */ validateBucketNameMiddleware),
/* harmony export */   "validateBucketNameMiddlewareOptions": () => (/* binding */ validateBucketNameMiddlewareOptions),
/* harmony export */   "getValidateBucketNamePlugin": () => (/* binding */ getValidateBucketNamePlugin)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 55185);
/* harmony import */ var _aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/util-arn-parser */ 33481);


function validateBucketNameMiddleware() {
    var _this = this;
    return function (next) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(_this, void 0, void 0, function () {
        var Bucket, err;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
            Bucket = args.input.Bucket;
            if (typeof Bucket === "string" && !(0,_aws_sdk_util_arn_parser__WEBPACK_IMPORTED_MODULE_0__.validate)(Bucket) && Bucket.indexOf("/") >= 0) {
                err = new Error("Bucket name shouldn't contain '/', received '" + Bucket + "'");
                err.name = "InvalidBucketName";
                throw err;
            }
            return [2 /*return*/, next((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, args))];
        });
    }); }; };
}
var validateBucketNameMiddlewareOptions = {
    step: "initialize",
    tags: ["VALIDATE_BUCKET_NAME"],
    name: "validateBucketNameMiddleware",
};
// eslint-disable-next-line @typescript-eslint/no-unused-vars
var getValidateBucketNamePlugin = function (unused) { return ({
    applyToStack: function (clientStack) {
        clientStack.add(validateBucketNameMiddleware(), validateBucketNameMiddlewareOptions);
    },
}); };


/***/ }),

/***/ 40285:
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/middleware-ssec/dist/es/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ssecMiddleware": () => (/* binding */ ssecMiddleware),
/* harmony export */   "ssecMiddlewareOptions": () => (/* binding */ ssecMiddlewareOptions),
/* harmony export */   "getSsecPlugin": () => (/* binding */ getSsecPlugin)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 26280);

function ssecMiddleware(options) {
    var _this = this;
    return function (next) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(_this, void 0, void 0, function () {
        var input, properties, properties_1, properties_1_1, prop, value, valueView, encoded, hash, _a, _b, _c, _d, e_1_1;
        var e_1, _e, _f;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_g) {
            switch (_g.label) {
                case 0:
                    input = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, args.input);
                    properties = [
                        {
                            target: "SSECustomerKey",
                            hash: "SSECustomerKeyMD5",
                        },
                        {
                            target: "CopySourceSSECustomerKey",
                            hash: "CopySourceSSECustomerKeyMD5",
                        },
                    ];
                    _g.label = 1;
                case 1:
                    _g.trys.push([1, 6, 7, 8]);
                    properties_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(properties), properties_1_1 = properties_1.next();
                    _g.label = 2;
                case 2:
                    if (!!properties_1_1.done) return [3 /*break*/, 5];
                    prop = properties_1_1.value;
                    value = input[prop.target];
                    if (!value) return [3 /*break*/, 4];
                    valueView = ArrayBuffer.isView(value)
                        ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength)
                        : typeof value === "string"
                            ? options.utf8Decoder(value)
                            : new Uint8Array(value);
                    encoded = options.base64Encoder(valueView);
                    hash = new options.md5();
                    hash.update(valueView);
                    _a = [(0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, input)];
                    _f = {}, _f[prop.target] = encoded;
                    _b = prop.hash;
                    _d = (_c = options).base64Encoder;
                    return [4 /*yield*/, hash.digest()];
                case 3:
                    input = tslib__WEBPACK_IMPORTED_MODULE_0__.__assign.apply(void 0, _a.concat([(_f[_b] = _d.apply(_c, [_g.sent()]), _f)]));
                    _g.label = 4;
                case 4:
                    properties_1_1 = properties_1.next();
                    return [3 /*break*/, 2];
                case 5: return [3 /*break*/, 8];
                case 6:
                    e_1_1 = _g.sent();
                    e_1 = { error: e_1_1 };
                    return [3 /*break*/, 8];
                case 7:
                    try {
                        if (properties_1_1 && !properties_1_1.done && (_e = properties_1.return)) _e.call(properties_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                    return [7 /*endfinally*/];
                case 8: return [2 /*return*/, next((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, args), { input: input }))];
            }
        });
    }); }; };
}
var ssecMiddlewareOptions = {
    name: "ssecMiddleware",
    step: "initialize",
    tags: ["SSE"],
};
var getSsecPlugin = function (config) { return ({
    applyToStack: function (clientStack) {
        clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);
    },
}); };


/***/ }),

/***/ 24964:
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/s3-request-presigner/dist/es/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UNSIGNED_PAYLOAD": () => (/* binding */ UNSIGNED_PAYLOAD),
/* harmony export */   "SHA256_HEADER": () => (/* binding */ SHA256_HEADER),
/* harmony export */   "ALGORITHM_QUERY_PARAM": () => (/* binding */ ALGORITHM_QUERY_PARAM),
/* harmony export */   "CREDENTIAL_QUERY_PARAM": () => (/* binding */ CREDENTIAL_QUERY_PARAM),
/* harmony export */   "AMZ_DATE_QUERY_PARAM": () => (/* binding */ AMZ_DATE_QUERY_PARAM),
/* harmony export */   "SIGNED_HEADERS_QUERY_PARAM": () => (/* binding */ SIGNED_HEADERS_QUERY_PARAM),
/* harmony export */   "EXPIRES_QUERY_PARAM": () => (/* binding */ EXPIRES_QUERY_PARAM),
/* harmony export */   "HOST_HEADER": () => (/* binding */ HOST_HEADER),
/* harmony export */   "ALGORITHM_IDENTIFIER": () => (/* binding */ ALGORITHM_IDENTIFIER)
/* harmony export */ });
var UNSIGNED_PAYLOAD = "UNSIGNED-PAYLOAD";
var SHA256_HEADER = "X-Amz-Content-Sha256";
var ALGORITHM_QUERY_PARAM = "X-Amz-Algorithm";
var CREDENTIAL_QUERY_PARAM = "X-Amz-Credential";
var AMZ_DATE_QUERY_PARAM = "X-Amz-Date";
var SIGNED_HEADERS_QUERY_PARAM = "X-Amz-SignedHeaders";
var EXPIRES_QUERY_PARAM = "X-Amz-Expires";
var HOST_HEADER = "host";
var ALGORITHM_IDENTIFIER = "AWS4-HMAC-SHA256";


/***/ }),

/***/ 57044:
/*!****************************************************************************!*\
  !*** ./node_modules/@aws-sdk/s3-request-presigner/dist/es/getSignedUrl.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getSignedUrl": () => (/* binding */ getSignedUrl)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ 9575);
/* harmony import */ var _aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/protocol-http */ 46404);
/* harmony import */ var _aws_sdk_util_format_url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aws-sdk/util-format-url */ 9385);
/* harmony import */ var _presigner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./presigner */ 97781);




var getSignedUrl = function (client, command, options) {
    if (options === void 0) { options = {}; }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(void 0, void 0, void 0, function () {
        var s3Presigner, presignInterceptMiddleware, presigned, output;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    s3Presigner = new _presigner__WEBPACK_IMPORTED_MODULE_2__.S3RequestPresigner((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, client.config));
                    presignInterceptMiddleware = function (next, context) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(void 0, void 0, void 0, function () {
                        var request, presigned;
                        var _a, _b;
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, function (_c) {
                            switch (_c.label) {
                                case 0:
                                    request = args.request;
                                    if (!_aws_sdk_protocol_http__WEBPACK_IMPORTED_MODULE_0__.HttpRequest.isInstance(request)) {
                                        throw new Error("Request to be presigned is not an valid HTTP request.");
                                    }
                                    // Retry information headers are not meaningful in presigned URLs
                                    delete request.headers["amz-sdk-invocation-id"];
                                    delete request.headers["amz-sdk-request"];
                                    return [4 /*yield*/, s3Presigner.presign(request, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, options), { signingRegion: (_a = options.signingRegion) !== null && _a !== void 0 ? _a : context["signing_region"], signingService: (_b = options.signingService) !== null && _b !== void 0 ? _b : context["signing_service"] }))];
                                case 1:
                                    presigned = _c.sent();
                                    return [2 /*return*/, {
                                            // Intercept the middleware stack by returning fake response
                                            response: {},
                                            output: {
                                                $metadata: { httpStatusCode: 200 },
                                                presigned: presigned,
                                            },
                                        }];
                            }
                        });
                    }); }; };
                    client.middlewareStack.addRelativeTo(presignInterceptMiddleware, {
                        name: "presignInterceptMiddleware",
                        relation: "before",
                        toMiddleware: "awsAuthMiddleware",
                    });
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, , 3, 4]);
                    return [4 /*yield*/, client.send(command)];
                case 2:
                    output = _a.sent();
                    //@ts-ignore the output is faked, so it's not actually OutputType
                    presigned = output.presigned;
                    return [3 /*break*/, 4];
                case 3:
                    client.middlewareStack.remove("presignInterceptMiddleware");
                    return [7 /*endfinally*/];
                case 4: return [2 /*return*/, (0,_aws_sdk_util_format_url__WEBPACK_IMPORTED_MODULE_1__.formatUrl)(presigned)];
            }
        });
    });
};


/***/ }),

/***/ 83474:
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-sdk/s3-request-presigner/dist/es/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "S3RequestPresigner": () => (/* reexport safe */ _presigner__WEBPACK_IMPORTED_MODULE_0__.S3RequestPresigner),
/* harmony export */   "getSignedUrl": () => (/* reexport safe */ _getSignedUrl__WEBPACK_IMPORTED_MODULE_1__.getSignedUrl)
/* harmony export */ });
/* harmony import */ var _presigner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./presigner */ 97781);
/* harmony import */ var _getSignedUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getSignedUrl */ 57044);




/***/ }),

/***/ 97781:
/*!*************************************************************************!*\
  !*** ./node_modules/@aws-sdk/s3-request-presigner/dist/es/presigner.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "S3RequestPresigner": () => (/* binding */ S3RequestPresigner)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 9575);
/* harmony import */ var _aws_sdk_signature_v4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/signature-v4 */ 59586);
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ 24964);



var S3RequestPresigner = /** @class */ (function () {
    function S3RequestPresigner(options) {
        var resolvedOptions = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ 
            // Allow `signingName` because we want to support usecase of supply client's resolved config
            // directly. Where service equals signingName.
            service: options.signingName || options.service || "s3", uriEscapePath: options.uriEscapePath || false }, options);
        this.signer = new _aws_sdk_signature_v4__WEBPACK_IMPORTED_MODULE_0__.SignatureV4(resolvedOptions);
    }
    S3RequestPresigner.prototype.presign = function (requestToSign, _a) {
        if (_a === void 0) { _a = {}; }
        var _b = _a.unsignableHeaders, unsignableHeaders = _b === void 0 ? new Set() : _b, options = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, ["unsignableHeaders"]);
        return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function () {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__generator)(this, function (_c) {
                unsignableHeaders.add("content-type");
                requestToSign.headers[_constants__WEBPACK_IMPORTED_MODULE_1__.SHA256_HEADER] = _constants__WEBPACK_IMPORTED_MODULE_1__.UNSIGNED_PAYLOAD;
                return [2 /*return*/, this.signer.presign(requestToSign, (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({ expiresIn: 900, unsignableHeaders: unsignableHeaders }, options))];
            });
        });
    };
    return S3RequestPresigner;
}());



/***/ }),

/***/ 22929:
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/url-parser-node/dist/es/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseUrl": () => (/* binding */ parseUrl)
/* harmony export */ });
/* harmony import */ var _aws_sdk_querystring_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/querystring-parser */ 640);
/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! url */ 55627);


var parseUrl = function (url) {
    var _a = (0,url__WEBPACK_IMPORTED_MODULE_1__.parse)(url), _b = _a.hostname, hostname = _b === void 0 ? "localhost" : _b, _c = _a.pathname, pathname = _c === void 0 ? "/" : _c, port = _a.port, _d = _a.protocol, protocol = _d === void 0 ? "https:" : _d, search = _a.search;
    var query;
    if (search) {
        query = (0,_aws_sdk_querystring_parser__WEBPACK_IMPORTED_MODULE_0__.parseQueryString)(search);
    }
    return {
        hostname: hostname,
        port: port ? parseInt(port) : undefined,
        protocol: protocol,
        path: pathname,
        query: query,
    };
};


/***/ }),

/***/ 33481:
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-arn-parser/dist/es/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "validate": () => (/* binding */ validate),
/* harmony export */   "parse": () => (/* binding */ parse),
/* harmony export */   "build": () => (/* binding */ build)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 42780);

/**
 * Validate whether a string is an ARN.
 */
var validate = function (str) {
    return typeof str === "string" && str.indexOf("arn:") === 0 && str.split(":").length >= 6;
};
/**
 * Parse an ARN string into structure with partition, service, region, accountId and resource values
 */
var parse = function (arn) {
    var segments = arn.split(":");
    if (segments.length < 6 || segments[0] !== "arn")
        throw new Error("Malformed ARN");
    var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(segments), 
    //Skip "arn" literal
    partition = _a[1], service = _a[2], region = _a[3], accountId = _a[4], resource = _a.slice(5);
    return {
        partition: partition,
        service: service,
        region: region,
        accountId: accountId,
        resource: resource.join(":"),
    };
};
/**
 * Build an ARN with service, partition, region, accountId, and resources strings
 */
var build = function (arnObject) {
    var _a = arnObject.partition, partition = _a === void 0 ? "aws" : _a, service = arnObject.service, region = arnObject.region, accountId = arnObject.accountId, resource = arnObject.resource;
    if ([service, region, accountId, resource].some(function (segment) { return typeof segment !== "string"; })) {
        throw new Error("Input ARN object is invalid");
    }
    return "arn:" + partition + ":" + service + ":" + region + ":" + accountId + ":" + resource;
};


/***/ }),

/***/ 21823:
/*!********************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-create-request/dist/es/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createRequest": () => (/* binding */ createRequest)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 41815);

function createRequest(client, command) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
        var interceptMiddleware, clientStack, handler;
        var _this = this;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
            switch (_a.label) {
                case 0:
                    interceptMiddleware = function (next) { return function (args) { return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(_this, void 0, void 0, function () {
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
                            return [2 /*return*/, { output: { request: args.request }, response: undefined }];
                        });
                    }); }; };
                    clientStack = client.middlewareStack.clone();
                    // @ts-ignore: add middleware to the last of 'build' step
                    clientStack.add(interceptMiddleware, {
                        step: "build",
                        priority: "low",
                    });
                    handler = command.resolveMiddleware(clientStack, client.config, undefined);
                    return [4 /*yield*/, handler(command).then(function (output) { return output.output.request; })];
                case 1: 
                // @ts-ignore
                return [2 /*return*/, _a.sent()];
            }
        });
    });
}


/***/ }),

/***/ 9385:
/*!****************************************************************!*\
  !*** ./node_modules/@aws-sdk/util-format-url/dist/es/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatUrl": () => (/* binding */ formatUrl)
/* harmony export */ });
/* harmony import */ var _aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aws-sdk/querystring-builder */ 16949);

function formatUrl(request) {
    var port = request.port, query = request.query;
    var protocol = request.protocol, path = request.path, hostname = request.hostname;
    if (protocol && protocol.substr(-1) !== ":") {
        protocol += ":";
    }
    if (port) {
        hostname += ":" + port;
    }
    if (path && path.charAt(0) !== "/") {
        path = "/" + path;
    }
    var queryString = query ? (0,_aws_sdk_querystring_builder__WEBPACK_IMPORTED_MODULE_0__.buildQueryString)(query) : "";
    if (queryString && queryString[0] !== "?") {
        queryString = "?" + queryString;
    }
    return protocol + "//" + hostname + path + queryString;
}


/***/ }),

/***/ 70948:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/XmlNode.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "XmlNode": () => (/* binding */ XmlNode)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ 24745);
/* harmony import */ var _escape_attribute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./escape-attribute */ 50520);


/**
 * Represents an XML node.
 */
var XmlNode = /** @class */ (function () {
    function XmlNode(name, children) {
        if (children === void 0) { children = []; }
        this.name = name;
        this.children = children;
        this.attributes = {};
    }
    XmlNode.prototype.withName = function (name) {
        this.name = name;
        return this;
    };
    XmlNode.prototype.addAttribute = function (name, value) {
        this.attributes[name] = value;
        return this;
    };
    XmlNode.prototype.addChildNode = function (child) {
        this.children.push(child);
        return this;
    };
    XmlNode.prototype.removeAttribute = function (name) {
        delete this.attributes[name];
        return this;
    };
    XmlNode.prototype.toString = function () {
        var e_1, _a;
        var hasChildren = Boolean(this.children.length);
        var xmlText = "<" + this.name;
        // add attributes
        var attributes = this.attributes;
        try {
            for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var attributeName = _c.value;
                var attribute = attributes[attributeName];
                if (typeof attribute !== "undefined" && attribute !== null) {
                    xmlText += " " + attributeName + "=\"" + (0,_escape_attribute__WEBPACK_IMPORTED_MODULE_0__.escapeAttribute)("" + attribute) + "\"";
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return (xmlText += !hasChildren ? "/>" : ">" + this.children.map(function (c) { return c.toString(); }).join("") + "</" + this.name + ">");
    };
    return XmlNode;
}());



/***/ }),

/***/ 43776:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/XmlText.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "XmlText": () => (/* binding */ XmlText)
/* harmony export */ });
/* harmony import */ var _escape_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./escape-element */ 90816);

/**
 * Represents an XML text value.
 */
var XmlText = /** @class */ (function () {
    function XmlText(value) {
        this.value = value;
    }
    XmlText.prototype.toString = function () {
        return (0,_escape_element__WEBPACK_IMPORTED_MODULE_0__.escapeElement)("" + this.value);
    };
    return XmlText;
}());



/***/ }),

/***/ 50520:
/*!***********************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/escape-attribute.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "escapeAttribute": () => (/* binding */ escapeAttribute)
/* harmony export */ });
/**
 * Escapes characters that can not be in an XML attribute.
 */
function escapeAttribute(value) {
    return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
}


/***/ }),

/***/ 90816:
/*!*********************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/escape-element.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "escapeElement": () => (/* binding */ escapeElement)
/* harmony export */ });
/**
 * Escapes characters that can not be in an XML element.
 */
function escapeElement(value) {
    return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}


/***/ }),

/***/ 67003:
/*!************************************************************!*\
  !*** ./node_modules/@aws-sdk/xml-builder/dist/es/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "XmlNode": () => (/* reexport safe */ _XmlNode__WEBPACK_IMPORTED_MODULE_0__.XmlNode),
/* harmony export */   "XmlText": () => (/* reexport safe */ _XmlText__WEBPACK_IMPORTED_MODULE_1__.XmlText)
/* harmony export */ });
/* harmony import */ var _XmlNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./XmlNode */ 70948);
/* harmony import */ var _XmlText__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XmlText */ 43776);




/***/ }),

/***/ 87508:
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;
module.exports.once = once;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }
      resolve([].slice.call(arguments));
    };

    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });
    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }
      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}


/***/ }),

/***/ 12350:
/*!******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/json2xml.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

//parse Empty Node as self closing node
const buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;

const defaultOptions = {
  attributeNamePrefix: '@_',
  attrNodeName: false,
  textNodeName: '#text',
  ignoreAttributes: true,
  cdataTagName: false,
  cdataPositionChar: '\\c',
  format: false,
  indentBy: '  ',
  supressEmptyNode: false,
  tagValueProcessor: function(a) {
    return a;
  },
  attrValueProcessor: function(a) {
    return a;
  },
};

const props = [
  'attributeNamePrefix',
  'attrNodeName',
  'textNodeName',
  'ignoreAttributes',
  'cdataTagName',
  'cdataPositionChar',
  'format',
  'indentBy',
  'supressEmptyNode',
  'tagValueProcessor',
  'attrValueProcessor',
  'rootNodeName', //when array as root
];

function Parser(options) {
  this.options = buildOptions(options, defaultOptions, props);
  if (this.options.ignoreAttributes || this.options.attrNodeName) {
    this.isAttribute = function(/*a*/) {
      return false;
    };
  } else {
    this.attrPrefixLen = this.options.attributeNamePrefix.length;
    this.isAttribute = isAttribute;
  }
  if (this.options.cdataTagName) {
    this.isCDATA = isCDATA;
  } else {
    this.isCDATA = function(/*a*/) {
      return false;
    };
  }
  this.replaceCDATAstr = replaceCDATAstr;
  this.replaceCDATAarr = replaceCDATAarr;

  this.processTextOrObjNode = processTextOrObjNode

  if (this.options.format) {
    this.indentate = indentate;
    this.tagEndChar = '>\n';
    this.newLine = '\n';
  } else {
    this.indentate = function() {
      return '';
    };
    this.tagEndChar = '>';
    this.newLine = '';
  }

  if (this.options.supressEmptyNode) {
    this.buildTextNode = buildEmptyTextNode;
    this.buildObjNode = buildEmptyObjNode;
  } else {
    this.buildTextNode = buildTextValNode;
    this.buildObjNode = buildObjectNode;
  }

  this.buildTextValNode = buildTextValNode;
  this.buildObjectNode = buildObjectNode;
}

Parser.prototype.parse = function(jObj) {
  if(Array.isArray(jObj) && this.options.rootNodeName && this.options.rootNodeName.length > 1){
    jObj = {
      [this.options.rootNodeName] : jObj
    }
  }
  return this.j2x(jObj, 0).val;
};

Parser.prototype.j2x = function(jObj, level) {
  let attrStr = '';
  let val = '';
  for (let key in jObj) {
    if (typeof jObj[key] === 'undefined') {
      // supress undefined node
    } else if (jObj[key] === null) {
      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
    } else if (jObj[key] instanceof Date) {
      val += this.buildTextNode(jObj[key], key, '', level);
    } else if (typeof jObj[key] !== 'object') {
      //premitive type
      const attr = this.isAttribute(key);
      if (attr) {
        attrStr += ' ' + attr + '="' + this.options.attrValueProcessor('' + jObj[key]) + '"';
      } else if (this.isCDATA(key)) {
        if (jObj[this.options.textNodeName]) {
          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);
        } else {
          val += this.replaceCDATAstr('', jObj[key]);
        }
      } else {
        //tag value
        if (key === this.options.textNodeName) {
          if (jObj[this.options.cdataTagName]) {
            //value will added while processing cdata
          } else {
            val += this.options.tagValueProcessor('' + jObj[key]);
          }
        } else {
          val += this.buildTextNode(jObj[key], key, '', level);
        }
      }
    } else if (Array.isArray(jObj[key])) {
      //repeated nodes
      if (this.isCDATA(key)) {
        val += this.indentate(level);
        if (jObj[this.options.textNodeName]) {
          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);
        } else {
          val += this.replaceCDATAarr('', jObj[key]);
        }
      } else {
        //nested nodes
        const arrLen = jObj[key].length;
        for (let j = 0; j < arrLen; j++) {
          const item = jObj[key][j];
          if (typeof item === 'undefined') {
            // supress undefined node
          } else if (item === null) {
            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;
          } else if (typeof item === 'object') {
            val += this.processTextOrObjNode(item, key, level)
          } else {
            val += this.buildTextNode(item, key, '', level);
          }
        }
      }
    } else {
      //nested node
      if (this.options.attrNodeName && key === this.options.attrNodeName) {
        const Ks = Object.keys(jObj[key]);
        const L = Ks.length;
        for (let j = 0; j < L; j++) {
          attrStr += ' ' + Ks[j] + '="' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '"';
        }
      } else {
        val += this.processTextOrObjNode(jObj[key], key, level)
      }
    }
  }
  return {attrStr: attrStr, val: val};
};

function processTextOrObjNode (object, key, level) {
  const result = this.j2x(object, level + 1);
  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {
    return this.buildTextNode(result.val, key, result.attrStr, level);
  } else {
    return this.buildObjNode(result.val, key, result.attrStr, level);
  }
}

function replaceCDATAstr(str, cdata) {
  str = this.options.tagValueProcessor('' + str);
  if (this.options.cdataPositionChar === '' || str === '') {
    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;
  } else {
    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);
  }
}

function replaceCDATAarr(str, cdata) {
  str = this.options.tagValueProcessor('' + str);
  if (this.options.cdataPositionChar === '' || str === '') {
    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;
  } else {
    for (let v in cdata) {
      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');
    }
    return str + this.newLine;
  }
}

function buildObjectNode(val, key, attrStr, level) {
  if (attrStr && val.indexOf('<') === -1) {
    return (
      this.indentate(level) +
      '<' +
      key +
      attrStr +
      '>' +
      val +
      //+ this.newLine
      // + this.indentate(level)
      '</' +
      key +
      this.tagEndChar
    );
  } else {
    return (
      this.indentate(level) +
      '<' +
      key +
      attrStr +
      this.tagEndChar +
      val +
      //+ this.newLine
      this.indentate(level) +
      '</' +
      key +
      this.tagEndChar
    );
  }
}

function buildEmptyObjNode(val, key, attrStr, level) {
  if (val !== '') {
    return this.buildObjectNode(val, key, attrStr, level);
  } else {
    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;
    //+ this.newLine
  }
}

function buildTextValNode(val, key, attrStr, level) {
  return (
    this.indentate(level) +
    '<' +
    key +
    attrStr +
    '>' +
    this.options.tagValueProcessor(val) +
    '</' +
    key +
    this.tagEndChar
  );
}

function buildEmptyTextNode(val, key, attrStr, level) {
  if (val !== '') {
    return this.buildTextValNode(val, key, attrStr, level);
  } else {
    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;
  }
}

function indentate(level) {
  return this.options.indentBy.repeat(level);
}

function isAttribute(name /*, options*/) {
  if (name.startsWith(this.options.attributeNamePrefix)) {
    return name.substr(this.attrPrefixLen);
  } else {
    return false;
  }
}

function isCDATA(name) {
  return name === this.options.cdataTagName;
}

//formatting
//indentation
//\n after each closing or self closing tag

module.exports = Parser;


/***/ }),

/***/ 77692:
/*!******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/nimndata.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

const char = function(a) {
  return String.fromCharCode(a);
};

const chars = {
  nilChar: char(176),
  missingChar: char(201),
  nilPremitive: char(175),
  missingPremitive: char(200),

  emptyChar: char(178),
  emptyValue: char(177), //empty Premitive

  boundryChar: char(179),

  objStart: char(198),
  arrStart: char(204),
  arrayEnd: char(185),
};

const charsArr = [
  chars.nilChar,
  chars.nilPremitive,
  chars.missingChar,
  chars.missingPremitive,
  chars.boundryChar,
  chars.emptyChar,
  chars.emptyValue,
  chars.arrayEnd,
  chars.objStart,
  chars.arrStart,
];

const _e = function(node, e_schema, options) {
  if (typeof e_schema === 'string') {
    //premitive
    if (node && node[0] && node[0].val !== undefined) {
      return getValue(node[0].val, e_schema);
    } else {
      return getValue(node, e_schema);
    }
  } else {
    const hasValidData = hasData(node);
    if (hasValidData === true) {
      let str = '';
      if (Array.isArray(e_schema)) {
        //attributes can't be repeated. hence check in children tags only
        str += chars.arrStart;
        const itemSchema = e_schema[0];
        //const itemSchemaType = itemSchema;
        const arr_len = node.length;

        if (typeof itemSchema === 'string') {
          for (let arr_i = 0; arr_i < arr_len; arr_i++) {
            const r = getValue(node[arr_i].val, itemSchema);
            str = processValue(str, r);
          }
        } else {
          for (let arr_i = 0; arr_i < arr_len; arr_i++) {
            const r = _e(node[arr_i], itemSchema, options);
            str = processValue(str, r);
          }
        }
        str += chars.arrayEnd; //indicates that next item is not array item
      } else {
        //object
        str += chars.objStart;
        const keys = Object.keys(e_schema);
        if (Array.isArray(node)) {
          node = node[0];
        }
        for (let i in keys) {
          const key = keys[i];
          //a property defined in schema can be present either in attrsMap or children tags
          //options.textNodeName will not present in both maps, take it's value from val
          //options.attrNodeName will be present in attrsMap
          let r;
          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {
            r = _e(node.attrsMap[key], e_schema[key], options);
          } else if (key === options.textNodeName) {
            r = _e(node.val, e_schema[key], options);
          } else {
            r = _e(node.child[key], e_schema[key], options);
          }
          str = processValue(str, r);
        }
      }
      return str;
    } else {
      return hasValidData;
    }
  }
};

const getValue = function(a /*, type*/) {
  switch (a) {
    case undefined:
      return chars.missingPremitive;
    case null:
      return chars.nilPremitive;
    case '':
      return chars.emptyValue;
    default:
      return a;
  }
};

const processValue = function(str, r) {
  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {
    str += chars.boundryChar;
  }
  return str + r;
};

const isAppChar = function(ch) {
  return charsArr.indexOf(ch) !== -1;
};

function hasData(jObj) {
  if (jObj === undefined) {
    return chars.missingChar;
  } else if (jObj === null) {
    return chars.nilChar;
  } else if (
    jObj.child &&
    Object.keys(jObj.child).length === 0 &&
    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)
  ) {
    return chars.emptyChar;
  } else {
    return true;
  }
}

const x2j = __webpack_require__(/*! ./xmlstr2xmlnode */ 10521);
const buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;

const convert2nimn = function(node, e_schema, options) {
  options = buildOptions(options, x2j.defaultOptions, x2j.props);
  return _e(node, e_schema, options);
};

exports.convert2nimn = convert2nimn;


/***/ }),

/***/ 5616:
/*!*******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/node2json.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const util = __webpack_require__(/*! ./util */ 30989);

const convertToJson = function(node, options, parentTagName) {
  const jObj = {};

  // when no child node or attr is present
  if (!options.alwaysCreateTextNode && (!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {
    return util.isExist(node.val) ? node.val : '';
  }

  // otherwise create a textnode if node has some text
  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {
    const asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName)
    jObj[options.textNodeName] = asArray ? [node.val] : node.val;
  }

  util.merge(jObj, node.attrsMap, options.arrayMode);

  const keys = Object.keys(node.child);
  for (let index = 0; index < keys.length; index++) {
    const tagName = keys[index];
    if (node.child[tagName] && node.child[tagName].length > 1) {
      jObj[tagName] = [];
      for (let tag in node.child[tagName]) {
        if (node.child[tagName].hasOwnProperty(tag)) {
          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));
        }
      }
    } else {
      const result = convertToJson(node.child[tagName][0], options, tagName);
      const asArray = (options.arrayMode === true && typeof result === 'object') || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);
      jObj[tagName] = asArray ? [result] : result;
    }
  }

  //add value
  return jObj;
};

exports.convertToJson = convertToJson;


/***/ }),

/***/ 40269:
/*!***********************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/node2json_str.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const util = __webpack_require__(/*! ./util */ 30989);
const buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;
const x2j = __webpack_require__(/*! ./xmlstr2xmlnode */ 10521);

//TODO: do it later
const convertToJsonString = function(node, options) {
  options = buildOptions(options, x2j.defaultOptions, x2j.props);

  options.indentBy = options.indentBy || '';
  return _cToJsonStr(node, options, 0);
};

const _cToJsonStr = function(node, options, level) {
  let jObj = '{';

  //traver through all the children
  const keys = Object.keys(node.child);

  for (let index = 0; index < keys.length; index++) {
    const tagname = keys[index];
    if (node.child[tagname] && node.child[tagname].length > 1) {
      jObj += '"' + tagname + '" : [ ';
      for (let tag in node.child[tagname]) {
        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';
      }
      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last
    } else {
      jObj += '"' + tagname + '" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';
    }
  }
  util.merge(jObj, node.attrsMap);
  //add attrsMap as new children
  if (util.isEmptyObject(jObj)) {
    return util.isExist(node.val) ? node.val : '';
  } else {
    if (util.isExist(node.val)) {
      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {
        jObj += '"' + options.textNodeName + '" : ' + stringval(node.val);
      }
    }
  }
  //add value
  if (jObj[jObj.length - 1] === ',') {
    jObj = jObj.substr(0, jObj.length - 2);
  }
  return jObj + '}';
};

function stringval(v) {
  if (v === true || v === false || !isNaN(v)) {
    return v;
  } else {
    return '"' + v + '"';
  }
}

function indentate(options, level) {
  return options.indentBy.repeat(level);
}

exports.convertToJsonString = convertToJsonString;


/***/ }),

/***/ 78642:
/*!****************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/parser.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const nodeToJson = __webpack_require__(/*! ./node2json */ 5616);
const xmlToNodeobj = __webpack_require__(/*! ./xmlstr2xmlnode */ 10521);
const x2xmlnode = __webpack_require__(/*! ./xmlstr2xmlnode */ 10521);
const buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;
const validator = __webpack_require__(/*! ./validator */ 29371);

exports.parse = function(xmlData, givenOptions = {}, validationOption) {
  if( validationOption){
    if(validationOption === true) validationOption = {}
    
    const result = validator.validate(xmlData, validationOption);
    if (result !== true) {
      throw Error( result.err.msg)
    }
  }
  if(givenOptions.parseTrueNumberOnly 
    && givenOptions.parseNodeValue !== false
    && !givenOptions.numParseOptions){
    
      givenOptions.numParseOptions = {
        leadingZeros: false,
      }
  }
  let options = buildOptions(givenOptions, x2xmlnode.defaultOptions, x2xmlnode.props);

  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)
  //print(traversableObj, "  ");
  return nodeToJson.convertToJson(traversableObj, options);
};
exports.convertTonimn = __webpack_require__(/*! ./nimndata */ 77692).convert2nimn;
exports.getTraversalObj = xmlToNodeobj.getTraversalObj;
exports.convertToJson = nodeToJson.convertToJson;
exports.convertToJsonString = __webpack_require__(/*! ./node2json_str */ 40269).convertToJsonString;
exports.validate = validator.validate;
exports.j2xParser = __webpack_require__(/*! ./json2xml */ 12350);
exports.parseToNimn = function(xmlData, schema, options) {
  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);
};


function print(xmlNode, indentation){
  if(xmlNode){
    console.log(indentation + "{")
    console.log(indentation + "  \"tagName\": \"" + xmlNode.tagname + "\", ");
    if(xmlNode.parent){
      console.log(indentation + "  \"parent\": \"" + xmlNode.parent.tagname  + "\", ");
    }
    console.log(indentation + "  \"val\": \"" + xmlNode.val  + "\", ");
    console.log(indentation + "  \"attrs\": " + JSON.stringify(xmlNode.attrsMap,null,4)  + ", ");

    if(xmlNode.child){
      console.log(indentation + "\"child\": {")
      const indentation2 = indentation + indentation;
      Object.keys(xmlNode.child).forEach( function(key) {
        const node = xmlNode.child[key];

        if(Array.isArray(node)){
          console.log(indentation +  "\""+key+"\" :[")
          node.forEach( function(item,index) {
            //console.log(indentation + " \""+index+"\" : [")
            print(item, indentation2);
          })
          console.log(indentation + "],")  
        }else{
          console.log(indentation + " \""+key+"\" : {")
          print(node, indentation2);
          console.log(indentation + "},")  
        }
      });
      console.log(indentation + "},")
    }
    console.log(indentation + "},")
  }
}


/***/ }),

/***/ 30989:
/*!**************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/util.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


const nameStartChar = ':A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
const nameChar = nameStartChar + '\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040';
const nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'
const regexName = new RegExp('^' + nameRegexp + '$');

const getAllMatches = function(string, regex) {
  const matches = [];
  let match = regex.exec(string);
  while (match) {
    const allmatches = [];
    allmatches.startIndex = regex.lastIndex - match[0].length;
    const len = match.length;
    for (let index = 0; index < len; index++) {
      allmatches.push(match[index]);
    }
    matches.push(allmatches);
    match = regex.exec(string);
  }
  return matches;
};

const isName = function(string) {
  const match = regexName.exec(string);
  return !(match === null || typeof match === 'undefined');
};

exports.isExist = function(v) {
  return typeof v !== 'undefined';
};

exports.isEmptyObject = function(obj) {
  return Object.keys(obj).length === 0;
};

/**
 * Copy all the properties of a into b.
 * @param {*} target
 * @param {*} a
 */
exports.merge = function(target, a, arrayMode) {
  if (a) {
    const keys = Object.keys(a); // will return an array of own properties
    const len = keys.length; //don't make it inline
    for (let i = 0; i < len; i++) {
      if (arrayMode === 'strict') {
        target[keys[i]] = [ a[keys[i]] ];
      } else {
        target[keys[i]] = a[keys[i]];
      }
    }
  }
};
/* exports.merge =function (b,a){
  return Object.assign(b,a);
} */

exports.getValue = function(v) {
  if (exports.isExist(v)) {
    return v;
  } else {
    return '';
  }
};

// const fakeCall = function(a) {return a;};
// const fakeCallNoReturn = function() {};

exports.buildOptions = function(options, defaultOptions, props) {
  let newOptions = {};
  if (!options) {
    return defaultOptions; //if there are not options
  }

  for (let i = 0; i < props.length; i++) {
    if (options[props[i]] !== undefined) {
      newOptions[props[i]] = options[props[i]];
    } else {
      newOptions[props[i]] = defaultOptions[props[i]];
    }
  }
  return newOptions;
};

/**
 * Check if a tag name should be treated as array
 *
 * @param tagName the node tagname
 * @param arrayMode the array mode option
 * @param parentTagName the parent tag name
 * @returns {boolean} true if node should be parsed as array
 */
exports.isTagNameInArrayMode = function (tagName, arrayMode, parentTagName) {
  if (arrayMode === false) {
    return false;
  } else if (arrayMode instanceof RegExp) {
    return arrayMode.test(tagName);
  } else if (typeof arrayMode === 'function') {
    return !!arrayMode(tagName, parentTagName);
  }

  return arrayMode === "strict";
}

exports.isName = isName;
exports.getAllMatches = getAllMatches;
exports.nameRegexp = nameRegexp;


/***/ }),

/***/ 29371:
/*!*******************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/validator.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const util = __webpack_require__(/*! ./util */ 30989);

const defaultOptions = {
  allowBooleanAttributes: false, //A tag can have attributes without any value
};

const props = ['allowBooleanAttributes'];

//const tagsPattern = new RegExp("<\\/?([\\w:\\-_\.]+)\\s*\/?>","g");
exports.validate = function (xmlData, options) {
  options = util.buildOptions(options, defaultOptions, props);

  //xmlData = xmlData.replace(/(\r\n|\n|\r)/gm,"");//make it single line
  //xmlData = xmlData.replace(/(^\s*<\?xml.*?\?>)/g,"");//Remove XML starting tag
  //xmlData = xmlData.replace(/(<!DOCTYPE[\s\w\"\.\/\-\:]+(\[.*\])*\s*>)/g,"");//Remove DOCTYPE
  const tags = [];
  let tagFound = false;

  //indicates that the root tag has been closed (aka. depth 0 has been reached)
  let reachedRoot = false;

  if (xmlData[0] === '\ufeff') {
    // check for byte order mark (BOM)
    xmlData = xmlData.substr(1);
  }

  for (let i = 0; i < xmlData.length; i++) {

    if (xmlData[i] === '<' && xmlData[i+1] === '?') {
      i+=2;
      i = readPI(xmlData,i);
      if (i.err) return i;
    }else if (xmlData[i] === '<') {
      //starting of tag
      //read until you reach to '>' avoiding any '>' in attribute value
      let tagStartPos = i;
      i++;
      
      if (xmlData[i] === '!') {
        i = readCommentAndCDATA(xmlData, i);
        continue;
      } else {
        let closingTag = false;
        if (xmlData[i] === '/') {
          //closing tag
          closingTag = true;
          i++;
        }
        //read tagname
        let tagName = '';
        for (; i < xmlData.length &&
          xmlData[i] !== '>' &&
          xmlData[i] !== ' ' &&
          xmlData[i] !== '\t' &&
          xmlData[i] !== '\n' &&
          xmlData[i] !== '\r'; i++
        ) {
          tagName += xmlData[i];
        }
        tagName = tagName.trim();
        //console.log(tagName);

        if (tagName[tagName.length - 1] === '/') {
          //self closing tag without attributes
          tagName = tagName.substring(0, tagName.length - 1);
          //continue;
          i--;
        }
        if (!validateTagName(tagName)) {
          let msg;
          if (tagName.trim().length === 0) {
            msg = "Invalid space after '<'.";
          } else {
            msg = "Tag '"+tagName+"' is an invalid name.";
          }
          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));
        }

        const result = readAttributeStr(xmlData, i);
        if (result === false) {
          return getErrorObject('InvalidAttr', "Attributes for '"+tagName+"' have open quote.", getLineNumberForPosition(xmlData, i));
        }
        let attrStr = result.value;
        i = result.index;

        if (attrStr[attrStr.length - 1] === '/') {
          //self closing tag
          const attrStrStart = i - attrStr.length;
          attrStr = attrStr.substring(0, attrStr.length - 1);
          const isValid = validateAttributeString(attrStr, options);
          if (isValid === true) {
            tagFound = true;
            //continue; //text may presents after self closing tag
          } else {
            //the result from the nested function returns the position of the error within the attribute
            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute
            //this gives us the absolute index in the entire xml, which we can use to find the line at last
            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));
          }
        } else if (closingTag) {
          if (!result.tagClosed) {
            return getErrorObject('InvalidTag', "Closing tag '"+tagName+"' doesn't have proper closing.", getLineNumberForPosition(xmlData, i));
          } else if (attrStr.trim().length > 0) {
            return getErrorObject('InvalidTag', "Closing tag '"+tagName+"' can't have attributes or invalid starting.", getLineNumberForPosition(xmlData, tagStartPos));
          } else {
            const otg = tags.pop();
            if (tagName !== otg.tagName) {
              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);
              return getErrorObject('InvalidTag',
                "Expected closing tag '"+otg.tagName+"' (opened in line "+openPos.line+", col "+openPos.col+") instead of closing tag '"+tagName+"'.",
                getLineNumberForPosition(xmlData, tagStartPos));
            }

            //when there are no more tags, we reached the root level.
            if (tags.length == 0) {
              reachedRoot = true;
            }
          }
        } else {
          const isValid = validateAttributeString(attrStr, options);
          if (isValid !== true) {
            //the result from the nested function returns the position of the error within the attribute
            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute
            //this gives us the absolute index in the entire xml, which we can use to find the line at last
            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));
          }

          //if the root level has been reached before ...
          if (reachedRoot === true) {
            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));
          } else {
            tags.push({tagName, tagStartPos});
          }
          tagFound = true;
        }

        //skip tag text value
        //It may include comments and CDATA value
        for (i++; i < xmlData.length; i++) {
          if (xmlData[i] === '<') {
            if (xmlData[i + 1] === '!') {
              //comment or CADATA
              i++;
              i = readCommentAndCDATA(xmlData, i);
              continue;
            } else if (xmlData[i+1] === '?') {
              i = readPI(xmlData, ++i);
              if (i.err) return i;
            } else{
              break;
            }
          } else if (xmlData[i] === '&') {
            const afterAmp = validateAmpersand(xmlData, i);
            if (afterAmp == -1)
              return getErrorObject('InvalidChar', "char '&' is not expected.", getLineNumberForPosition(xmlData, i));
            i = afterAmp;
          }
        } //end of reading tag text value
        if (xmlData[i] === '<') {
          i--;
        }
      }
    } else {
      if (xmlData[i] === ' ' || xmlData[i] === '\t' || xmlData[i] === '\n' || xmlData[i] === '\r') {
        continue;
      }
      return getErrorObject('InvalidChar', "char '"+xmlData[i]+"' is not expected.", getLineNumberForPosition(xmlData, i));
    }
  }

  if (!tagFound) {
    return getErrorObject('InvalidXml', 'Start tag expected.', 1);
  }else if (tags.length == 1) {
      return getErrorObject('InvalidTag', "Unclosed tag '"+tags[0].tagName+"'.", getLineNumberForPosition(xmlData, tags[0].tagStartPos));
  }else if (tags.length > 0) {
      return getErrorObject('InvalidXml', "Invalid '"+
          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\r?\n/g, '')+
          "' found.", {line: 1, col: 1});
  }

  return true;
};

/**
 * Read Processing insstructions and skip
 * @param {*} xmlData
 * @param {*} i
 */
function readPI(xmlData, i) {
  const start = i;
  for (; i < xmlData.length; i++) {
    if (xmlData[i] == '?' || xmlData[i] == ' ') {
      //tagname
      const tagname = xmlData.substr(start, i - start);
      if (i > 5 && tagname === 'xml') {
        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));
      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {
        //check if valid attribut string
        i++;
        break;
      } else {
        continue;
      }
    }
  }
  return i;
}

function readCommentAndCDATA(xmlData, i) {
  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {
    //comment
    for (i += 3; i < xmlData.length; i++) {
      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {
        i += 2;
        break;
      }
    }
  } else if (
    xmlData.length > i + 8 &&
    xmlData[i + 1] === 'D' &&
    xmlData[i + 2] === 'O' &&
    xmlData[i + 3] === 'C' &&
    xmlData[i + 4] === 'T' &&
    xmlData[i + 5] === 'Y' &&
    xmlData[i + 6] === 'P' &&
    xmlData[i + 7] === 'E'
  ) {
    let angleBracketsCount = 1;
    for (i += 8; i < xmlData.length; i++) {
      if (xmlData[i] === '<') {
        angleBracketsCount++;
      } else if (xmlData[i] === '>') {
        angleBracketsCount--;
        if (angleBracketsCount === 0) {
          break;
        }
      }
    }
  } else if (
    xmlData.length > i + 9 &&
    xmlData[i + 1] === '[' &&
    xmlData[i + 2] === 'C' &&
    xmlData[i + 3] === 'D' &&
    xmlData[i + 4] === 'A' &&
    xmlData[i + 5] === 'T' &&
    xmlData[i + 6] === 'A' &&
    xmlData[i + 7] === '['
  ) {
    for (i += 8; i < xmlData.length; i++) {
      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {
        i += 2;
        break;
      }
    }
  }

  return i;
}

const doubleQuote = '"';
const singleQuote = "'";

/**
 * Keep reading xmlData until '<' is found outside the attribute value.
 * @param {string} xmlData
 * @param {number} i
 */
function readAttributeStr(xmlData, i) {
  let attrStr = '';
  let startChar = '';
  let tagClosed = false;
  for (; i < xmlData.length; i++) {
    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {
      if (startChar === '') {
        startChar = xmlData[i];
      } else if (startChar !== xmlData[i]) {
        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa
      } else {
        startChar = '';
      }
    } else if (xmlData[i] === '>') {
      if (startChar === '') {
        tagClosed = true;
        break;
      }
    }
    attrStr += xmlData[i];
  }
  if (startChar !== '') {
    return false;
  }

  return {
    value: attrStr,
    index: i,
    tagClosed: tagClosed
  };
}

/**
 * Select all the attributes whether valid or invalid.
 */
const validAttrStrRegxp = new RegExp('(\\s*)([^\\s=]+)(\\s*=)?(\\s*([\'"])(([\\s\\S])*?)\\5)?', 'g');

//attr, ="sd", a="amit's", a="sd"b="saf", ab  cd=""

function validateAttributeString(attrStr, options) {
  //console.log("start:"+attrStr+":end");

  //if(attrStr.trim().length === 0) return true; //empty string

  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);
  const attrNames = {};

  for (let i = 0; i < matches.length; i++) {
    if (matches[i][1].length === 0) {
      //nospace before attribute name: a="sd"b="saf"
      return getErrorObject('InvalidAttr', "Attribute '"+matches[i][2]+"' has no space in starting.", getPositionFromMatch(matches[i]))
    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {
      //independent attribute: ab
      return getErrorObject('InvalidAttr', "boolean attribute '"+matches[i][2]+"' is not allowed.", getPositionFromMatch(matches[i]));
    }
    /* else if(matches[i][6] === undefined){//attribute without value: ab=
                    return { err: { code:"InvalidAttr",msg:"attribute " + matches[i][2] + " has no value assigned."}};
                } */
    const attrName = matches[i][2];
    if (!validateAttrName(attrName)) {
      return getErrorObject('InvalidAttr', "Attribute '"+attrName+"' is an invalid name.", getPositionFromMatch(matches[i]));
    }
    if (!attrNames.hasOwnProperty(attrName)) {
      //check for duplicate attribute.
      attrNames[attrName] = 1;
    } else {
      return getErrorObject('InvalidAttr', "Attribute '"+attrName+"' is repeated.", getPositionFromMatch(matches[i]));
    }
  }

  return true;
}

function validateNumberAmpersand(xmlData, i) {
  let re = /\d/;
  if (xmlData[i] === 'x') {
    i++;
    re = /[\da-fA-F]/;
  }
  for (; i < xmlData.length; i++) {
    if (xmlData[i] === ';')
      return i;
    if (!xmlData[i].match(re))
      break;
  }
  return -1;
}

function validateAmpersand(xmlData, i) {
  // https://www.w3.org/TR/xml/#dt-charref
  i++;
  if (xmlData[i] === ';')
    return -1;
  if (xmlData[i] === '#') {
    i++;
    return validateNumberAmpersand(xmlData, i);
  }
  let count = 0;
  for (; i < xmlData.length; i++, count++) {
    if (xmlData[i].match(/\w/) && count < 20)
      continue;
    if (xmlData[i] === ';')
      break;
    return -1;
  }
  return i;
}

function getErrorObject(code, message, lineNumber) {
  return {
    err: {
      code: code,
      msg: message,
      line: lineNumber.line || lineNumber,
      col: lineNumber.col,
    },
  };
}

function validateAttrName(attrName) {
  return util.isName(attrName);
}

// const startsWithXML = /^xml/i;

function validateTagName(tagname) {
  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;
}

//this function returns the line number for the character at the given index
function getLineNumberForPosition(xmlData, index) {
  const lines = xmlData.substring(0, index).split(/\r?\n/);
  return {
    line: lines.length,

    // column number is last line's length + 1, because column numbering starts at 1:
    col: lines[lines.length - 1].length + 1
  };
}

//this function returns the position of the first character of match within attrStr
function getPositionFromMatch(match) {
  return match.startIndex + match[1].length;
}


/***/ }),

/***/ 96367:
/*!*****************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/xmlNode.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


module.exports = function(tagname, parent, val) {
  this.tagname = tagname;
  this.parent = parent;
  this.child = {}; //child tags
  this.attrsMap = {}; //attributes map
  this.val = val; //text only
  this.addChild = function(child) {
    if (Array.isArray(this.child[child.tagname])) {
      //already presents
      this.child[child.tagname].push(child);
    } else {
      this.child[child.tagname] = [child];
    }
  };
};


/***/ }),

/***/ 10521:
/*!************************************************************!*\
  !*** ./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";


const util = __webpack_require__(/*! ./util */ 30989);
const buildOptions = __webpack_require__(/*! ./util */ 30989).buildOptions;
const xmlNode = __webpack_require__(/*! ./xmlNode */ 96367);
const toNumber = __webpack_require__(/*! strnum */ 36139);

const regx =
  '<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)'
  .replace(/NAME/g, util.nameRegexp);

//const tagsRegx = new RegExp("<(\\/?[\\w:\\-\._]+)([^>]*)>(\\s*"+cdataRegx+")*([^<]+)?","g");
//const tagsRegx = new RegExp("<(\\/?)((\\w*:)?([\\w:\\-\._]+))([^>]*)>([^<]*)("+cdataRegx+"([^<]*))*([^<]+)?","g");

//polyfill
if (!Number.parseInt && window.parseInt) {
  Number.parseInt = window.parseInt;
}
if (!Number.parseFloat && window.parseFloat) {
  Number.parseFloat = window.parseFloat;
}

const defaultOptions = {
  attributeNamePrefix: '@_',
  attrNodeName: false,
  textNodeName: '#text',
  ignoreAttributes: true,
  ignoreNameSpace: false,
  allowBooleanAttributes: false, //a tag can have attributes without any value
  //ignoreRootElement : false,
  parseNodeValue: true,
  parseAttributeValue: false,
  arrayMode: false,
  trimValues: true, //Trim string values of tag and attributes
  cdataTagName: false,
  cdataPositionChar: '\\c',
  numParseOptions: {
    hex: true,
    leadingZeros: true
  },
  tagValueProcessor: function(a, tagName) {
    return a;
  },
  attrValueProcessor: function(a, attrName) {
    return a;
  },
  stopNodes: [],
  alwaysCreateTextNode: false
  //decodeStrict: false,
};

exports.defaultOptions = defaultOptions;

const props = [
  'attributeNamePrefix',
  'attrNodeName',
  'textNodeName',
  'ignoreAttributes',
  'ignoreNameSpace',
  'allowBooleanAttributes',
  'parseNodeValue',
  'parseAttributeValue',
  'arrayMode',
  'trimValues',
  'cdataTagName',
  'cdataPositionChar',
  'tagValueProcessor',
  'attrValueProcessor',
  'parseTrueNumberOnly',
  'numParseOptions',
  'stopNodes',
  'alwaysCreateTextNode'
];
exports.props = props;

/**
 * Trim -> valueProcessor -> parse value
 * @param {string} tagName
 * @param {string} val
 * @param {object} options
 */
function processTagValue(tagName, val, options) {
  if (val) {
    if (options.trimValues) {
      val = val.trim();
    }
    val = options.tagValueProcessor(val, tagName);
    val = parseValue(val, options.parseNodeValue, options.numParseOptions);
  }

  return val;
}

function resolveNameSpace(tagname, options) {
  if (options.ignoreNameSpace) {
    const tags = tagname.split(':');
    const prefix = tagname.charAt(0) === '/' ? '/' : '';
    if (tags[0] === 'xmlns') {
      return '';
    }
    if (tags.length === 2) {
      tagname = prefix + tags[1];
    }
  }
  return tagname;
}

function parseValue(val, shouldParse, options) {
  if (shouldParse && typeof val === 'string') {
    //console.log(options)
    const newval = val.trim();
    if(newval === 'true' ) return true;
    else if(newval === 'false' ) return false;
    else return toNumber(val, options);
  } else {
    if (util.isExist(val)) {
      return val;
    } else {
      return '';
    }
  }
}

//TODO: change regex to capture NS
//const attrsRegx = new RegExp("([\\w\\-\\.\\:]+)\\s*=\\s*(['\"])((.|\n)*?)\\2","gm");
const attrsRegx = new RegExp('([^\\s=]+)\\s*(=\\s*([\'"])(.*?)\\3)?', 'g');

function buildAttributesMap(attrStr, options) {
  if (!options.ignoreAttributes && typeof attrStr === 'string') {
    attrStr = attrStr.replace(/\r?\n/g, ' ');
    //attrStr = attrStr || attrStr.trim();

    const matches = util.getAllMatches(attrStr, attrsRegx);
    const len = matches.length; //don't make it inline
    const attrs = {};
    for (let i = 0; i < len; i++) {
      const attrName = resolveNameSpace(matches[i][1], options);
      if (attrName.length) {
        if (matches[i][4] !== undefined) {
          if (options.trimValues) {
            matches[i][4] = matches[i][4].trim();
          }
          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);
          attrs[options.attributeNamePrefix + attrName] = parseValue(
            matches[i][4],
            options.parseAttributeValue,
            options.numParseOptions
          );
        } else if (options.allowBooleanAttributes) {
          attrs[options.attributeNamePrefix + attrName] = true;
        }
      }
    }
    if (!Object.keys(attrs).length) {
      return;
    }
    if (options.attrNodeName) {
      const attrCollection = {};
      attrCollection[options.attrNodeName] = attrs;
      return attrCollection;
    }
    return attrs;
  }
}

const getTraversalObj = function(xmlData, options) {
  xmlData = xmlData.replace(/\r\n?/g, "\n");
  options = buildOptions(options, defaultOptions, props);
  const xmlObj = new xmlNode('!xml');
  let currentNode = xmlObj;
  let textData = "";

//function match(xmlData){
  for(let i=0; i< xmlData.length; i++){
    const ch = xmlData[i];
    if(ch === '<'){
      if( xmlData[i+1] === '/') {//Closing Tag
        const closeIndex = findClosingIndex(xmlData, ">", i, "Closing Tag is not closed.")
        let tagName = xmlData.substring(i+2,closeIndex).trim();

        if(options.ignoreNameSpace){
          const colonIndex = tagName.indexOf(":");
          if(colonIndex !== -1){
            tagName = tagName.substr(colonIndex+1);
          }
        }

        /* if (currentNode.parent) {
          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);
        } */
        if(currentNode){
          if(currentNode.val){
            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData , options);
          }else{
            currentNode.val = processTagValue(tagName, textData , options);
          }
        }

        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {
          currentNode.child = []
          if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}
          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1)
        }
        currentNode = currentNode.parent;
        textData = "";
        i = closeIndex;
      } else if( xmlData[i+1] === '?') {
        i = findClosingIndex(xmlData, "?>", i, "Pi Tag is not closed.")
      } else if(xmlData.substr(i + 1, 3) === '!--') {
        i = findClosingIndex(xmlData, "-->", i, "Comment is not closed.")
      } else if( xmlData.substr(i + 1, 2) === '!D') {
        const closeIndex = findClosingIndex(xmlData, ">", i, "DOCTYPE is not closed.")
        const tagExp = xmlData.substring(i, closeIndex);
        if(tagExp.indexOf("[") >= 0){
          i = xmlData.indexOf("]>", i) + 1;
        }else{
          i = closeIndex;
        }
      }else if(xmlData.substr(i + 1, 2) === '![') {
        const closeIndex = findClosingIndex(xmlData, "]]>", i, "CDATA is not closed.") - 2
        const tagExp = xmlData.substring(i + 9,closeIndex);

        //considerations
        //1. CDATA will always have parent node
        //2. A tag with CDATA is not a leaf node so it's value would be string type.
        if(textData){
          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData , options);
          textData = "";
        }

        if (options.cdataTagName) {
          //add cdata node
          const childNode = new xmlNode(options.cdataTagName, currentNode, tagExp);
          currentNode.addChild(childNode);
          //for backtracking
          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;
          //add rest value to parent node
          if (tagExp) {
            childNode.val = tagExp;
          }
        } else {
          currentNode.val = (currentNode.val || '') + (tagExp || '');
        }

        i = closeIndex + 2;
      }else {//Opening tag
        const result = closingIndexForOpeningTag(xmlData, i+1)
        let tagExp = result.data;
        const closeIndex = result.index;
        const separatorIndex = tagExp.indexOf(" ");
        let tagName = tagExp;
        let shouldBuildAttributesMap = true;
        if(separatorIndex !== -1){
          tagName = tagExp.substr(0, separatorIndex).replace(/\s\s*$/, '');
          tagExp = tagExp.substr(separatorIndex + 1);
        }

        if(options.ignoreNameSpace){
          const colonIndex = tagName.indexOf(":");
          if(colonIndex !== -1){
            tagName = tagName.substr(colonIndex+1);
            shouldBuildAttributesMap = tagName !== result.data.substr(colonIndex + 1);
          }
        }

        //save text to parent node
        if (currentNode && textData) {
          if(currentNode.tagname !== '!xml'){
            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue( currentNode.tagname, textData, options);
          }
        }

        if(tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1){//selfClosing tag

          if(tagName[tagName.length - 1] === "/"){ //remove trailing '/'
            tagName = tagName.substr(0, tagName.length - 1);
            tagExp = tagName;
          }else{
            tagExp = tagExp.substr(0, tagExp.length - 1);
          }

          const childNode = new xmlNode(tagName, currentNode, '');
          if(tagName !== tagExp){
            childNode.attrsMap = buildAttributesMap(tagExp, options);
          }
          currentNode.addChild(childNode);
        }else{//opening tag

          const childNode = new xmlNode( tagName, currentNode );
          if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {
            childNode.startIndex=closeIndex;
          }
          if(tagName !== tagExp && shouldBuildAttributesMap){
            childNode.attrsMap = buildAttributesMap(tagExp, options);
          }
          currentNode.addChild(childNode);
          currentNode = childNode;
        }
        textData = "";
        i = closeIndex;
      }
    }else{
      textData += xmlData[i];
    }
  }
  return xmlObj;
}

function closingIndexForOpeningTag(data, i){
  let attrBoundary;
  let tagExp = "";
  for (let index = i; index < data.length; index++) {
    let ch = data[index];
    if (attrBoundary) {
        if (ch === attrBoundary) attrBoundary = "";//reset
    } else if (ch === '"' || ch === "'") {
        attrBoundary = ch;
    } else if (ch === '>') {
        return {
          data: tagExp,
          index: index
        }
    } else if (ch === '\t') {
      ch = " "
    }
    tagExp += ch;
  }
}

function findClosingIndex(xmlData, str, i, errMsg){
  const closingIndex = xmlData.indexOf(str, i);
  if(closingIndex === -1){
    throw new Error(errMsg)
  }else{
    return closingIndex + str.length - 1;
  }
}

exports.getTraversalObj = getTraversalObj;


/***/ }),

/***/ 36139:
/*!***************************************!*\
  !*** ./node_modules/strnum/strnum.js ***!
  \***************************************/
/***/ ((module) => {

const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;
const numRegex = /^([\-\+])?(0*)(\.[0-9]+([eE]\-?[0-9]+)?|[0-9]+(\.[0-9]+([eE]\-?[0-9]+)?)?)$/;
// const octRegex = /0x[a-z0-9]+/;
// const binRegex = /0x[a-z0-9]+/;


//polyfill
if (!Number.parseInt && window.parseInt) {
    Number.parseInt = window.parseInt;
}
if (!Number.parseFloat && window.parseFloat) {
    Number.parseFloat = window.parseFloat;
}

  
const consider = {
    hex :  true,
    leadingZeros: true,
    decimalPoint: "\.",
    eNotation: true
    //skipLike: /regex/
};

function toNumber(str, options = {}){
    // const options = Object.assign({}, consider);
    // if(opt.leadingZeros === false){
    //     options.leadingZeros = false;
    // }else if(opt.hex === false){
    //     options.hex = false;
    // }

    options = Object.assign({}, consider, options );
    if(!str || typeof str !== "string" ) return str;
    
    let trimmedStr  = str.trim();
    // if(trimmedStr === "0.0") return 0;
    // else if(trimmedStr === "+0.0") return 0;
    // else if(trimmedStr === "-0.0") return -0;

    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;
    else if (options.hex && hexRegex.test(trimmedStr)) {
        return Number.parseInt(trimmedStr, 16);
    // } else if (options.parseOct && octRegex.test(str)) {
    //     return Number.parseInt(val, 8);
    // }else if (options.parseBin && binRegex.test(str)) {
    //     return Number.parseInt(val, 2);
    }else{
        //separate negative sign, leading zeros, and rest number
        const match = numRegex.exec(trimmedStr);
        if(match){
            const sign = match[1];
            const leadingZeros = match[2];
            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros
            //trim ending zeros for floating number
            
            const eNotation = match[4] || match[6];
            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== ".") return str; //-0123
            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== ".") return str; //0123
            else{//no leading zeros or leading zeros are allowed
                const num = Number(trimmedStr);
                const numStr = "" + num;
                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation
                    if(options.eNotation) return num;
                    else return str;
                }else if(eNotation){ //given number has enotation
                    if(options.eNotation) return num;
                    else return str;
                }else if(trimmedStr.indexOf(".") !== -1){ //floating number
                    // const decimalPart = match[5].substr(1);
                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf("."));

                    
                    // const p = numStr.indexOf(".");
                    // const givenIntPart = numStr.substr(0,p);
                    // const givenDecPart = numStr.substr(p+1);
                    if(numStr === "0" && (numTrimmedByZeros === "") ) return num; //0.0
                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000
                    else if( sign && numStr === "-"+numTrimmedByZeros) return num;
                    else return str;
                }
                
                if(leadingZeros){
                    // if(numTrimmedByZeros === numStr){
                    //     if(options.leadingZeros) return num;
                    //     else return str;
                    // }else return str;
                    if(numTrimmedByZeros === numStr) return num;
                    else if(sign+numTrimmedByZeros === numStr) return num;
                    else return str;
                }

                if(trimmedStr === numStr) return num;
                else if(trimmedStr === sign+numStr) return num;
                // else{
                //     //number with +/- sign
                //     trimmedStr.test(/[-+][0-9]);

                // }
                return str;
            }
            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;
            
        }else{ //non-numeric string
            return str;
        }
    }
}

/**
 * 
 * @param {string} numStr without leading zeros
 * @returns 
 */
function trimZeros(numStr){
    if(numStr && numStr.indexOf(".") !== -1){//float
        numStr = numStr.replace(/0+$/, ""); //remove ending zeros
        if(numStr === ".")  numStr = "0";
        else if(numStr[0] === ".")  numStr = "0"+numStr;
        else if(numStr[numStr.length-1] === ".")  numStr = numStr.substr(0,numStr.length-1);
        return numStr;
    }
    return numStr;
}
module.exports = toNumber


/***/ }),

/***/ 31098:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 6389:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 54648:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 48583:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 38461:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 825:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 51029:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 54984:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 50803:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 55185:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 26280:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 9575:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 42780:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 41815:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 24745:
/*!*************!*\
  !*** tslib ***!
  \*************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),

/***/ 46122:
/*!**************************************************************!*\
  !*** ./node_modules/@aws-sdk/client-s3/dist/es/package.json ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"@aws-sdk/client-s3","description":"AWS SDK for JavaScript S3 Client for Node.js, Browser and React Native","version":"1.0.0-rc.4","scripts":{"clean":"npm run remove-definitions && npm run remove-dist","build-documentation":"npm run clean && typedoc ./","prepublishOnly":"yarn build","pretest":"yarn build:cjs","remove-definitions":"rimraf ./types","remove-dist":"rimraf ./dist","remove-documentation":"rimraf ./docs","test:unit":"mocha **/cjs/**/*.spec.js","test:e2e":"mocha **/cjs/**/*.ispec.js && karma start karma.conf.js","test":"yarn test:unit","build:cjs":"tsc -p tsconfig.json","build:es":"tsc -p tsconfig.es.json","build":"yarn build:cjs && yarn build:es"},"main":"./dist/cjs/index.js","types":"./types/index.d.ts","module":"./dist/es/index.js","browser":{"./runtimeConfig":"./runtimeConfig.browser"},"react-native":{"./runtimeConfig":"./runtimeConfig.native"},"sideEffects":false,"dependencies":{"@aws-crypto/sha256-browser":"^1.0.0","@aws-crypto/sha256-js":"^1.0.0","@aws-sdk/config-resolver":"1.0.0-rc.3","@aws-sdk/credential-provider-node":"1.0.0-rc.3","@aws-sdk/eventstream-serde-browser":"1.0.0-rc.3","@aws-sdk/eventstream-serde-config-resolver":"1.0.0-rc.3","@aws-sdk/eventstream-serde-node":"1.0.0-rc.3","@aws-sdk/fetch-http-handler":"1.0.0-rc.3","@aws-sdk/hash-blob-browser":"1.0.0-rc.3","@aws-sdk/hash-node":"1.0.0-rc.3","@aws-sdk/hash-stream-node":"1.0.0-rc.3","@aws-sdk/invalid-dependency":"1.0.0-rc.3","@aws-sdk/md5-js":"1.0.0-rc.3","@aws-sdk/middleware-apply-body-checksum":"1.0.0-rc.3","@aws-sdk/middleware-bucket-endpoint":"1.0.0-rc.4","@aws-sdk/middleware-content-length":"1.0.0-rc.3","@aws-sdk/middleware-expect-continue":"1.0.0-rc.3","@aws-sdk/middleware-host-header":"1.0.0-rc.3","@aws-sdk/middleware-location-constraint":"1.0.0-rc.3","@aws-sdk/middleware-logger":"1.0.0-rc.4","@aws-sdk/middleware-retry":"1.0.0-rc.4","@aws-sdk/middleware-sdk-s3":"1.0.0-rc.3","@aws-sdk/middleware-serde":"1.0.0-rc.3","@aws-sdk/middleware-signing":"1.0.0-rc.3","@aws-sdk/middleware-ssec":"1.0.0-rc.3","@aws-sdk/middleware-stack":"1.0.0-rc.4","@aws-sdk/middleware-user-agent":"1.0.0-rc.3","@aws-sdk/node-config-provider":"1.0.0-rc.3","@aws-sdk/node-http-handler":"1.0.0-rc.3","@aws-sdk/protocol-http":"1.0.0-rc.3","@aws-sdk/smithy-client":"1.0.0-rc.4","@aws-sdk/types":"1.0.0-rc.3","@aws-sdk/url-parser-browser":"1.0.0-rc.3","@aws-sdk/url-parser-node":"1.0.0-rc.3","@aws-sdk/util-base64-browser":"1.0.0-rc.3","@aws-sdk/util-base64-node":"1.0.0-rc.3","@aws-sdk/util-body-length-browser":"1.0.0-rc.3","@aws-sdk/util-body-length-node":"1.0.0-rc.3","@aws-sdk/util-user-agent-browser":"1.0.0-rc.3","@aws-sdk/util-user-agent-node":"1.0.0-rc.3","@aws-sdk/util-utf8-browser":"1.0.0-rc.3","@aws-sdk/util-utf8-node":"1.0.0-rc.3","@aws-sdk/xml-builder":"1.0.0-rc.3","fast-xml-parser":"^3.16.0","tslib":"^2.0.0"},"devDependencies":{"@aws-sdk/client-documentation-generator":"1.0.0-rc.3","@types/chai":"^4.2.11","@types/mocha":"^7.0.2","@types/node":"^12.7.5","jest":"^26.1.0","rimraf":"^3.0.0","typedoc":"^0.17.8","typescript":"~4.0.2"},"engines":{"node":">=10.0.0"},"author":{"name":"AWS SDK for JavaScript Team","url":"https://aws.amazon.com/javascript/"},"license":"Apache-2.0","homepage":"https://github.com/aws/aws-sdk-js-v3/tree/master/clients/client-s3","repository":{"type":"git","url":"https://github.com/aws/aws-sdk-js-v3.git","directory":"clients/client-s3"}}');

/***/ })

}]);
//# sourceMappingURL=default-node_modules_aws-amplify_ui-components_dist_esm_storage-helpers-48c373a0_js.js.map